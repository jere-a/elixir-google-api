# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet do
  @moduledoc """
  Snippet candidate related information and signal scores. This message is used for both snippet scoring and ranklab features recording. Next ID: 12 ================== Features populated in production =======================

  ## Attributes

  *   `brainFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetBrainFeatures.t`, *default:* `nil`) - Features from SnippetFlow in Superroot.
  *   `documentFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetDocumentFeatures.t`, *default:* `nil`) - 
  *   `experimentalFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetExperimentalFeatures.t`, *default:* `nil`) - For experimental usage, not populated yet.
  *   `finalScore` (*type:* `number()`, *default:* `nil`) - The final score of this candidate.
  *   `isMuppetSelectedSnippet` (*type:* `boolean()`, *default:* `nil`) - Is this the candidate chosen by Muppet scorer.
  *   `originalQueryTermCoverageFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures.t`, *default:* `nil`) - Query term (original terms only) coverage features.
  *   `qualityFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQualityFeatures.t`, *default:* `nil`) - 
  *   `queryFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryFeatures.t`, *default:* `nil`) - Core set of snippet features.
  *   `queryTermCoverageFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures.t`, *default:* `nil`) - Query term (including synonyms) coverage features.
  *   `radishFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetRadishFeatures.t`, *default:* `nil`) - Radish related information.
  *   `snippetInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewChosenSnippetInfo.t`, *default:* `nil`) - Information to identify current chosen snippet.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :brainFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetBrainFeatures.t() | nil,
          :documentFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetDocumentFeatures.t() | nil,
          :experimentalFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetExperimentalFeatures.t()
            | nil,
          :finalScore => number() | nil,
          :isMuppetSelectedSnippet => boolean() | nil,
          :originalQueryTermCoverageFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures.t()
            | nil,
          :qualityFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQualityFeatures.t() | nil,
          :queryFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryFeatures.t() | nil,
          :queryTermCoverageFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures.t()
            | nil,
          :radishFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetRadishFeatures.t() | nil,
          :snippetInfo =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewChosenSnippetInfo.t() | nil
        }

  field(:brainFeatures, as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetBrainFeatures)

  field(:documentFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetDocumentFeatures
  )

  field(:experimentalFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetExperimentalFeatures
  )

  field(:finalScore)
  field(:isMuppetSelectedSnippet)

  field(:originalQueryTermCoverageFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures
  )

  field(:qualityFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQualityFeatures
  )

  field(:queryFeatures, as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryFeatures)

  field(:queryTermCoverageFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures
  )

  field(:radishFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetRadishFeatures
  )

  field(:snippetInfo, as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewChosenSnippetInfo)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
