# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData do
  @moduledoc """
  Message containing information about hyper-reliable categories. go/local-hyper-reliable

  ## Attributes

  *   `commodityStrength` (*type:* `number()`, *default:* `nil`) - Whether a location is a commodity (distance is an important metric), neutral or non-commodity (distance is not important). Commodity locations are "atm", "gas station", etc. Non-commodity locations are "restaurant", "hotel", etc, and all others are neutral. The value is 1 for commodity queries, 0 for non-commodity queries, no-value for neutral queries (when the field doesn't exist in the grammar). The reason it is a float is to prepare for future changes when we expand the signal value from discrete classes to a score, and the score will be in the range of [0,1].
  *   `gcidsynsOverride` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableDataGCIDSynsOverride.t)`, *default:* `nil`) - 
  *   `hyperReliable` (*type:* `boolean()`, *default:* `nil`) - 
  *   `retrievalGcids` (*type:* `list(String.t)`, *default:* `nil`) - Categories used for retrieval and used in Artemis diversity tiers as restricts. See https://ariane.googleplex.com/launch/190585 for details.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :commodityStrength => number() | nil,
          :gcidsynsOverride =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableDataGCIDSynsOverride.t()
            )
            | nil,
          :hyperReliable => boolean() | nil,
          :retrievalGcids => list(String.t()) | nil
        }

  field(:commodityStrength)

  field(:gcidsynsOverride,
    as:
      GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableDataGCIDSynsOverride,
    type: :list
  )

  field(:hyperReliable)
  field(:retrievalGcids, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
