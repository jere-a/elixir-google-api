# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentProduct do
  @moduledoc """


  ## Attributes

  *   `aggregateRating` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ShoppingWebentityShoppingAnnotationProductRating.t`, *default:* `nil`) - 
  *   `brandEntityId` (*type:* `String.t`, *default:* `nil`) - 
  *   `catalogId` (*type:* `String.t`, *default:* `nil`) - 
  *   `globalProductClusterId` (*type:* `String.t`, *default:* `nil`) - 
  *   `images` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.ShoppingWebentityShoppingAnnotationProductImage.t)`, *default:* `nil`) - 
  *   `locale` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentLocale.t`, *default:* `nil`) - 
  *   `mokaFacet` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentMokaFacetValue.t)`, *default:* `nil`) - 
  *   `nonDisplayableDescription` (*type:* `String.t`, *default:* `nil`) - 
  *   `nonDisplayableTitle` (*type:* `String.t`, *default:* `nil`) - 
  *   `offer` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentOffer.t`, *default:* `nil`) - 
  *   `outlinkDomainRelationship` (*type:* `String.t`, *default:* `nil`) - Whether an outlink points to the same domain or off-domain. Only added if the relationship is known, and the Offer has ref_type of OUTLINK.
  *   `pblock` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentPBlock.t`, *default:* `nil`) - Client needs to make decision on which field to use when both non_displayable_title and pblock.final_title are present.
  *   `productBrowseonomyIds` (*type:* `list(integer())`, *default:* `nil`) - Product level Browseonomy ids from shopping_annotation.product.browseonomy.
  *   `productClusterMid` (*type:* `String.t`, *default:* `nil`) - 
  *   `relevanceEmbedding` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityRankembedMustangMustangRankEmbedInfo.t)`, *default:* `nil`) - Relevance embedding from ShoppingAnnotation.Product
  *   `weakGlobalProductClusterId` (*type:* `String.t`, *default:* `nil`) - Matched/Inferred weak product identity - set only if the global_product_cluster_id is missing
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aggregateRating =>
            GoogleApi.ContentWarehouse.V1.Model.ShoppingWebentityShoppingAnnotationProductRating.t()
            | nil,
          :brandEntityId => String.t() | nil,
          :catalogId => String.t() | nil,
          :globalProductClusterId => String.t() | nil,
          :images =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.ShoppingWebentityShoppingAnnotationProductImage.t()
            )
            | nil,
          :locale =>
            GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentLocale.t() | nil,
          :mokaFacet =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentMokaFacetValue.t()
            )
            | nil,
          :nonDisplayableDescription => String.t() | nil,
          :nonDisplayableTitle => String.t() | nil,
          :offer =>
            GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentOffer.t() | nil,
          :outlinkDomainRelationship => String.t() | nil,
          :pblock =>
            GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentPBlock.t() | nil,
          :productBrowseonomyIds => list(integer()) | nil,
          :productClusterMid => String.t() | nil,
          :relevanceEmbedding =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.QualityRankembedMustangMustangRankEmbedInfo.t()
            )
            | nil,
          :weakGlobalProductClusterId => String.t() | nil
        }

  field(:aggregateRating,
    as: GoogleApi.ContentWarehouse.V1.Model.ShoppingWebentityShoppingAnnotationProductRating
  )

  field(:brandEntityId)
  field(:catalogId)
  field(:globalProductClusterId)

  field(:images,
    as: GoogleApi.ContentWarehouse.V1.Model.ShoppingWebentityShoppingAnnotationProductImage,
    type: :list
  )

  field(:locale, as: GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentLocale)

  field(:mokaFacet,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentMokaFacetValue,
    type: :list
  )

  field(:nonDisplayableDescription)
  field(:nonDisplayableTitle)
  field(:offer, as: GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentOffer)
  field(:outlinkDomainRelationship)
  field(:pblock, as: GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentPBlock)
  field(:productBrowseonomyIds, type: :list)
  field(:productClusterMid)

  field(:relevanceEmbedding,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityRankembedMustangMustangRankEmbedInfo,
    type: :list
  )

  field(:weakGlobalProductClusterId)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentProduct do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentProduct.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityShoppingShoppingAttachmentProduct do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
