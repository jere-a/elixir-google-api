# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoDoViDecoderConfiguration do
  @moduledoc """
  Decoder configuration for Dolby Vision encoded by any codec. Dolby Vision defines a separate profile & level hierarchy regardless of the base codec. See Dolby Vision profiles, levels and compatibility: https://dolby.my.salesforce.com/sfc/p/#700000009YuG/a/4u000000l6G4/4R18riPaaW3gxpVx7XwyQLdEITLFjB.w.Si0LoQR5j8 Dolby Vision DASH streaming: https://professional.dolby.com/siteassets/content-creation/dolby-vision-for-content-creators/dolbyvisioninmpegdashspecification_v2_0_public_20190107.pdf HTTP Live Streaming: https://professional.dolby.com/siteassets/content-creation/dolby-vision-for-content-creators/dolby-vision-streams-within-the-http-live-streaming-format-v2.0-13-november-2018.pdf Dolby Vision bitstreams: https://professional.dolby.com/siteassets/pdfs/dolbyvisionstreamsinisobmffspecification-v2.1.2.pdf

  ## Attributes

  *   `blPresentFlag` (*type:* `boolean()`, *default:* `nil`) - If a track contains the base layer substream.
  *   `dvBlSignalCompatibilityId` (*type:* `integer()`, *default:* `nil`) - Whether the stream is compatible with other sets of standard.
  *   `dvLevel` (*type:* `integer()`, *default:* `nil`) - 
  *   `dvProfile` (*type:* `integer()`, *default:* `nil`) - 
  *   `dvVersionMajor` (*type:* `integer()`, *default:* `nil`) - Specifies the major version number of the Dolby Vision specification that the stream complies with.
  *   `dvVersionMinor` (*type:* `integer()`, *default:* `nil`) - Specifies the minor version number of the Dolby Vision specification that the stream complies with.
  *   `elPresentFlag` (*type:* `boolean()`, *default:* `nil`) - If a track contains the enhancement layer substream.
  *   `fourccTag` (*type:* `String.t`, *default:* `nil`) - dvhe, dvh1, dvav, dva1: https://screenshot.googleplex.com/ipMGXFqLX9E
  *   `rpuPresentFlag` (*type:* `boolean()`, *default:* `nil`) - If a track contains the reference picture unit substream.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blPresentFlag => boolean() | nil,
          :dvBlSignalCompatibilityId => integer() | nil,
          :dvLevel => integer() | nil,
          :dvProfile => integer() | nil,
          :dvVersionMajor => integer() | nil,
          :dvVersionMinor => integer() | nil,
          :elPresentFlag => boolean() | nil,
          :fourccTag => String.t() | nil,
          :rpuPresentFlag => boolean() | nil
        }

  field(:blPresentFlag)
  field(:dvBlSignalCompatibilityId)
  field(:dvLevel)
  field(:dvProfile)
  field(:dvVersionMajor)
  field(:dvVersionMinor)
  field(:elPresentFlag)
  field(:fourccTag)
  field(:rpuPresentFlag)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoDoViDecoderConfiguration do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoDoViDecoderConfiguration.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoDoViDecoderConfiguration do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
