# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchScholarlyArticle do
  @moduledoc """
  Data and associated metadata for a scholarly pdf article.

  ## Attributes

  *   `citation` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ScienceCitation.t`, *default:* `nil`) - Proto containing all of the Scholar Metadata for this article.
  *   `figureOrTableImage` (*type:* `String.t`, *default:* `nil`) - contains the image of the figure or table cropped out of the pdf page encoded as a PNG.
  *   `figureOrTableOcrText` (*type:* `String.t`, *default:* `nil`) - Contains the text (as detected by OCR) contained inside the image of the figure or table.
  *   `landingPageUrl` (*type:* `String.t`, *default:* `nil`) - The url of the landing page for the scholarly article.
  *   `pageNumber` (*type:* `integer()`, *default:* `nil`) - The page number where the table and figure is located in the original pdf document.
  *   `pdfDownloadUrl` (*type:* `String.t`, *default:* `nil`) - The url where the pdf file is located for the scholarly article.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :citation => GoogleApi.ContentWarehouse.V1.Model.ScienceCitation.t() | nil,
          :figureOrTableImage => String.t() | nil,
          :figureOrTableOcrText => String.t() | nil,
          :landingPageUrl => String.t() | nil,
          :pageNumber => integer() | nil,
          :pdfDownloadUrl => String.t() | nil
        }

  field(:citation, as: GoogleApi.ContentWarehouse.V1.Model.ScienceCitation)
  field(:figureOrTableImage)
  field(:figureOrTableOcrText)
  field(:landingPageUrl)
  field(:pageNumber)
  field(:pdfDownloadUrl)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchScholarlyArticle do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchScholarlyArticle.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchScholarlyArticle do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
