# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterMetadata do
  @moduledoc """
  Metadata about clusters. See go/webref-variants for details. Next available tag: 6.

  ## Attributes

  *   `isSet` (*type:* `boolean()`, *default:* `nil`) - If true, this entity is a synthetic entity created to represent a "set" in a cluster, i.e. to represent a set of entities (its children in the cluster graph) when we cannot disambiguate among them. This is similar to a KG Collection, but this is not in KG.
  *   `ruleInstance` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterProtoRuleInstance.t`, *default:* `nil`) - Explanation of where this cluster, and this entity, come from. All entities in a cluster have this, not just entities that have been created because of the cluster.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isSet => boolean() | nil,
          :ruleInstance =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterProtoRuleInstance.t() | nil
        }

  field(:isSet)

  field(:ruleInstance,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterProtoRuleInstance
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefClusterMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
