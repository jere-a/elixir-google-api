# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMarkerOpenQuestion do
  @moduledoc """
  Indicates a question, requesting the value of a specified slot. Not applicable if the requested slot simultaneously appears as an argument. See go/requested-slots for details. Next ID: 3

  ## Attributes

  *   `slotKey` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey.t`, *default:* `nil`) - Note: This is still under development and not available for general use. Contact meaning-platform-eng@ for questions.
  *   `slotName` (*type:* `list(String.t)`, *default:* `nil`) - One or multiple slots may be requested by the marker. See go/mrf-multiple-output-slots for details on requesting multiple output slots.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :slotKey =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey.t() | nil,
          :slotName => list(String.t()) | nil
        }

  field(:slotKey, as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey)
  field(:slotName, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMarkerOpenQuestion do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMarkerOpenQuestion.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMarkerOpenQuestion do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
