# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.SnippetsLeadingtextLeadingTextInfo do
  @moduledoc """


  ## Attributes

  *   `beginPos` (*type:* `integer()`, *default:* `nil`) - Leading text start position, byte offset of page content. The offset is got in ParseMaster. So it is the offset after the content is converted to UTF8.
  *   `leadingtext` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.SnippetsLeadingtextLeadingTextAnnotation.t)`, *default:* `nil`) - Note: You can also use it to save multiple leading text candidates.
  *   `text` (*type:* `String.t`, *default:* `nil`) - UTF8 text, for alignment when using reusableinfo. The text is not available in docjoins.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Type of leading text which is optimized for this type of document.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :beginPos => integer() | nil,
          :leadingtext =>
            list(GoogleApi.ContentWarehouse.V1.Model.SnippetsLeadingtextLeadingTextAnnotation.t())
            | nil,
          :text => String.t() | nil,
          :type => String.t() | nil
        }

  field(:beginPos)

  field(:leadingtext,
    as: GoogleApi.ContentWarehouse.V1.Model.SnippetsLeadingtextLeadingTextAnnotation,
    type: :list
  )

  field(:text)
  field(:type)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SnippetsLeadingtextLeadingTextInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.SnippetsLeadingtextLeadingTextInfo.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SnippetsLeadingtextLeadingTextInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
