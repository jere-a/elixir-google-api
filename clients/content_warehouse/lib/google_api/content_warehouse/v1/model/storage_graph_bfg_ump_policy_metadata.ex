# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata do
  @moduledoc """
  Metadata fields for UMP. A piece of data satisfies UMP policy if: (data access region is in the `regions_allowed` list) AND (data access time >= availability_start_timestamp) AND (data access time < availability_end_timestamp)

  ## Attributes

  *   `availabilityEnds` (*type:* `DateTime.t`, *default:* `nil`) - Timestamp after which data with this policy cannot be used.
  *   `availabilityStarts` (*type:* `DateTime.t`, *default:* `nil`) - Timestamp before which data with this policy cannot be used.
  *   `regionsAllowed` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :availabilityEnds => DateTime.t() | nil,
          :availabilityStarts => DateTime.t() | nil,
          :regionsAllowed =>
            GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t() | nil
        }

  field(:availabilityEnds, as: DateTime)
  field(:availabilityStarts, as: DateTime)
  field(:regionsAllowed, as: GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
