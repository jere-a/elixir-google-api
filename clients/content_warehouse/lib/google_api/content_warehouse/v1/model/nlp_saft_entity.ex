# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntity do
  @moduledoc """
  Named entities in the document.

  ## Attributes

  *   `antecedent` (*type:* `integer()`, *default:* `nil`) - Antecedent for entity. This is used to make coreference chains before the mentions in the document are grouped by entity.
  *   `entityType` (*type:* `String.t`, *default:* `nil`) - Entity type (e.g. PER, ORG, LOC). WARNING: This field is deprecated. go/saft-replace-deprecated-entity-type
  *   `entityTypeProbability` (*type:* `list(float())`, *default:* `nil`) - Probability distribution over entity types. These values correspond to Document.entity_label values: doc.entity[e].entity_type_probability[n] is the probability that the correct label for doc.entity[e] is doc.entity_label[n]. These probabilities sum to 1.0 (with possible rounding error). WARNING: This field is deprecated. go/saft-replace-deprecated-entity-type
  *   `gender` (*type:* `String.t`, *default:* `nil`) - Gender for entity.
  *   `info` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Application-specific information about this entity.
  *   `mention` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftMention.t)`, *default:* `nil`) - Mentions of the entity in the document.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Representative entity name.
  *   `profile` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntityProfile.t`, *default:* `nil`) - Profile for entity.
  *   `referent` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSaftReferent.t`, *default:* `nil`) - Referent information for discourse context entities that are not mentioned in the document. These can be merged with mentioned entities during analysis if they are deemed to be coreferent. Entities with referents should not have any mentions if they do not corefer with anything. For example, when adding context entities to an input document prior to SAFT analysis, those entities should have a referent and no mentions.
  *   `representativeMention` (*type:* `integer()`, *default:* `nil`) - Representative mention, as an index into mention.
  *   `salience` (*type:* `float()`, *default:* `nil`) - Score indicating the saliency (centrality) of this entity to the document.
  *   `type` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntityType.t)`, *default:* `nil`) - Entity types of the entity. These can include SAFT types (/saft/location, /saft/art, /saft/other/living_thing, etc), collections types (/collection/tv_personalities, /collection/statistical_regions, etc), and more. This refers to the type of the entity itself: in "She is on TV", "She" refers to a specific actor, with type "/collection/tv_personalities". Cf. Mention.Type, which is the type of the referring mention.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :antecedent => integer() | nil,
          :entityType => String.t() | nil,
          :entityTypeProbability => list(float()) | nil,
          :gender => String.t() | nil,
          :info => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :mention => list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftMention.t()) | nil,
          :name => String.t() | nil,
          :profile => GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntityProfile.t() | nil,
          :referent => GoogleApi.ContentWarehouse.V1.Model.NlpSaftReferent.t() | nil,
          :representativeMention => integer() | nil,
          :salience => float() | nil,
          :type => list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntityType.t()) | nil
        }

  field(:antecedent)
  field(:entityType)
  field(:entityTypeProbability, type: :list)
  field(:gender)
  field(:info, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:mention, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftMention, type: :list)
  field(:name)
  field(:profile, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntityProfile)
  field(:referent, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftReferent)
  field(:representativeMention)
  field(:salience)
  field(:type, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntityType, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntity do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntity.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftEntity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
