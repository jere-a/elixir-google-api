# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPage do
  @moduledoc """


  ## Attributes

  *   `GarbageDetectorChangeList` (*type:* `integer()`, *default:* `nil`) - If the garbage text detector was run, the changelist that the binary was sync'ed to (or -1 if unknown), and whether the settings had their production values (or false if unknown).
  *   `GarbageDetectorWasProduction` (*type:* `boolean()`, *default:* `nil`) - 
  *   `Height` (*type:* `integer()`, *default:* `nil`) - Height in pixels
  *   `HorizontalDpi` (*type:* `integer()`, *default:* `nil`) - Horizontal resolution in DPI.
  *   `Label` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoodocLabel.t`, *default:* `nil`) - 
  *   `PornScore` (*type:* `float()`, *default:* `nil`) - Score of porn classifier from analyzing images on page. Note: This should be named porn_score, but we use PornScore as the name in order to be consistent with the rest of this proto.
  *   `TextConfidence` (*type:* `integer()`, *default:* `nil`) - Page text recognition confidence. Range depends on the algorithm but should be consistent in a given volume. 0 is bad, 100 is good.
  *   `VerticalDpi` (*type:* `integer()`, *default:* `nil`) - Vertical resolution in DPI.
  *   `Width` (*type:* `integer()`, *default:* `nil`) - Width in pixels
  *   `block` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPageBlock.t)`, *default:* `nil`) - 
  *   `mergedpageinfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPageMergedPageInfo.t)`, *default:* `nil`) - 
  *   `postOcrConfidence` (*type:* `boolean()`, *default:* `nil`) - Whether page-level text confidences and other summary data were computed by PostOcrUtils instead of the now-obsolete GarbageTextDetector
  *   `stats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoodocSummaryStats.t`, *default:* `nil`) - Page level stats (font size, line spacing, etc.)
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :GarbageDetectorChangeList => integer() | nil,
          :GarbageDetectorWasProduction => boolean() | nil,
          :Height => integer() | nil,
          :HorizontalDpi => integer() | nil,
          :Label => GoogleApi.ContentWarehouse.V1.Model.GoodocLabel.t() | nil,
          :PornScore => float() | nil,
          :TextConfidence => integer() | nil,
          :VerticalDpi => integer() | nil,
          :Width => integer() | nil,
          :block => list(GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPageBlock.t()) | nil,
          :mergedpageinfo =>
            list(GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPageMergedPageInfo.t()) | nil,
          :postOcrConfidence => boolean() | nil,
          :stats => GoogleApi.ContentWarehouse.V1.Model.GoodocSummaryStats.t() | nil
        }

  field(:GarbageDetectorChangeList)
  field(:GarbageDetectorWasProduction)
  field(:Height)
  field(:HorizontalDpi)
  field(:Label, as: GoogleApi.ContentWarehouse.V1.Model.GoodocLabel)
  field(:PornScore)
  field(:TextConfidence)
  field(:VerticalDpi)
  field(:Width)
  field(:block, as: GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPageBlock, type: :list)

  field(:mergedpageinfo,
    as: GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPageMergedPageInfo,
    type: :list
  )

  field(:postOcrConfidence)
  field(:stats, as: GoogleApi.ContentWarehouse.V1.Model.GoodocSummaryStats)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPage do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPage.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocDocumentPage do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
