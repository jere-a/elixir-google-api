# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrVideoFeature do
  @moduledoc """
  Features for video level info.

  ## Attributes

  *   `averageTextAreaRatio` (*type:* `number()`, *default:* `nil`) - Average text area ratio throughout video frames. Text area ratio for a frame is defined by sum(text area) / image area.
  *   `clusterIdToFrameSize` (*type:* `map()`, *default:* `nil`) - Cluster id to the num of frames in each cluster.
  *   `durationInMs` (*type:* `integer()`, *default:* `nil`) - Total time of this video in milliseconds.
  *   `langIdDetectedLanguage` (*type:* `String.t`, *default:* `nil`) - Video level detected language by lang id, aggregated from each frame.
  *   `numClusters` (*type:* `integer()`, *default:* `nil`) - The number of ShotInfo clusters.
  *   `numFrames` (*type:* `integer()`, *default:* `nil`) - The number of video frames contained in ShotInfo cluster.
  *   `ocrDetectedLanguage` (*type:* `String.t`, *default:* `nil`) - Video level detected language, aggregated from each frame.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :averageTextAreaRatio => number() | nil,
          :clusterIdToFrameSize => map() | nil,
          :durationInMs => integer() | nil,
          :langIdDetectedLanguage => String.t() | nil,
          :numClusters => integer() | nil,
          :numFrames => integer() | nil,
          :ocrDetectedLanguage => String.t() | nil
        }

  field(:averageTextAreaRatio)
  field(:clusterIdToFrameSize, type: :map)
  field(:durationInMs)
  field(:langIdDetectedLanguage)
  field(:numClusters)
  field(:numFrames)
  field(:ocrDetectedLanguage)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrVideoFeature do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrVideoFeature.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrVideoFeature do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
