# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreOverrideBorderStatusProto do
  @moduledoc """
  This message captures a border status override. For instance, if the TYPE_BORDER feature between China and Hong Kong must be hidden on ditu.google.cn (the Chinese domain for Google Maps) but may be displayed on other domains, we will have a country override border status for "CN" set to STATUS_NEVER_DISPLAY. At least one override restriction must be defined. Currently the only supported restriction is by country code.

  ## Attributes

  *   `countryCode` (*type:* `String.t`, *default:* `nil`) - The two-letter ISO 3166-1 country code corresponding to the domain this status override applies to, when rendering the border polyline.
  *   `status` (*type:* `String.t`, *default:* `nil`) - The override status, from the BorderStatus enumeration. The value here must be different from the main status (otherwise there's no point in providing the override).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :countryCode => String.t() | nil,
          :status => String.t() | nil
        }

  field(:countryCode)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreOverrideBorderStatusProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreOverrideBorderStatusProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreOverrideBorderStatusProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
