# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAgeWeightedCoverageData do
  @moduledoc """
  Accumulated coverage data for an url using a constant half-life time. Next tag: 28

  ## Attributes

  *   `averageChanceTime` (*type:* `float()`, *default:* `nil`) - Weighted averged timestamps of the decayed chances.
  *   `chances` (*type:* `float()`, *default:* `nil`) - Numbers below are all total in the decayed manner. To get rate of impression/clicks, divide by chances.
  *   `clicksBad` (*type:* `float()`, *default:* `nil`) - 
  *   `clicksGood` (*type:* `float()`, *default:* `nil`) - 
  *   `clicksImage` (*type:* `float()`, *default:* `nil`) - 
  *   `clicksTotal` (*type:* `float()`, *default:* `nil`) - 
  *   `clicksUnclassified` (*type:* `float()`, *default:* `nil`) - 
  *   `coverageTimestamp` (*type:* `String.t`, *default:* `nil`) - Epoch seconds at which this weighted coverage data was calculated.
  *   `ctrWeightedImpressions` (*type:* `float()`, *default:* `nil`) - 
  *   `dwells` (*type:* `float()`, *default:* `nil`) - Dwells from KnowledgePanel and WebAnswers.
  *   `firstBaseCoverageTimestamp` (*type:* `String.t`, *default:* `nil`) - Epoch seconds at which this url first gets coverage in BASE.
  *   `firstCoveragePagerankNs` (*type:* `integer()`, *default:* `nil`) - The pagerank when the url was serving for the first time.
  *   `firstCoverageTimestamp` (*type:* `String.t`, *default:* `nil`) - Epoch seconds at which this url first gets coverage data.
  *   `firstseen` (*type:* `String.t`, *default:* `nil`) - 
  *   `impressions` (*type:* `float()`, *default:* `nil`) - 
  *   `intervalData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAdaptiveIntervalData.t`, *default:* `nil`) - Interval Data to track the average time between clicks_total, clicks_good, and ctr_weighted_impression.
  *   `language` (*type:* `integer()`, *default:* `nil`) - 
  *   `lastDwellDateInDays` (*type:* `integer()`, *default:* `nil`) - Indicates the date when this document received the last KnowledgePanel or WebAnswer dwell. Note: The date is identified in terms of number of days since Epoch.
  *   `lastGoodClickDateInDays` (*type:* `integer()`, *default:* `nil`) - Indicates the date when this document received the last good click. Note: The date is identified in terms of number of days since Epoch.
  *   `lastImpressionDateInDays` (*type:* `integer()`, *default:* `nil`) - Indicates the date when this document received the last impression. Note: The date is identified in terms of number of days since Epoch.
  *   `lastLuDwellDateInDays` (*type:* `integer()`, *default:* `nil`) - Indicates the date when this document received the last LocalUniversal dwell. Note: The date is identified in terms of number of days since Epoch.
  *   `lastPseudoImpressionsDateInDays` (*type:* `integer()`, *default:* `nil`) - Indicates the date when this document received the last pseudo-impression. I.e., when it was retrieved as a result but GWS would not show it because of the document's age in the index. Note: The date is identified in terms of number of days since Epoch.
  *   `luDwells` (*type:* `float()`, *default:* `nil`) - Dwells from LocalUniversal.
  *   `repid` (*type:* `String.t`, *default:* `nil`) - Repid in Alexandria pipeline.
  *   `totalChances` (*type:* `String.t`, *default:* `nil`) - Total number of chances on this urls (not decayed).
  *   `url` (*type:* `String.t`, *default:* `nil`) - 
  *   `urlfp` (*type:* `String.t`, *default:* `nil`) - Temporary variable, only used during mapreduce.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :averageChanceTime => float() | nil,
          :chances => float() | nil,
          :clicksBad => float() | nil,
          :clicksGood => float() | nil,
          :clicksImage => float() | nil,
          :clicksTotal => float() | nil,
          :clicksUnclassified => float() | nil,
          :coverageTimestamp => String.t() | nil,
          :ctrWeightedImpressions => float() | nil,
          :dwells => float() | nil,
          :firstBaseCoverageTimestamp => String.t() | nil,
          :firstCoveragePagerankNs => integer() | nil,
          :firstCoverageTimestamp => String.t() | nil,
          :firstseen => String.t() | nil,
          :impressions => float() | nil,
          :intervalData =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAdaptiveIntervalData.t()
            | nil,
          :language => integer() | nil,
          :lastDwellDateInDays => integer() | nil,
          :lastGoodClickDateInDays => integer() | nil,
          :lastImpressionDateInDays => integer() | nil,
          :lastLuDwellDateInDays => integer() | nil,
          :lastPseudoImpressionsDateInDays => integer() | nil,
          :luDwells => float() | nil,
          :repid => String.t() | nil,
          :totalChances => String.t() | nil,
          :url => String.t() | nil,
          :urlfp => String.t() | nil
        }

  field(:averageChanceTime)
  field(:chances)
  field(:clicksBad)
  field(:clicksGood)
  field(:clicksImage)
  field(:clicksTotal)
  field(:clicksUnclassified)
  field(:coverageTimestamp)
  field(:ctrWeightedImpressions)
  field(:dwells)
  field(:firstBaseCoverageTimestamp)
  field(:firstCoveragePagerankNs)
  field(:firstCoverageTimestamp)
  field(:firstseen)
  field(:impressions)

  field(:intervalData,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAdaptiveIntervalData
  )

  field(:language)
  field(:lastDwellDateInDays)
  field(:lastGoodClickDateInDays)
  field(:lastImpressionDateInDays)
  field(:lastLuDwellDateInDays)
  field(:lastPseudoImpressionsDateInDays)
  field(:luDwells)
  field(:repid)
  field(:totalChances)
  field(:url)
  field(:urlfp)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAgeWeightedCoverageData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAgeWeightedCoverageData.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorAgeWeightedCoverageData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
