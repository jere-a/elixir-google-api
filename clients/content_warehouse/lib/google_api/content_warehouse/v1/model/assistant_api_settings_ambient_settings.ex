# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsAmbientSettings do
  @moduledoc """


  ## Attributes

  *   `anyUserHasSetPersonalPhotos` (*type:* `boolean()`, *default:* `nil`) - Whether any user sets personal photos on this device. See go/ambient-setting-in-assistant-design.
  *   `recentHighlightsEnabled` (*type:* `boolean()`, *default:* `nil`) - Whether or not the user's current selection for their ambient photo frame includes the auto-generated "Recent Highlights" album. This is used to determine which users to display the go/opa-photos-memories-tile. See go/opa-photo-memories-imax-optin for more discussion on why this bit was created.
  *   `showPersonalPhotoData` (*type:* `boolean()`, *default:* `nil`) - Whether to enable the personal photo data in the ambient settings: https://screenshot.googleplex.com/Wd4OFkQfOyF See go/opa-photos-ambient-location-date-dd#heading=h.5x4iaouuiett for explanation.
  *   `showPersonalPhotos` (*type:* `boolean()`, *default:* `nil`) - Whether current user sets personal photos on this device. See go/ambient-setting-in-assistant-design.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :anyUserHasSetPersonalPhotos => boolean() | nil,
          :recentHighlightsEnabled => boolean() | nil,
          :showPersonalPhotoData => boolean() | nil,
          :showPersonalPhotos => boolean() | nil
        }

  field(:anyUserHasSetPersonalPhotos)
  field(:recentHighlightsEnabled)
  field(:showPersonalPhotoData)
  field(:showPersonalPhotos)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsAmbientSettings do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsAmbientSettings.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsAmbientSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
