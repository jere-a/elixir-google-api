# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiOutputRestrictions do
  @moduledoc """
  These are user configurable permissions representing what the device is allowed to output. Next ID: 11

  ## Attributes

  *   `googlePhotoContent` (*type:* `String.t`, *default:* `nil`) - The type of Google Photo content which the device can output.
  *   `guestAccessOutput` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiGuestAccessOutput.t`, *default:* `nil`) - Access settings for guests.
  *   `personalData` (*type:* `String.t`, *default:* `nil`) - The level of personal data which the device can output. See go/personal-readout for detail.
  *   `proactiveNotificationOutput` (*type:* `String.t`, *default:* `nil`) - This controls if the server can proactively send notification to users, and it does not affect scenarios that users ask for information. The notification may include TTS and lights. It could be only lights for chirp.
  *   `proactiveOutput` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiProactiveOutput.t`, *default:* `nil`) - Restrictions on displaying and interacting with content on proactive surfaces (e.g. Dragonglass home screen). Note: NEVER access this field of OutputRestrictions directly, use the code in assistant/assistant_server/settings/device/device_settings_util.h instead.
  *   `youtubeAutoplayRestriction` (*type:* `String.t`, *default:* `nil`) - Whether YouTube autoplay is allowed for queries from the user to this device. See go/assistant-youtube-settings for details.
  *   `youtubeContent` (*type:* `String.t`, *default:* `nil`) - The type of YouTube content which the device can output.
  *   `youtubeTvContent` (*type:* `String.t`, *default:* `nil`) - The type of YouTube TV content which the device can output.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :googlePhotoContent => String.t() | nil,
          :guestAccessOutput =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiGuestAccessOutput.t() | nil,
          :personalData => String.t() | nil,
          :proactiveNotificationOutput => String.t() | nil,
          :proactiveOutput =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiProactiveOutput.t() | nil,
          :youtubeAutoplayRestriction => String.t() | nil,
          :youtubeContent => String.t() | nil,
          :youtubeTvContent => String.t() | nil
        }

  field(:googlePhotoContent)
  field(:guestAccessOutput, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiGuestAccessOutput)
  field(:personalData)
  field(:proactiveNotificationOutput)
  field(:proactiveOutput, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiProactiveOutput)
  field(:youtubeAutoplayRestriction)
  field(:youtubeContent)
  field(:youtubeTvContent)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiOutputRestrictions do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiOutputRestrictions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiOutputRestrictions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
