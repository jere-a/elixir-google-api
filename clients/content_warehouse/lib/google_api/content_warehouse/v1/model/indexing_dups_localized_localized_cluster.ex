# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedCluster do
  @moduledoc """


  ## Attributes

  *   `boostSourceBlocker` (*type:* `boolean()`, *default:* `nil`) - Defined as a source-blocker, a result which can be a boost target but should itself not be boosted (e.g. roboted documents). For more details on source and target blocking, please read through the code for quality/twiddler/impls/PROTECTED/local_result_twiddler_v2.cc
  *   `cluster` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterCluster.t)`, *default:* `nil`) - 
  *   `deprecatedHreflangInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo.t`, *default:* `nil`) - Since July 2014 those two fiels are no longer populated, the data is stored in the TargetLinkSets instead. The deprecated fields contain values only for docs which have not been processed since July 2014.
  *   `deprecatedOutlinksInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo.t`, *default:* `nil`) - 
  *   `documentLanguage` (*type:* `String.t`, *default:* `nil`) - The language of this document (as detected by on-page language detection, not influenced by external anchor signals or other indirect conclusions).
  *   `hreflangTargetLink` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets.t`, *default:* `nil`) - 
  *   `inbodyTargetLink` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets.t`, *default:* `nil`) - 
  *   `outlinksTargetLink` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets.t`, *default:* `nil`) - 
  *   `sitedupRuleId` (*type:* `list(String.t)`, *default:* `nil`) - The list of Sitedup rule IDs for this specific URL. The value is only populated if the URL has at least one localized cluster fulfilling the following conditions: - spans more than one host - does not have filtering enabled due to other input (e.g. due to being a hreflang cluster).
  *   `warningMessage` (*type:* `list(String.t)`, *default:* `nil`) - A warning indicator that a problem has occurred, e.g. cross-domain links being filtered early. The warning is just presented for debugging purposes.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boostSourceBlocker => boolean() | nil,
          :cluster =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterCluster.t()
            )
            | nil,
          :deprecatedHreflangInfo =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo.t()
            | nil,
          :deprecatedOutlinksInfo =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo.t()
            | nil,
          :documentLanguage => String.t() | nil,
          :hreflangTargetLink =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets.t()
            | nil,
          :inbodyTargetLink =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets.t()
            | nil,
          :outlinksTargetLink =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets.t()
            | nil,
          :sitedupRuleId => list(String.t()) | nil,
          :warningMessage => list(String.t()) | nil
        }

  field(:boostSourceBlocker)

  field(:cluster,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterCluster,
    type: :list
  )

  field(:deprecatedHreflangInfo,
    as:
      GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo
  )

  field(:deprecatedOutlinksInfo,
    as:
      GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo
  )

  field(:documentLanguage)

  field(:hreflangTargetLink,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets
  )

  field(:inbodyTargetLink,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets
  )

  field(:outlinksTargetLink,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedClusterTargetLinkSets
  )

  field(:sitedupRuleId, type: :list)
  field(:warningMessage, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedCluster do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedCluster.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingDupsLocalizedLocalizedCluster do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
