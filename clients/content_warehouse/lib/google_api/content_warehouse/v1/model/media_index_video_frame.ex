# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.MediaIndexVideoFrame do
  @moduledoc """
  Data about a frame associated with the video.

  ## Attributes

  *   `docid` (*type:* `String.t`, *default:* `nil`) - The canonical docid of the frame.
  *   `frameIdentifier` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MediaIndexFrameIdentifier.t`, *default:* `nil`) - 
  *   `regions` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.MediaIndexRegion.t)`, *default:* `nil`) - Metadata associated with regions within this frame.
  *   `starburstFeaturesV4` (*type:* `String.t`, *default:* `nil`) - Starburst v4 embedding and tokens.
  *   `starburstTokensV4` (*type:* `list(String.t)`, *default:* `nil`) - Note: due to the migration to Golden7-source Starburst v4 embedding, no starburst_tokens_v4 will be provided in video content corpus (go/video-content-corpus). But this field is kept in case other purposes may still use it in the proto.
  *   `thumbnailType` (*type:* `list(String.t)`, *default:* `nil`) - Set of available thumbnail types for this frame. Should be valid image_base.ThumbnailType values (enumerated at http://google3/image/base/thumbnail-type.proto).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :docid => String.t() | nil,
          :frameIdentifier =>
            GoogleApi.ContentWarehouse.V1.Model.MediaIndexFrameIdentifier.t() | nil,
          :regions => list(GoogleApi.ContentWarehouse.V1.Model.MediaIndexRegion.t()) | nil,
          :starburstFeaturesV4 => String.t() | nil,
          :starburstTokensV4 => list(String.t()) | nil,
          :thumbnailType => list(String.t()) | nil
        }

  field(:docid)
  field(:frameIdentifier, as: GoogleApi.ContentWarehouse.V1.Model.MediaIndexFrameIdentifier)
  field(:regions, as: GoogleApi.ContentWarehouse.V1.Model.MediaIndexRegion, type: :list)
  field(:starburstFeaturesV4)
  field(:starburstTokensV4, type: :list)
  field(:thumbnailType, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.MediaIndexVideoFrame do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.MediaIndexVideoFrame.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.MediaIndexVideoFrame do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
