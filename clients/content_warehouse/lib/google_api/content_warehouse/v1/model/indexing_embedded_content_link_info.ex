# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentLinkInfo do
  @moduledoc """
  Information about one embedded link. Next tag: 18

  ## Attributes

  *   `contentLength` (*type:* `integer()`, *default:* `nil`) - Size of the HTTP body (payload of the HTTP response, excluding headers), pre-decompression. Equal to the value of the Content-Length header if any. NOTE: if this proto is converted to from ReferencedResource, we have to use the size of the full HTTP response (i.e. http_response_length) as an approximation, as we could not get the size of HTTP headers.
  *   `contentType` (*type:* `integer()`, *default:* `nil`) - 
  *   `crawlDuration` (*type:* `integer()`, *default:* `nil`) - Time spent downloading this resource, in milliseconds. Not a timestamp!
  *   `crawlStatus` (*type:* `integer()`, *default:* `nil`) - Enum values for crawl_status are defined in indexing/converter/proto/converter.proto
  *   `crawlTimestamp` (*type:* `integer()`, *default:* `nil`) - 
  *   `deprecatedRedirect` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `fetchSourceInfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.WirelessTranscoderFetchFetchSourceInfo.t)`, *default:* `nil`) - Where this resource comes from.
  *   `fetchStatus` (*type:* `GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchStatus.t`, *default:* `nil`) - Fetch status from trawler.
  *   `fetchUrlResponseMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentFetchUrlResponseMetadata.t`, *default:* `nil`) - Populated from embedded-content fetch server.
  *   `frd` (*type:* `GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyData.t`, *default:* `nil`) - FetchReplyData from trawler.
  *   `httpResponseLength` (*type:* `integer()`, *default:* `nil`) - Size of the full HTTP response (headers and body pre-decompression). Semantically equal to content_length plus size of the HTTP headers.
  *   `isCacheable` (*type:* `boolean()`, *default:* `nil`) - 
  *   `isRobotedContentFromFastnet` (*type:* `boolean()`, *default:* `nil`) - 
  *   `uncompressedContentLength` (*type:* `integer()`, *default:* `nil`) - Size of the HTTP body (payload of the HTTP response, excluding headers), post-decompression. Equal to content_length if the body was not compressed to begin with. NOTE: if this proto is converted to from ReferencedResource, we have to use the size of the full HTTP response as an approximation, as we could not get the size of HTTP headers.
  *   `url` (*type:* `String.t`, *default:* `nil`) - 
  *   `webkitFetchMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoWebKitFetchMetadata.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contentLength => integer() | nil,
          :contentType => integer() | nil,
          :crawlDuration => integer() | nil,
          :crawlStatus => integer() | nil,
          :crawlTimestamp => integer() | nil,
          :deprecatedRedirect => list(String.t()) | nil,
          :fetchSourceInfo =>
            list(GoogleApi.ContentWarehouse.V1.Model.WirelessTranscoderFetchFetchSourceInfo.t())
            | nil,
          :fetchStatus => GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchStatus.t() | nil,
          :fetchUrlResponseMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentFetchUrlResponseMetadata.t()
            | nil,
          :frd => GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyData.t() | nil,
          :httpResponseLength => integer() | nil,
          :isCacheable => boolean() | nil,
          :isRobotedContentFromFastnet => boolean() | nil,
          :uncompressedContentLength => integer() | nil,
          :url => String.t() | nil,
          :webkitFetchMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoWebKitFetchMetadata.t()
            | nil
        }

  field(:contentLength)
  field(:contentType)
  field(:crawlDuration)
  field(:crawlStatus)
  field(:crawlTimestamp)
  field(:deprecatedRedirect, type: :list)

  field(:fetchSourceInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.WirelessTranscoderFetchFetchSourceInfo,
    type: :list
  )

  field(:fetchStatus, as: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchStatus)

  field(:fetchUrlResponseMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentFetchUrlResponseMetadata
  )

  field(:frd, as: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyData)
  field(:httpResponseLength)
  field(:isCacheable)
  field(:isRobotedContentFromFastnet)
  field(:uncompressedContentLength)
  field(:url)

  field(:webkitFetchMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoWebKitFetchMetadata
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentLinkInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentLinkInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentLinkInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
