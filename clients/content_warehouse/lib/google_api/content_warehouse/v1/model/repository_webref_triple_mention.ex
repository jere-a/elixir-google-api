# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefTripleMention do
  @moduledoc """


  ## Attributes

  *   `predMention` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention.t`, *default:* `nil`) - Document mention of the predicate
  *   `scopeBegin` (*type:* `integer()`, *default:* `nil`) - The [begin, end) byte offset of the document scope where this triple was annotated. This corresponds to a table row or a text sentence where the triple was identified. The sub_mention can be outside the scope when the subject is inferred from the table title.
  *   `scopeEnd` (*type:* `integer()`, *default:* `nil`) - 
  *   `scopeFprint` (*type:* `String.t`, *default:* `nil`) - Fingerprint2011 of space-joined SAFT tokens in the scope.
  *   `stuff` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Generic container to hold additional data such as triple scoped signals. Data that can be stored in this field and their TypeIds: repository_webref::universal::webit::ScopeSignals (TypeId 192754198), defined in repository/webref/universal/processors/understanding/webit.proto
  *   `subMention` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention.t`, *default:* `nil`) - Document mention of the subject
  *   `valueMention` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention.t`, *default:* `nil`) - Document mention of the value
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :predMention =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention.t() | nil,
          :scopeBegin => integer() | nil,
          :scopeEnd => integer() | nil,
          :scopeFprint => String.t() | nil,
          :stuff => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :subMention =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention.t() | nil,
          :valueMention =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention.t() | nil
        }

  field(:predMention, as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention)
  field(:scopeBegin)
  field(:scopeEnd)
  field(:scopeFprint)
  field(:stuff, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:subMention, as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention)
  field(:valueMention, as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMention)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefTripleMention do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefTripleMention.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefTripleMention do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
