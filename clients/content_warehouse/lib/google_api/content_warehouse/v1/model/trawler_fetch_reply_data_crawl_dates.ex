# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataCrawlDates do
  @moduledoc """
  Reuse information returned if UrlState == CRAWLED, specifying when we may have reused from cache. See also ReuseInfo below. NOTE: Please use the CrawlTimes below. CrawlDates is deprecated. use CrawlTimes instead!

  ## Attributes

  *   `NotChangedDate` (*type:* `integer()`, *default:* `nil`) - fetched from the web. Timestamp indicates when
  *   `OriginalCrawlDate` (*type:* `integer()`, *default:* `nil`) - Timestamp when the page was
  *   `ReuseDate` (*type:* `integer()`, *default:* `nil`) - the page was last checked but found to be the same as before. If set, timestamp to indicate
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :NotChangedDate => integer() | nil,
          :OriginalCrawlDate => integer() | nil,
          :ReuseDate => integer() | nil
        }

  field(:NotChangedDate)
  field(:OriginalCrawlDate)
  field(:ReuseDate)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataCrawlDates do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataCrawlDates.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataCrawlDates do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
