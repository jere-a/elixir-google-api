# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CompositeDocIncludedContent do
  @moduledoc """


  ## Attributes

  *   `SourceTypeBitfield` (*type:* `String.t`, *default:* `nil`) - Indicate how this content came to be included. Legal values are constructed by bitwise-OR-ing values from the included_content::SourceType enum. Default SourceTypeBitfield = included_content::INCLUDED_FRAME
  *   `includedDoc` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GDocumentBase.t`, *default:* `nil`) - 
  *   `linkUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `perDocData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.PerDocData.t`, *default:* `nil`) - 
  *   `properties` (*type:* `GoogleApi.ContentWarehouse.V1.Model.DocProperties.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :SourceTypeBitfield => String.t() | nil,
          :includedDoc => GoogleApi.ContentWarehouse.V1.Model.GDocumentBase.t() | nil,
          :linkUrl => String.t() | nil,
          :perDocData => GoogleApi.ContentWarehouse.V1.Model.PerDocData.t() | nil,
          :properties => GoogleApi.ContentWarehouse.V1.Model.DocProperties.t() | nil
        }

  field(:SourceTypeBitfield)
  field(:includedDoc, as: GoogleApi.ContentWarehouse.V1.Model.GDocumentBase)
  field(:linkUrl)
  field(:perDocData, as: GoogleApi.ContentWarehouse.V1.Model.PerDocData)
  field(:properties, as: GoogleApi.ContentWarehouse.V1.Model.DocProperties)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CompositeDocIncludedContent do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CompositeDocIncludedContent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CompositeDocIncludedContent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
