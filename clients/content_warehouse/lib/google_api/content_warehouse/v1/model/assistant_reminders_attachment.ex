# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersAttachment do
  @moduledoc """
  Proto descrbing an attachment to an Assistant Reminder. If the attachment has different behavior on different surfaces (e.g., deeplinks), there will be multiple attachments attach to the Reminder. Each of them will specify the surface type and the corresponding deeplink.

  ## Attributes

  *   `id` (*type:* `String.t`, *default:* `nil`) - REQUIRED. An unique identifier for the attachment. We have a plan to index this field, so it's marked as REQUIRED. Chat with opa-reminders-eng@ if you have a use case without an attachment ID.
  *   `link` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersAttachmentLink.t`, *default:* `nil`) - 
  *   `surfaceType` (*type:* `list(String.t)`, *default:* `nil`) - REQUIRED. Surface types this attachment should be shown.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :id => String.t() | nil,
          :link => GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersAttachmentLink.t() | nil,
          :surfaceType => list(String.t()) | nil
        }

  field(:id)
  field(:link, as: GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersAttachmentLink)
  field(:surfaceType, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersAttachment do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersAttachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
