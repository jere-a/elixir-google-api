# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreTollPathProtoTollClusterSequence do
  @moduledoc """
  The set of toll clusters in a toll path, along with their position in the path.

  ## Attributes

  *   `indexedTollClusters` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTollPathProtoIndexedTollCluster.t)`, *default:* `nil`) - There must be at least one toll cluster in a toll path, and there may not be duplicates. For ordering, one should rely on `IndexedTollClusterProto.index`, rather than the repeated field ordering (elements may be shuffled). This is a unidirectional reference - toll clusters do not reference the toll paths they're a part of. The toll clusters themselves may be part of multiple toll paths.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :indexedTollClusters =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTollPathProtoIndexedTollCluster.t())
            | nil
        }

  field(:indexedTollClusters,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreTollPathProtoIndexedTollCluster,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreTollPathProtoTollClusterSequence do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreTollPathProtoTollClusterSequence.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreTollPathProtoTollClusterSequence do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
