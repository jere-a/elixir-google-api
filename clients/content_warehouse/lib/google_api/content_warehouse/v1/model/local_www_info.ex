# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfo do
  @moduledoc """
  Next Id: 36

  ## Attributes

  *   `address` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoAddress.t)`, *default:* `nil`) - 
  *   `brickAndMortarStrength` (*type:* `float()`, *default:* `nil`) - 
  *   `cluster` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoCluster.t)`, *default:* `nil`) - 
  *   `docid` (*type:* `String.t`, *default:* `nil`) - 
  *   `geotopicality` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsGeoTopicality.t`, *default:* `nil`) - Information about geo locations, rather than individual businesses.
  *   `hours` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoOpeningHours.t)`, *default:* `nil`) - 
  *   `isLargeChain` (*type:* `boolean()`, *default:* `nil`) - Does this LocalWWWInfo represent a widely-distributed chain?
  *   `isLargeLocalwwwinfo` (*type:* `boolean()`, *default:* `nil`) - 
  *   `phone` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoPhone.t)`, *default:* `nil`) - 
  *   `siteSiblings` (*type:* `integer()`, *default:* `nil`) - These are per-document signals independent of any particular address.
  *   `url` (*type:* `String.t`, *default:* `nil`) - These are for convenience during intermediate data processing, and should be cleared before the data gets into doc-joins.
  *   `wrapptorItem` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoWrapptorItem.t)`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :address => list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoAddress.t()) | nil,
          :brickAndMortarStrength => float() | nil,
          :cluster => list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoCluster.t()) | nil,
          :docid => String.t() | nil,
          :geotopicality =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsGeoTopicality.t() | nil,
          :hours => list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoOpeningHours.t()) | nil,
          :isLargeChain => boolean() | nil,
          :isLargeLocalwwwinfo => boolean() | nil,
          :phone => list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoPhone.t()) | nil,
          :siteSiblings => integer() | nil,
          :url => String.t() | nil,
          :wrapptorItem =>
            list(GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoWrapptorItem.t()) | nil
        }

  field(:address, as: GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoAddress, type: :list)
  field(:brickAndMortarStrength)
  field(:cluster, as: GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoCluster, type: :list)
  field(:docid)

  field(:geotopicality, as: GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsGeoTopicality)

  field(:hours, as: GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoOpeningHours, type: :list)
  field(:isLargeChain)
  field(:isLargeLocalwwwinfo)
  field(:phone, as: GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoPhone, type: :list)
  field(:siteSiblings)
  field(:url)

  field(:wrapptorItem,
    as: GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfoWrapptorItem,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.LocalWWWInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
