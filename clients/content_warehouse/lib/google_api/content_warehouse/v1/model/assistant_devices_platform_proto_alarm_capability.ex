# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoAlarmCapability do
  @moduledoc """
  Capability with regard to support of alarms by the client.

  ## Attributes

  *   `maxSupportedAlarms` (*type:* `integer()`, *default:* `nil`) - Maximum number of alarms that can be created on the client. Zero or unset indicates no maximum limit.
  *   `restrictAlarmsToNextDay` (*type:* `boolean()`, *default:* `nil`) - Whether the client restricts alarms to ring within the next 24 hours.
  *   `supportsGenericMutations` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports mutation of any alarm attribute such as time_pattern, recurrence_pattern, etc through the MUTATE action. If this is false, MUTATE may only be used to disable or dismiss an alarm. This field is true by default for backwards-compatibility; clients which don't support mutation outside of Disable/DismissAlarm should explicitly set this to false.
  *   `supportsStopAction` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports the STOP alarm action. If this is false, stop actions will be represented by the MUTATE action, and the device may need to check alarm state to determine if there's a firing alarm that needs to be dismissed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxSupportedAlarms => integer() | nil,
          :restrictAlarmsToNextDay => boolean() | nil,
          :supportsGenericMutations => boolean() | nil,
          :supportsStopAction => boolean() | nil
        }

  field(:maxSupportedAlarms)
  field(:restrictAlarmsToNextDay)
  field(:supportsGenericMutations)
  field(:supportsStopAction)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoAlarmCapability do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoAlarmCapability.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoAlarmCapability do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
