# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1FitnessActivity do
  @moduledoc """
  Describes a particular fitness activity, its current state, and other data fields associated with that activity (e.g. elapsed time). LINT.IfChange

  ## Attributes

  *   `activityId` (*type:* `String.t`, *default:* `nil`) - Required A string key used as an identifier for this activity. This key needs to be unique amongst all activities on the device. The client can choose a mechanism of its choice to ensure this. If the server suggests an activity_id, the client can either use the suggestion or create a new unique activity_id of its choosing.
  *   `mostRecentStartTime` (*type:* `DateTime.t`, *default:* `nil`) - DEPRECATED: The most recent time this activity was switched to the ACTIVE state.
  *   `previouslyAccumulatedDuration` (*type:* `String.t`, *default:* `nil`) - DEPRECATED: The total amount of time this activity has spent in the ACTIVE state until the most recent start time. The total time spent active may be computed by summing (now - most_recent_start_time) with previously_accumulated_duration.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The current state of this activity.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of activity being done.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activityId => String.t() | nil,
          :mostRecentStartTime => DateTime.t() | nil,
          :previouslyAccumulatedDuration => String.t() | nil,
          :state => String.t() | nil,
          :type => String.t() | nil
        }

  field(:activityId)
  field(:mostRecentStartTime, as: DateTime)
  field(:previouslyAccumulatedDuration)
  field(:state)
  field(:type)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1FitnessActivity do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1FitnessActivity.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1FitnessActivity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
