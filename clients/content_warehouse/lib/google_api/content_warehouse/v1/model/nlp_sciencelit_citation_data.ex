# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitCitationData do
  @moduledoc """
  Next available ID: 8

  ## Attributes

  *   `articleId` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitArticleId.t)`, *default:* `nil`) - 
  *   `author` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitAuthor.t)`, *default:* `nil`) - 
  *   `externalLink` (*type:* `String.t`, *default:* `nil`) - 
  *   `fullText` (*type:* `String.t`, *default:* `nil`) - 
  *   `reference` (*type:* `String.t`, *default:* `nil`) - Reference used in text (e.g., PMC rid).
  *   `scholarCitation` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ScienceCitation.t`, *default:* `nil`) - Scholar citation information from scholar index.
  *   `title` (*type:* `String.t`, *default:* `nil`) - Optional information about the publication.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :articleId =>
            list(GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitArticleId.t()) | nil,
          :author => list(GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitAuthor.t()) | nil,
          :externalLink => String.t() | nil,
          :fullText => String.t() | nil,
          :reference => String.t() | nil,
          :scholarCitation => GoogleApi.ContentWarehouse.V1.Model.ScienceCitation.t() | nil,
          :title => String.t() | nil
        }

  field(:articleId, as: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitArticleId, type: :list)
  field(:author, as: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitAuthor, type: :list)
  field(:externalLink)
  field(:fullText)
  field(:reference)
  field(:scholarCitation, as: GoogleApi.ContentWarehouse.V1.Model.ScienceCitation)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitCitationData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitCitationData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitCitationData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
