# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoExecutionConfig do
  @moduledoc """
  Specifies the routing capabilities of the Intent. It will apply only when the Intent is triggered. Next ID: 8

  ## Attributes

  *   `cloudEndpointName` (*type:* `String.t`, *default:* `nil`) - Instructions for performing a cloud execution request for the Intent when the execution_type is set to CLOUD. If non-empty, then the device execution would be routed to the CloudEndpoint specified by this name. The Account Linking exchange may be performed to fetch the OAuth access token, and the access token will be included in the HTTP header.
  *   `cloudIntentTranslationDisabled` (*type:* `boolean()`, *default:* `nil`) - If this field is set, then the Syndication cloud call will be disabled for this intent. Note this only applies if any Syndication cloud endpoint is associated with the Device Model, otherwise setting this field does nothing. By default, all Intents that are enabled and supported by the Syndication API will be routed through the Syndication cloud endpoint if it's provided.
  *   `intentCommandFormat` (*type:* `String.t`, *default:* `nil`) - Specifies the intent command format for this Action. For example, in order to launch an Android intent instead of receiving the device action payload on the client, then this field can be set with "intent:/#Intent;...;my_extra={$.params.channels[0].channelCode};end" The parameter "{$.params.channels[0].channelCode}" is in JSON path format, and will be replaced with the content from the original device action payload. Thus, with # JSON "execution": [ { "command": "action.devices.commands.SelectChannel", "params": { "channels": [{ "channelName": "exampleChannel", "channelCode": "1-1" }] } } ] as the original action result, then the final result would look like "intent:/#Intent;...;my_extra=\\"1-1\\";end" 
  *   `localDisabled` (*type:* `boolean()`, *default:* `nil`) - If this field is set, then local execution capability is disabled for all matching intents.
  *   `localExecutionType` (*type:* `String.t`, *default:* `nil`) - Specifies how to execute this Action when it is invoked locally (from the same device.)
  *   `remoteDisabled` (*type:* `boolean()`, *default:* `nil`) - If this field is set, then remote execution capability is disabled for all matching intents.
  *   `remoteExecutionType` (*type:* `String.t`, *default:* `nil`) - Specifies how to execute this Action when it is invoked remotely (from a different device.)
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cloudEndpointName => String.t() | nil,
          :cloudIntentTranslationDisabled => boolean() | nil,
          :intentCommandFormat => String.t() | nil,
          :localDisabled => boolean() | nil,
          :localExecutionType => String.t() | nil,
          :remoteDisabled => boolean() | nil,
          :remoteExecutionType => String.t() | nil
        }

  field(:cloudEndpointName)
  field(:cloudIntentTranslationDisabled)
  field(:intentCommandFormat)
  field(:localDisabled)
  field(:localExecutionType)
  field(:remoteDisabled)
  field(:remoteExecutionType)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoExecutionConfig do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoExecutionConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoExecutionConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
