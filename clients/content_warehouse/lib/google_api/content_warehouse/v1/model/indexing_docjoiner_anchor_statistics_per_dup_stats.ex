# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorStatisticsPerDupStats do
  @moduledoc """
  ------------------------------------------------------------------------- The total number of anchors collected per dupforwarding (including the canonical itself). Includes additional data about redundant and offdomain counts and the last timestamp it was collected from.

  ## Attributes

  *   `anchorCount` (*type:* `integer()`, *default:* `nil`) - Count of anchors kept from forwarding.
  *   `collectType` (*type:* `integer()`, *default:* `nil`) - This is EcnCollectType in anchor-ecn-matcher.h for the latest ECN of this dup: - kCollectNormal = 0, // Normal collection. - kCollectUnforwarded = 1, // Forwarding leader docid match only. - kCollectWhitelisted = 2, // Collected anchors matching whitelist. - kCollectNone = 4 // Skipped ECN anchor cluster.
  *   `dupUrl` (*type:* `String.t`, *default:* `nil`) - If missing, the same as the canonical.
  *   `offdomainAnchorCount` (*type:* `integer()`, *default:* `nil`) - Count of offdomain anchors.
  *   `redundantAnchorCount` (*type:* `integer()`, *default:* `nil`) - Count of redundant anchors.
  *   `scannedAnchorCount` (*type:* `integer()`, *default:* `nil`) - The number of anchors being scanned from storage per dupforwarding.
  *   `timestamp` (*type:* `integer()`, *default:* `nil`) - Walltime when this was scanned last.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :anchorCount => integer() | nil,
          :collectType => integer() | nil,
          :dupUrl => String.t() | nil,
          :offdomainAnchorCount => integer() | nil,
          :redundantAnchorCount => integer() | nil,
          :scannedAnchorCount => integer() | nil,
          :timestamp => integer() | nil
        }

  field(:anchorCount)
  field(:collectType)
  field(:dupUrl)
  field(:offdomainAnchorCount)
  field(:redundantAnchorCount)
  field(:scannedAnchorCount)
  field(:timestamp)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorStatisticsPerDupStats do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorStatisticsPerDupStats.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerAnchorStatisticsPerDupStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
