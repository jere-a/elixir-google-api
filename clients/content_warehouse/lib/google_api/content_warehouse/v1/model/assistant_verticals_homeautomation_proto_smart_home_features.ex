# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoSmartHomeFeatures do
  @moduledoc """
  SmartHome feature flags that may be enabled per-item. LINT.IfChange

  ## Attributes

  *   `circadianLightingEnabled` (*type:* `boolean()`, *default:* `nil`) - Flag indicating whether the background Circadian Lighting effect is enabled for a particular light (go/circadian-lighting-e2e).
  *   `energySavingsEnabled` (*type:* `boolean()`, *default:* `nil`) - Flag indicating whether automatic Energy Savings are enabled for this item.
  *   `gentleWakeupEnabled` (*type:* `boolean()`, *default:* `nil`) - Flag indicating whether Gentle Wake Up is enabled for this item (go/sleep-wake-design).
  *   `homeAwayOverMatterEnabled` (*type:* `boolean()`, *default:* `nil`) - Flag indicating whether the user has enabled / disabled sending Home/Away status updates to the device through the Google custom IntelligenceEvents Matter cluster. (go/google-clusters-design)
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :circadianLightingEnabled => boolean() | nil,
          :energySavingsEnabled => boolean() | nil,
          :gentleWakeupEnabled => boolean() | nil,
          :homeAwayOverMatterEnabled => boolean() | nil
        }

  field(:circadianLightingEnabled)
  field(:energySavingsEnabled)
  field(:gentleWakeupEnabled)
  field(:homeAwayOverMatterEnabled)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoSmartHomeFeatures do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoSmartHomeFeatures.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoSmartHomeFeatures do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
