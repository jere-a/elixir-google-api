# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CompositeDocForwardingDup do
  @moduledoc """
  The top forwarding dups of the canonical url. (note: it may actually include some dups that are NOT used for forwarding data but for making "info:" complete)

  ## Attributes

  *   `ecn` (*type:* `String.t`, *default:* `nil`) - The name of the url's webmirror equivalence class.
  *   `ecnFp` (*type:* `String.t`, *default:* `nil`) - 
  *   `purposes` (*type:* `integer()`, *default:* `nil`) - The purpose(s) of the forwarding dup indicating if it is used for forwarding signal/anchors generally, or only for forwarding some specific signal (e.g. navboost), or for some other purposes (e.g., not for forwarding any data but for making "info:" complete). See indexing/dups/public/dups.h for more details.
  *   `rawPagerank` (*type:* `integer()`, *default:* `nil`) - Raw pagerank of the url.
  *   `repid` (*type:* `String.t`, *default:* `nil`) - The webmirror repid of the forwarding dup.
  *   `url` (*type:* `String.t`, *default:* `nil`) - The url of the forwarding dup.
  *   `urlencoding` (*type:* `integer()`, *default:* `nil`) - The encoding of the url (see webutil/urlencoding for details).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ecn => String.t() | nil,
          :ecnFp => String.t() | nil,
          :purposes => integer() | nil,
          :rawPagerank => integer() | nil,
          :repid => String.t() | nil,
          :url => String.t() | nil,
          :urlencoding => integer() | nil
        }

  field(:ecn)
  field(:ecnFp)
  field(:purposes)
  field(:rawPagerank)
  field(:repid)
  field(:url)
  field(:urlencoding)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CompositeDocForwardingDup do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CompositeDocForwardingDup.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CompositeDocForwardingDup do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
