# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingConverterLocalizedAlternateName do
  @moduledoc """


  ## Attributes

  *   `annotationSource` (*type:* `String.t`, *default:* `nil`) - 
  *   `deviceMatchInfo` (*type:* `String.t`, *default:* `nil`) - Device match info calculated only by URL pattern.
  *   `ecnFp` (*type:* `String.t`, *default:* `nil`) - Fp96 of webmirror ECN as of the last time the canonical was processed.
  *   `feedUrl` (*type:* `String.t`, *default:* `nil`) - Populated if annotation_source is SITEMAP.
  *   `language` (*type:* `String.t`, *default:* `nil`) - 
  *   `parsedLanguage` (*type:* `String.t`, *default:* `nil`) - Parsed language and region code from language field.
  *   `parsedRegion` (*type:* `integer()`, *default:* `nil`) - 
  *   `url` (*type:* `String.t`, *default:* `nil`) - 
  *   `urlEncoding` (*type:* `integer()`, *default:* `nil`) - see webutil/urlencoding
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotationSource => String.t() | nil,
          :deviceMatchInfo => String.t() | nil,
          :ecnFp => String.t() | nil,
          :feedUrl => String.t() | nil,
          :language => String.t() | nil,
          :parsedLanguage => String.t() | nil,
          :parsedRegion => integer() | nil,
          :url => String.t() | nil,
          :urlEncoding => integer() | nil
        }

  field(:annotationSource)
  field(:deviceMatchInfo)
  field(:ecnFp)
  field(:feedUrl)
  field(:language)
  field(:parsedLanguage)
  field(:parsedRegion)
  field(:url)
  field(:urlEncoding)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterLocalizedAlternateName do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingConverterLocalizedAlternateName.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterLocalizedAlternateName do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
