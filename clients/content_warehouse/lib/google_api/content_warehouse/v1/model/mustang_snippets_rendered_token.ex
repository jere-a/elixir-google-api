# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken do
  @moduledoc """
  Tidbit token rendered in generating snippet/title.

  ## Attributes

  *   `bolded` (*type:* `boolean()`, *default:* `nil`) - Is the rendered token bolded (insided )
  *   `byteOffsetBegin` (*type:* `integer()`, *default:* `nil`) - Byte offset range in the rendered text that corresponds to this token. [byte_offset_begin, byte_offset_end) inclusive
  *   `byteOffsetEnd` (*type:* `integer()`, *default:* `nil`) - exclusive
  *   `section` (*type:* `String.t`, *default:* `nil`) - Section and TokenPos of the token.
  *   `tokenPos` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bolded => boolean() | nil,
          :byteOffsetBegin => integer() | nil,
          :byteOffsetEnd => integer() | nil,
          :section => String.t() | nil,
          :tokenPos => String.t() | nil
        }

  field(:bolded)
  field(:byteOffsetBegin)
  field(:byteOffsetEnd)
  field(:section)
  field(:tokenPos)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.MustangSnippetsRenderedToken do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
