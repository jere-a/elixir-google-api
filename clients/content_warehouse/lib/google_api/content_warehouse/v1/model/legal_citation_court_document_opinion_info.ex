# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.LegalCitationCourtDocumentOpinionInfo do
  @moduledoc """
  A variety of opinions may be published as a single document. We have one OpinionInfo for each opinion About the "CONCURRING" opinion type: It means that a judge "concurs" to the conclusion (judegment) of the majority of the court, however, he may not agree with the argument in the primary opinion. If multiple judges "concur" or "dissent" the primary opinion, then one judge delivers their opinion, and other judges are said to "join" him.

  ## Attributes

  *   `Bench` (*type:* `integer()`, *default:* `nil`) - 
  *   `DeliveredBy` (*type:* `GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t`, *default:* `nil`) - if Type == PER_CURIAM, then DeliveredBy is unnecessary since it is delivered by the full court. Who delivered the opinion?
  *   `JoinedBy` (*type:* `GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t`, *default:* `nil`) - Who agrees with the opinion
  *   `Type` (*type:* `integer()`, *default:* `nil`) - OpinionType
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :Bench => integer() | nil,
          :DeliveredBy => GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t() | nil,
          :JoinedBy => GoogleApi.ContentWarehouse.V1.Model.LegalPerson.t() | nil,
          :Type => integer() | nil
        }

  field(:Bench)
  field(:DeliveredBy, as: GoogleApi.ContentWarehouse.V1.Model.LegalPerson)
  field(:JoinedBy, as: GoogleApi.ContentWarehouse.V1.Model.LegalPerson)
  field(:Type)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.LegalCitationCourtDocumentOpinionInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.LegalCitationCourtDocumentOpinionInfo.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.LegalCitationCourtDocumentOpinionInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
