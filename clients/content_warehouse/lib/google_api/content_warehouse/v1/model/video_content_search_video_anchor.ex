# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVideoAnchor do
  @moduledoc """
  Next ID: 23

  ## Attributes

  *   `anchorScore` (*type:* `number()`, *default:* `nil`) - The score indicating anchor confidence.
  *   `anchorType` (*type:* `String.t`, *default:* `nil`) - Specifies the type of the anchor.
  *   `contextText` (*type:* `String.t`, *default:* `nil`) - Context text from ASR of long duration, used for longT5 models.
  *   `destinationUrl` (*type:* `String.t`, *default:* `nil`) - When set, this is the link that should be used when clicking on a video anchor. This should jump to the given time in the video.
  *   `duration` (*type:* `String.t`, *default:* `nil`) - The duration of the video anchor in milliseconds.
  *   `entityScore` (*type:* `number()`, *default:* `nil`) - The score indicating the usefulness of the entity identified by 'mid'.
  *   `filterReason` (*type:* `list(String.t)`, *default:* `nil`) - If is_filtered is true, this field illustrates the reasons.
  *   `isFiltered` (*type:* `boolean()`, *default:* `nil`) - If true, the anchor is filtered and not served online.
  *   `isSafe` (*type:* `boolean()`, *default:* `nil`) - Convenience field that consolidates signals for whether this label is safe.
  *   `isScutiBad` (*type:* `boolean()`, *default:* `nil`) - whether this label is bad by go/scuti
  *   `label` (*type:* `String.t`, *default:* `nil`) - The text label of the video anchor.
  *   `labelScore` (*type:* `number()`, *default:* `nil`) - The score indicating label confidence.
  *   `mid` (*type:* `String.t`, *default:* `nil`) - The mid of the video anchor.
  *   `namedEntity` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchNamedEntity.t)`, *default:* `nil`) - Specifies named enitities the label has.
  *   `precisionScore` (*type:* `number()`, *default:* `nil`) - The precision for which the anchor should trigger. For example, if the desired precision is 95%, anchors with precision_score < 0.95 should be removed.
  *   `scoreInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVideoAnchorScoreInfo.t`, *default:* `nil`) - Additional scoring info used for debugging.
  *   `starburstFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVisualFeatures.t`, *default:* `nil`) - Visual tokens for the anchor. Eg. starbust feature vectors for several frames concatenated together.
  *   `thumbnail` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchAnchorThumbnail.t`, *default:* `nil`) - Data about the thumbnail to display for this anchor.
  *   `thumbnailUrl` (*type:* `String.t`, *default:* `nil`) - The url for a frame to display for this anchor.
  *   `time` (*type:* `String.t`, *default:* `nil`) - The time stamp of the video anchor in milliseconds.
  *   `tokenTimingInfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchTokenTimingInfo.t)`, *default:* `nil`) - Timing info for each token in the anchor label.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :anchorScore => number() | nil,
          :anchorType => String.t() | nil,
          :contextText => String.t() | nil,
          :destinationUrl => String.t() | nil,
          :duration => String.t() | nil,
          :entityScore => number() | nil,
          :filterReason => list(String.t()) | nil,
          :isFiltered => boolean() | nil,
          :isSafe => boolean() | nil,
          :isScutiBad => boolean() | nil,
          :label => String.t() | nil,
          :labelScore => number() | nil,
          :mid => String.t() | nil,
          :namedEntity =>
            list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchNamedEntity.t()) | nil,
          :precisionScore => number() | nil,
          :scoreInfo =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVideoAnchorScoreInfo.t() | nil,
          :starburstFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVisualFeatures.t() | nil,
          :thumbnail =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchAnchorThumbnail.t() | nil,
          :thumbnailUrl => String.t() | nil,
          :time => String.t() | nil,
          :tokenTimingInfo =>
            list(GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchTokenTimingInfo.t()) | nil
        }

  field(:anchorScore)
  field(:anchorType)
  field(:contextText)
  field(:destinationUrl)
  field(:duration)
  field(:entityScore)
  field(:filterReason, type: :list)
  field(:isFiltered)
  field(:isSafe)
  field(:isScutiBad)
  field(:label)
  field(:labelScore)
  field(:mid)

  field(:namedEntity,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchNamedEntity,
    type: :list
  )

  field(:precisionScore)

  field(:scoreInfo, as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVideoAnchorScoreInfo)

  field(:starburstFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVisualFeatures
  )

  field(:thumbnail, as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchAnchorThumbnail)
  field(:thumbnailUrl)
  field(:time)

  field(:tokenTimingInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchTokenTimingInfo,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVideoAnchor do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVideoAnchor.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchVideoAnchor do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
