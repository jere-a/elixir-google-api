# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaStreamLog do
  @moduledoc """
  Media stream is composed of a media session and one or more devices which are hosting (playing) the session. Usually, a session is only hosted by one devcie. However, with cast group or stream transfer/expansion, a session could be hosted by multiple devices, which are playing the same session simultaneously.

  ## Attributes

  *   `deviceIndex` (*type:* `list(integer())`, *default:* `nil`) - The device index in this message is consistent with the device index in DeviceInfoLog. This field refers to the devices that hosting the session.
  *   `session` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceMediaSessionLog.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceIndex => list(integer()) | nil,
          :session =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceMediaSessionLog.t() | nil
        }

  field(:deviceIndex, type: :list)
  field(:session, as: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceMediaSessionLog)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaStreamLog do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaStreamLog.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaStreamLog do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
