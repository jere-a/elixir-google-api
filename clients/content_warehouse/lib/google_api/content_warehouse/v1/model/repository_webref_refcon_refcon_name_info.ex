# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRefconRefconNameInfo do
  @moduledoc """
  Refcon name representation in split concepts sstable. This is a simplified version of repository_webref.GlobalNameInfo.

  ## Attributes

  *   `confidence` (*type:* `number()`, *default:* `nil`) - 
  *   `idfScore` (*type:* `number()`, *default:* `nil`) - 
  *   `isGeneratedName` (*type:* `boolean()`, *default:* `nil`) - 
  *   `isI18nName` (*type:* `boolean()`, *default:* `nil`) - 
  *   `isStrongIdentifier` (*type:* `boolean()`, *default:* `nil`) - 
  *   `isTranslatedName` (*type:* `boolean()`, *default:* `nil`) - 
  *   `language` (*type:* `list(integer())`, *default:* `nil`) - Languages of the name, unknown language is not kept. TODO(b/145976266) Don't use the deprecated language enum.
  *   `namePrior` (*type:* `number()`, *default:* `nil`) - Name prior to use. We read this from the prior for the "unknown" language.
  *   `normalizedName` (*type:* `String.t`, *default:* `nil`) - The normalized name.
  *   `originalName` (*type:* `String.t`, *default:* `nil`) - Filled only if different than normalized_name.
  *   `score` (*type:* `number()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confidence => number() | nil,
          :idfScore => number() | nil,
          :isGeneratedName => boolean() | nil,
          :isI18nName => boolean() | nil,
          :isStrongIdentifier => boolean() | nil,
          :isTranslatedName => boolean() | nil,
          :language => list(integer()) | nil,
          :namePrior => number() | nil,
          :normalizedName => String.t() | nil,
          :originalName => String.t() | nil,
          :score => number() | nil
        }

  field(:confidence)
  field(:idfScore)
  field(:isGeneratedName)
  field(:isI18nName)
  field(:isStrongIdentifier)
  field(:isTranslatedName)
  field(:language, type: :list)
  field(:namePrior)
  field(:normalizedName)
  field(:originalName)
  field(:score)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRefconRefconNameInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRefconRefconNameInfo.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefRefconRefconNameInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
