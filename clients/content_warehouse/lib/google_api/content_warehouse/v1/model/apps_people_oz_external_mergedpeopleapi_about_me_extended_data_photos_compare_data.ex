# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData do
  @moduledoc """


  ## Attributes

  *   `diffData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareDataDiffData.t`, *default:* `nil`) - 
  *   `highResUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `inconsistentPhoto` (*type:* `boolean()`, *default:* `nil`) - True if photo diff is greater than 0.01 on any color band, or if the user has a low res photo but no high res photo. This field is primarily for use in About Me and for other uses it's recommended to use the DiffData values directly instead. The cutoff is based on a heuristic determined in go/comparing-profile-photos
  *   `lowResData` (*type:* `String.t`, *default:* `nil`) - Only present if the photo diff is greater than 0.01 on any color band.
  *   `lowResUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `monogramUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `privateLowResAcl` (*type:* `boolean()`, *default:* `nil`) - True if the low-res photo has a private ACL set.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :diffData =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareDataDiffData.t()
            | nil,
          :highResUrl => String.t() | nil,
          :inconsistentPhoto => boolean() | nil,
          :lowResData => String.t() | nil,
          :lowResUrl => String.t() | nil,
          :monogramUrl => String.t() | nil,
          :privateLowResAcl => boolean() | nil
        }

  field(:diffData,
    as:
      GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareDataDiffData
  )

  field(:highResUrl)
  field(:inconsistentPhoto)
  field(:lowResData)
  field(:lowResUrl)
  field(:monogramUrl)
  field(:privateLowResAcl)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAboutMeExtendedDataPhotosCompareData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
