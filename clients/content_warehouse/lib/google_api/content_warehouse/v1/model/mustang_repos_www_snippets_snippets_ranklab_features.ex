# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetsRanklabFeatures do
  @moduledoc """
  This is a protocol buffer to export into flatfiles in ranklab. All fields are converted into flatfiles with some specific prefix and a field name like 'snippet_features_snippet_data_source_type'.

  ## Attributes

  *   `browserWidth` (*type:* `integer()`, *default:* `nil`) - Browser width.
  *   `candidates` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetCandidate.t)`, *default:* `nil`) - Features for snippets candidates, generated by both old and new scorer. Currently only features for chosen candidate is generated.
  *   `displaySnippet` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet.t`, *default:* `nil`) - Snippet features for the final chosen snippet. This field is firstly populated by Muppet, and then overwriten by Superroot if SnippetBrain is triggered.
  *   `documentLanguage` (*type:* `String.t`, *default:* `nil`) - locale of the document.
  *   `originalQueryTermCoverages` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures.t`, *default:* `nil`) - Original query term coverage in titles and / or snippets.
  *   `queryLanguage` (*type:* `String.t`, *default:* `nil`) - locale of the query,
  *   `snippetDataSourceType` (*type:* `integer()`, *default:* `nil`) - Snippet data source.
  *   `snippetQueryTermCoverage` (*type:* `number()`, *default:* `nil`) - Query term coverage in snippets.
  *   `snippets` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet.t)`, *default:* `nil`) - Snippet features for Muppet snippet candidates. In production, only the data for chosen snippet will be recorded.
  *   `titleDataSourceType` (*type:* `integer()`, *default:* `nil`) - Title data source.
  *   `titleQueryTermCoverage` (*type:* `number()`, *default:* `nil`) - Query term coverage in titles.
  *   `titleSnippetQueryTermCoverage` (*type:* `number()`, *default:* `nil`) - Query term coverage in titles and snippets.
  *   `titles` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabTitle.t)`, *default:* `nil`) - Per-candidate title features for ranklab models, sorted from the best candidate to the worst candidate (i.e., the first element is the actually selected title).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :browserWidth => integer() | nil,
          :candidates =>
            list(GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetCandidate.t())
            | nil,
          :displaySnippet =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet.t() | nil,
          :documentLanguage => String.t() | nil,
          :originalQueryTermCoverages =>
            GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures.t()
            | nil,
          :queryLanguage => String.t() | nil,
          :snippetDataSourceType => integer() | nil,
          :snippetQueryTermCoverage => number() | nil,
          :snippets =>
            list(GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet.t()) | nil,
          :titleDataSourceType => integer() | nil,
          :titleQueryTermCoverage => number() | nil,
          :titleSnippetQueryTermCoverage => number() | nil,
          :titles =>
            list(GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabTitle.t()) | nil
        }

  field(:browserWidth)

  field(:candidates,
    as: GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetCandidate,
    type: :list
  )

  field(:displaySnippet, as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet)
  field(:documentLanguage)

  field(:originalQueryTermCoverages,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewSnippetQueryTermCoverageFeatures
  )

  field(:queryLanguage)
  field(:snippetDataSourceType)
  field(:snippetQueryTermCoverage)

  field(:snippets,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabSnippet,
    type: :list
  )

  field(:titleDataSourceType)
  field(:titleQueryTermCoverage)
  field(:titleSnippetQueryTermCoverage)
  field(:titles, as: GoogleApi.ContentWarehouse.V1.Model.QualityPreviewRanklabTitle, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetsRanklabFeatures do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetsRanklabFeatures.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.MustangReposWwwSnippetsSnippetsRanklabFeatures do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
