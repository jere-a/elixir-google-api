# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSaftAnnotatedPhrase do
  @moduledoc """
  Representation of a phrase in the document with a particular annotation. Provides the ability to annotate arbitrary spans in the document. This is intended for representing spans that SAFT does NOT consider to be mentions of entities within a SAFT document.

  ## Attributes

  *   `info` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Annotation for this phrase.
  *   `phrase` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t`, *default:* `nil`) - Contains start and end pointers to the token array for this span.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :info => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :phrase => GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t() | nil
        }

  field(:info, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:phrase, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftAnnotatedPhrase do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSaftAnnotatedPhrase.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftAnnotatedPhrase do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
