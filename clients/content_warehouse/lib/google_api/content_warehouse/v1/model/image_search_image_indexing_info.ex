# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageIndexingInfo do
  @moduledoc """


  ## Attributes

  *   `imageLinkSelectionInfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageSelectionInfo.t)`, *default:* `nil`) - Image Selection Info
  *   `rejectedNotIndexedImageLink` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.ImageSearchUnindexedImageLink.t)`, *default:* `nil`) - URLs and Amarna status of images on the page for which image data is not yet available and weren't selected for indexing in image search. Used by consumers of docjoins that need a complete view of image urls on the page (i.e. Digdug).
  *   `selectedNotIndexedImageLink` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.ImageSearchUnindexedImageLink.t)`, *default:* `nil`) - URLs and Amarna status of images on the page for which image data is not yet available and were otherwise selected for indexing in image search. Used by consumers of docjoins that need a complete view of selected image urls on the page (i.e. Hearse, the index selection testbed).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :imageLinkSelectionInfo =>
            list(GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageSelectionInfo.t()) | nil,
          :rejectedNotIndexedImageLink =>
            list(GoogleApi.ContentWarehouse.V1.Model.ImageSearchUnindexedImageLink.t()) | nil,
          :selectedNotIndexedImageLink =>
            list(GoogleApi.ContentWarehouse.V1.Model.ImageSearchUnindexedImageLink.t()) | nil
        }

  field(:imageLinkSelectionInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageSelectionInfo,
    type: :list
  )

  field(:rejectedNotIndexedImageLink,
    as: GoogleApi.ContentWarehouse.V1.Model.ImageSearchUnindexedImageLink,
    type: :list
  )

  field(:selectedNotIndexedImageLink,
    as: GoogleApi.ContentWarehouse.V1.Model.ImageSearchUnindexedImageLink,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageIndexingInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageIndexingInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageIndexingInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
