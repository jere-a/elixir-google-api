# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRedirectEvent do
  @moduledoc """
  A redirect event represents a change in the resource URL for a document. This includes HTTP redirects, as well things which trigger client navigations such as script changing window.location, tags, HTTP Refresh headers, etc.

  ## Attributes

  *   `httpMethod` (*type:* `String.t`, *default:* `nil`) - The HTTP method of the request for the redirect target.
  *   `httpStatusCode` (*type:* `integer()`, *default:* `nil`) - For HTTP redirects, the HTTP status code returned in the initial HTTP response.
  *   `refreshType` (*type:* `String.t`, *default:* `nil`) - 
  *   `targetContentDownloaded` (*type:* `boolean()`, *default:* `nil`) - True if the redirect led to a download instead of loading a new page. Note that such redirects can appear anywhere in the list of redirect events.
  *   `targetUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :httpMethod => String.t() | nil,
          :httpStatusCode => integer() | nil,
          :refreshType => String.t() | nil,
          :targetContentDownloaded => boolean() | nil,
          :targetUrl => String.t() | nil,
          :type => String.t() | nil
        }

  field(:httpMethod)
  field(:httpStatusCode)
  field(:refreshType)
  field(:targetContentDownloaded)
  field(:targetUrl)
  field(:type)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRedirectEvent do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRedirectEvent.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRedirectEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
