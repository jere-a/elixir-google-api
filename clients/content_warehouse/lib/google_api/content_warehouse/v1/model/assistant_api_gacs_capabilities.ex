# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiGacsCapabilities do
  @moduledoc """
  Capabilities of Google assistant conversation service(GACS) devices. These capabilites including supported GACS actions and response size limitations.

  ## Attributes

  *   `deviceId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t`, *default:* `nil`) - DeviceId of the accessory device (eg. watch) Commonly the go/dusi (eg. client_instance_id) is provided.
  *   `responseConfig` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1ResponseConfig.t`, *default:* `nil`) - Configuration sent by device.
  *   `ttsEncoding` (*type:* `String.t`, *default:* `nil`) - DEPRECATED: Format of TTS audio requested by the device.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceId =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t() | nil,
          :responseConfig =>
            GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1ResponseConfig.t() | nil,
          :ttsEncoding => String.t() | nil
        }

  field(:deviceId, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId)

  field(:responseConfig,
    as: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1ResponseConfig
  )

  field(:ttsEncoding)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiGacsCapabilities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiGacsCapabilities.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiGacsCapabilities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
