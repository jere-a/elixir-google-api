# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaFocusInfoLog do
  @moduledoc """
  The information related to Media Focus. TODO(b/138952173) Deprecate MediaFocusState in logs/proto/majel_gws/media_action_triggering_info.proto and assistant/verticals/media/proto/target_device_info.proto

  ## Attributes

  *   `currentFocusDurationSec` (*type:* `integer()`, *default:* `nil`) - How long the device is in focus so far
  *   `dialogTriggered` (*type:* `boolean()`, *default:* `nil`) - TODO(b/134944092) Log MediaFocusDialogTrigger Enum in focus_status.
  *   `focusDevice` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceInfoLog.t`, *default:* `nil`) - LINT.ThenChange(//depot/google3/logs/proto/majel_gws/media_action_triggering_info.proto) The focus device.
  *   `mediaFocusState` (*type:* `String.t`, *default:* `nil`) - The media focus state at the time of the request.
  *   `sourceDeviceId` (*type:* `String.t`, *default:* `nil`) - The source device of media focus.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :currentFocusDurationSec => integer() | nil,
          :dialogTriggered => boolean() | nil,
          :focusDevice =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceInfoLog.t() | nil,
          :mediaFocusState => String.t() | nil,
          :sourceDeviceId => String.t() | nil
        }

  field(:currentFocusDurationSec)
  field(:dialogTriggered)
  field(:focusDevice, as: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsDeviceInfoLog)
  field(:mediaFocusState)
  field(:sourceDeviceId)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaFocusInfoLog do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaFocusInfoLog.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsMediaFocusInfoLog do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
