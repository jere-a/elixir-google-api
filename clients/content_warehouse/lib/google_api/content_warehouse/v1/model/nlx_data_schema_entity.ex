# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaEntity do
  @moduledoc """
  An entity, which may occur multiple times in the text.

  ## Attributes

  *   `gender` (*type:* `String.t`, *default:* `nil`) - Entity gender. Default label set is 'masculine', 'feminine', or 'neuter'. (Perhaps in the future we can split 'neuter' into 'inanimate', 'unknown', and 'non-binary'.)
  *   `mid` (*type:* `String.t`, *default:* `nil`) - Machine identifier, such as those from the Freebase database (or similar entity database).
  *   `name` (*type:* `String.t`, *default:* `nil`) - Free-form entity name.
  *   `type` (*type:* `list(String.t)`, *default:* `nil`) - Entity type, typically something like person/location/organization. The schema for types is not specified. If this entity has a MID, use the mid field instead or in conjunction with the type.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :gender => String.t() | nil,
          :mid => String.t() | nil,
          :name => String.t() | nil,
          :type => list(String.t()) | nil
        }

  field(:gender)
  field(:mid)
  field(:name)
  field(:type, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaEntity do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaEntity.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaEntity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
