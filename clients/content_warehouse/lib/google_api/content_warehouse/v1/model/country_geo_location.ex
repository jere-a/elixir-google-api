# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CountryGeoLocation do
  @moduledoc """
  Stores one location and all meta-data associated with that location.

  ## Attributes

  *   `clickRadius50Percent` (*type:* `integer()`, *default:* `nil`) - The radius (in miles) around the assigned location that the document gets 50% of its clicks.
  *   `confidence` (*type:* `number()`, *default:* `nil`) - Confidence on the location. Ranges in [0.0, 1.0]. Cleared during index creation.
  *   `confidencePercent` (*type:* `integer()`, *default:* `nil`) - Confidence mapped to [0, 100]. Converted to integer for efficient storage. Populated during index creation.
  *   `internalId` (*type:* `integer()`, *default:* `nil`) - Used for compressed docloc data. In compressed data, instead of location_info, only an integer ID for that LocationInfo is stored. A separate lookup table is used to get full LocationInfo from the internal ID.
  *   `locationInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.CountryLocationInfo.t`, *default:* `nil`) - 
  *   `propagatedFromASubpage` (*type:* `boolean()`, *default:* `nil`) - True if this location is assigned to one of the subpages, and not to the page itself. If the total number of locations assigned to all the subpages of a page is small (usually up to 5), then that page also gets assigned those locations, and this flag is set for those locations.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clickRadius50Percent => integer() | nil,
          :confidence => number() | nil,
          :confidencePercent => integer() | nil,
          :internalId => integer() | nil,
          :locationInfo => GoogleApi.ContentWarehouse.V1.Model.CountryLocationInfo.t() | nil,
          :propagatedFromASubpage => boolean() | nil
        }

  field(:clickRadius50Percent)
  field(:confidence)
  field(:confidencePercent)
  field(:internalId)
  field(:locationInfo, as: GoogleApi.ContentWarehouse.V1.Model.CountryLocationInfo)
  field(:propagatedFromASubpage)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CountryGeoLocation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CountryGeoLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CountryGeoLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
