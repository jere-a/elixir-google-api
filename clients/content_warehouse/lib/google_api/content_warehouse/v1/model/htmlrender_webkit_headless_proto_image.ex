# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage do
  @moduledoc """


  ## Attributes

  *   `data` (*type:* `String.t`, *default:* `nil`) - The binary image data, stored in a format decided by the application and a particular RenderService implementation.
  *   `height` (*type:* `integer()`, *default:* `nil`) - 
  *   `pageNumber` (*type:* `integer()`, *default:* `nil`) - The page number if this is an image of a page from a print-mode rendering.
  *   `viewport` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoBox.t`, *default:* `nil`) - The viewport from which this image was generated. This is relative to the upper left of the page's document.
  *   `width` (*type:* `integer()`, *default:* `nil`) - The width and height of the image stored in the data field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :data => String.t() | nil,
          :height => integer() | nil,
          :pageNumber => integer() | nil,
          :viewport =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoBox.t() | nil,
          :width => integer() | nil
        }

  field(:data)
  field(:height)
  field(:pageNumber)
  field(:viewport, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoBox)
  field(:width)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
