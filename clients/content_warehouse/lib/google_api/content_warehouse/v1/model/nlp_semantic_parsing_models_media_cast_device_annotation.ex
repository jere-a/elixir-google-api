# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaCastDeviceAnnotation do
  @moduledoc """
  Media device. Like, Chromecast, TV or Chirp. When emitted from the cast_device domain, you should expect it to be one of 3 different forms: 1) Personal Device: The annotation comes from a device we found in the user's home. device_id and name should be set, cast_device_type is set if device type is mentioned in query. e.g. "Dima's Pineapple Chirp" device_id: FOOBAR name: "Dima's Pineapple" cast_device_type: CHIRP 2) Common Device Name: The annotation comes from a model of the common names of user's device. name and cast_device_type should be set but device_id will not be. cast_device_type can be UNKNOWN. e.g. "John's Living Room" name: "John's Living Room" cast_device_type: UNKNOWN 3) Device Type: The annotation comes from a model of common cast device types. Only cast_device_type will be set. e.g. "TV" or "chromecast" cast_device_type: CHROMECAST Next ID: 9

  ## Attributes

  *   `castDeviceSource` (*type:* `String.t`, *default:* `nil`) - 
  *   `castDeviceType` (*type:* `String.t`, *default:* `nil`) - This field is populated when the user says [play X on $cast_device] and we know the type of $cast_device but cannot identify the exact device.
  *   `creationTimestampMs` (*type:* `String.t`, *default:* `nil`) - The timestamp that the device is linked with the user in milliseconds. This is inherited from the corresponding assistant DeviceSettings as is.
  *   `deviceId` (*type:* `String.t`, *default:* `nil`) - DEPRECATED: Please use device_identifier instead.
  *   `deviceIdentifier` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t`, *default:* `nil`) - The identification of the device. This field is populated when the user says [play X on $device_name] and $device_name matches one of the devices linked to user's account. } oneof Media Device
  *   `name` (*type:* `String.t`, *default:* `nil`) - 
  *   `quantification` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaQuantification.t`, *default:* `nil`) - This field is populated when the user metioned quantification in the query. E.g., "2" or "all".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :castDeviceSource => String.t() | nil,
          :castDeviceType => String.t() | nil,
          :creationTimestampMs => String.t() | nil,
          :deviceId => String.t() | nil,
          :deviceIdentifier =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t() | nil,
          :name => String.t() | nil,
          :quantification =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaQuantification.t()
            | nil
        }

  field(:castDeviceSource)
  field(:castDeviceType)
  field(:creationTimestampMs)
  field(:deviceId)
  field(:deviceIdentifier, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId)
  field(:name)

  field(:quantification,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaQuantification
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaCastDeviceAnnotation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaCastDeviceAnnotation.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaCastDeviceAnnotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
