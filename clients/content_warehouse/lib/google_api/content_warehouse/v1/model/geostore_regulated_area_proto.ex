# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreRegulatedAreaProto do
  @moduledoc """
  A collection of information that applies to a polygonal area.

  ## Attributes

  *   `restriction` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto.t)`, *default:* `nil`) - The set of restrictions that apply to a zone. These restrictions may limit the routability of every segment contained within the defined feature.polygon. Repeated restrictions are treated collectively as an OR meaning that segments in the zone are only routable if none of the restrictions apply. If any segments within the defined polygon should not have these restrictions applied, they must list this regulated area's feature id in their feature.exempt_regulated_area field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :restriction =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto.t()) | nil
        }

  field(:restriction,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreRestrictionProto,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreRegulatedAreaProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreRegulatedAreaProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreRegulatedAreaProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
