# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiCallCapabilities do
  @moduledoc """
  CallCapabilities supported by a surface. See go/call-capabilities. Next ID: 7

  ## Attributes

  *   `callFormats` (*type:* `list(String.t)`, *default:* `nil`) - The supported call formats on the surface.
  *   `callMediums` (*type:* `list(String.t)`, *default:* `nil`) - The supported call mediums on the surface.
  *   `callOptions` (*type:* `list(String.t)`, *default:* `nil`) - The call options this surface can provide. For example, SPEAKERPHONE is available on Android OPA while iOPA doesn't support it yet.
  *   `fallbackToTetheredDeviceAppCapabilities` (*type:* `boolean()`, *default:* `nil`) - If true, APP_ID queries initiated by this device should fall back to execution on the tethered device if it's available and if the primary device cannot perform the action (e.g. due to the app not being installed).
  *   `supportedRecipientTypes` (*type:* `list(String.t)`, *default:* `nil`) - Should only be checked if nonempty.
  *   `supportsDuoEmailEndpoint` (*type:* `boolean()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :callFormats => list(String.t()) | nil,
          :callMediums => list(String.t()) | nil,
          :callOptions => list(String.t()) | nil,
          :fallbackToTetheredDeviceAppCapabilities => boolean() | nil,
          :supportedRecipientTypes => list(String.t()) | nil,
          :supportsDuoEmailEndpoint => boolean() | nil
        }

  field(:callFormats, type: :list)
  field(:callMediums, type: :list)
  field(:callOptions, type: :list)
  field(:fallbackToTetheredDeviceAppCapabilities)
  field(:supportedRecipientTypes, type: :list)
  field(:supportsDuoEmailEndpoint)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCallCapabilities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiCallCapabilities.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCallCapabilities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
