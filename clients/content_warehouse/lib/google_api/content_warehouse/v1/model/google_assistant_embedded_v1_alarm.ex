# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarm do
  @moduledoc """
  Alarms are clocks that ring at a specified time on one or more days. The client schedules a time to ring based on the date/time pattern. When it rings, it may be rescheduled off the original time by snoozing or it may be replaced by the next occurrence.

  ## Attributes

  *   `alarmId` (*type:* `String.t`, *default:* `nil`) - A string key used as an identifier to this alarm. This key needs to be unique amongst all alarms on the device. The client can choose a mechanism of its choice to ensure this. If the server suggests an alarm_id, the client can either use the suggestion or create a new unique alarm_id of its choosing.
  *   `alarmSource` (*type:* `String.t`, *default:* `nil`) - The entity that created this alarm. Note this may be different from the device that reported this alarm. In particular, this field is meant for remote alarms which have been synced to the current device by the Clock app. Synced alarms exist in each device's Clock app and can be managed by either device; this field indicates their origin.
  *   `datePattern` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate.t`, *default:* `nil`) - For single alarms: the one date the alarm should next be scheduled for.
  *   `label` (*type:* `String.t`, *default:* `nil`) - A user-provided name for this alarm.
  *   `recurrencePattern` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1AlarmRecurrence.t`, *default:* `nil`) - For recurring alarms: a description of the dates when the alarm should recur.
  *   `scheduledTime` (*type:* `DateTime.t`, *default:* `nil`) - When SCHEDULED or SNOOZED, the absolute time the alarm will fire next. When SNOOZED, this time includes the additional time added by snoozing the alarm. When FIRING, the absolute time the alarm had been scheduled to fire. When DISABLED, this field is undefined and should be ignored.
  *   `status` (*type:* `String.t`, *default:* `nil`) - Describes the part of the lifecycle that an alarm is in.
  *   `timePattern` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay.t`, *default:* `nil`) - The time of day the alarm should be scheduled for. This value does not change when an alarm enters the SNOOZED state; instead the scheduled_time field should be adjusted to the new alarm time.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alarmId => String.t() | nil,
          :alarmSource => String.t() | nil,
          :datePattern => GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate.t() | nil,
          :label => String.t() | nil,
          :recurrencePattern =>
            GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1AlarmRecurrence.t() | nil,
          :scheduledTime => DateTime.t() | nil,
          :status => String.t() | nil,
          :timePattern => GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay.t() | nil
        }

  field(:alarmId)
  field(:alarmSource)
  field(:datePattern, as: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeDate)
  field(:label)

  field(:recurrencePattern,
    as: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1AlarmRecurrence
  )

  field(:scheduledTime, as: DateTime)
  field(:status)
  field(:timePattern, as: GoogleApi.ContentWarehouse.V1.Model.GoogleTypeTimeOfDay)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarm do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarm.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarm do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
