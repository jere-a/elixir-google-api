# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDolphinScoringConfig do
  @moduledoc """


  ## Attributes

  *   `descriptivenessOutputKey` (*type:* `String.t`, *default:* `nil`) - The output put keys for Dolphin PredictResponse
  *   `ensembleModelNames` (*type:* `list(String.t)`, *default:* `nil`) - If the dolphin model is an ensemble model (e.g. Video QnA model which consists of 4 teacher models), stores each individual model name.
  *   `inferenceBatchSize` (*type:* `integer()`, *default:* `nil`) - The inference batch size to use for inference methods that handle batching.
  *   `inferenceMethod` (*type:* `String.t`, *default:* `nil`) - The method to use for inference. This must be set or inference will fail.
  *   `maxRpcRetries` (*type:* `integer()`, *default:* `nil`) - Holds value of flag --max_rpc_retries.
  *   `modelName` (*type:* `String.t`, *default:* `nil`) - Model name used for ModelSpec in PredictRequest used in the PredictionService API.
  *   `modelPath` (*type:* `String.t`, *default:* `nil`) - Only used when using the bulk_inference API. See go/dolphin-models to learn about the different dolphin models.
  *   `outputKey` (*type:* `String.t`, *default:* `nil`) - TODO(alexiaxu) To deprecate this field in the future Output key for Dolphin PredictResponse.
  *   `rpcDeadlineSeconds` (*type:* `float()`, *default:* `nil`) - Holds value of flag --rpc_deadline (converted to seconds).
  *   `serviceBns` (*type:* `String.t`, *default:* `nil`) - Tensorflow inference BNS address when using PredictionService API.
  *   `usefulnessOutputKey` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :descriptivenessOutputKey => String.t() | nil,
          :ensembleModelNames => list(String.t()) | nil,
          :inferenceBatchSize => integer() | nil,
          :inferenceMethod => String.t() | nil,
          :maxRpcRetries => integer() | nil,
          :modelName => String.t() | nil,
          :modelPath => String.t() | nil,
          :outputKey => String.t() | nil,
          :rpcDeadlineSeconds => float() | nil,
          :serviceBns => String.t() | nil,
          :usefulnessOutputKey => String.t() | nil
        }

  field(:descriptivenessOutputKey)
  field(:ensembleModelNames, type: :list)
  field(:inferenceBatchSize)
  field(:inferenceMethod)
  field(:maxRpcRetries)
  field(:modelName)
  field(:modelPath)
  field(:outputKey)
  field(:rpcDeadlineSeconds)
  field(:serviceBns)
  field(:usefulnessOutputKey)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDolphinScoringConfig do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDolphinScoringConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchDolphinScoringConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
