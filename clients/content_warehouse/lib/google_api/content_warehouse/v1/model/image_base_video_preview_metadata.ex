# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageBaseVideoPreviewMetadata do
  @moduledoc """
  This message is used internally in Amarna and is also used to store information in the VideoWebAttachment portion of the websearch index. Only the following fields will be used in the index: VideoPreviewType type int32 width int32 height byte byte_size If more fields are added, please update this list.

  ## Attributes

  *   `byteSize` (*type:* `integer()`, *default:* `nil`) - Size of the stored preview.
  *   `docid` (*type:* `String.t`, *default:* `nil`) - 64 bit docid of the original video.
  *   `duration` (*type:* `integer()`, *default:* `nil`) - TODO (yzliu): consider using duration_ms as field name since it is number of milliseconds. Duration of the preview in ms.
  *   `expirationTimestampMicros` (*type:* `String.t`, *default:* `nil`) - Expiration timestamp of preview in microseconds since epoch.
  *   `fprint` (*type:* `String.t`, *default:* `nil`) - LINT.ThenChange(//depot/google3/video/crawl/indexing/signal_combiner.cc:video_preview) Fingerprint of the preview.
  *   `height` (*type:* `integer()`, *default:* `nil`) - Height of the stored preview.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Mime type of the preview ("video/mp4").
  *   `state` (*type:* `String.t`, *default:* `nil`) - Indicates the state in Venom for this preview type.
  *   `timestamp` (*type:* `integer()`, *default:* `nil`) - Timestamp of start of preview in ms.
  *   `type` (*type:* `String.t`, *default:* `nil`) - LINT.IfChange
  *   `videoSegmentEndUs` (*type:* `String.t`, *default:* `nil`) - The end timestamp of the video segment in microseconds that this preview is generated from. Used for segmented video previews.
  *   `videoSegmentStartUs` (*type:* `String.t`, *default:* `nil`) - The start timestamp of the video segment in microseconds that this preview is generated from. Used for segmented video previews.
  *   `width` (*type:* `integer()`, *default:* `nil`) - Width of the stored preview.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :byteSize => integer() | nil,
          :docid => String.t() | nil,
          :duration => integer() | nil,
          :expirationTimestampMicros => String.t() | nil,
          :fprint => String.t() | nil,
          :height => integer() | nil,
          :mimeType => String.t() | nil,
          :state => String.t() | nil,
          :timestamp => integer() | nil,
          :type => String.t() | nil,
          :videoSegmentEndUs => String.t() | nil,
          :videoSegmentStartUs => String.t() | nil,
          :width => integer() | nil
        }

  field(:byteSize)
  field(:docid)
  field(:duration)
  field(:expirationTimestampMicros)
  field(:fprint)
  field(:height)
  field(:mimeType)
  field(:state)
  field(:timestamp)
  field(:type)
  field(:videoSegmentEndUs)
  field(:videoSegmentStartUs)
  field(:width)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageBaseVideoPreviewMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageBaseVideoPreviewMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageBaseVideoPreviewMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
