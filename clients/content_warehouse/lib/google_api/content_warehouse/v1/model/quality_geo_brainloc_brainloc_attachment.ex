# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityGeoBrainlocBrainlocAttachment do
  @moduledoc """
  Compressed version of quality_geo_brainloc.goldmine.BrainlocAnnotation for indexing. (See BrainlocAnnotation for detailed documentation.) Next ID: 10

  ## Attributes

  *   `brainlocVersion` (*type:* `integer()`, *default:* `nil`) - 
  *   `topCitiesRawScores` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `topCitiesVocabIds` (*type:* `list(integer())`, *default:* `nil`) - Compressed top locations and their scores. *Locations are stored using their model vocab IDs. *Location scores are stored using 14 bits of precision (2 bytes).
  *   `topCountiesRawScores` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `topCountiesVocabIds` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `topCountriesRawScores` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `topCountriesVocabIds` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `topStatesRawScores` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `topStatesVocabIds` (*type:* `list(integer())`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :brainlocVersion => integer() | nil,
          :topCitiesRawScores => list(integer()) | nil,
          :topCitiesVocabIds => list(integer()) | nil,
          :topCountiesRawScores => list(integer()) | nil,
          :topCountiesVocabIds => list(integer()) | nil,
          :topCountriesRawScores => list(integer()) | nil,
          :topCountriesVocabIds => list(integer()) | nil,
          :topStatesRawScores => list(integer()) | nil,
          :topStatesVocabIds => list(integer()) | nil
        }

  field(:brainlocVersion)
  field(:topCitiesRawScores, type: :list)
  field(:topCitiesVocabIds, type: :list)
  field(:topCountiesRawScores, type: :list)
  field(:topCountiesVocabIds, type: :list)
  field(:topCountriesRawScores, type: :list)
  field(:topCountriesVocabIds, type: :list)
  field(:topStatesRawScores, type: :list)
  field(:topStatesVocabIds, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityGeoBrainlocBrainlocAttachment do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityGeoBrainlocBrainlocAttachment.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityGeoBrainlocBrainlocAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
