# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaCalendarBusy do
  @moduledoc """
  The status indicating the user is temporarily busy and there is not a more specific status derived from calendar that applies (e.g., InMeeting or DoNotDisturb).

  ## Attributes

  *   `committedUntil` (*type:* `DateTime.t`, *default:* `nil`) - The time when the user will either stop being committed or change commitment type (i.e. InMeeting, DoNotDisturb, Busy or OutOfOffice < Xh). Note that the goal of this field is to provide information to help users decide how to communicate with a user (see also http://shortn/_wXYXtZScgh).
  *   `eventSummary` (*type:* `String.t`, *default:* `nil`) - The summary of the corresponding event in Calendar.
  *   `nextAvailable` (*type:* `DateTime.t`, *default:* `nil`) - The next time when the user will be available, i.e., when their status will be neither InMeeting, CalendarBusy, DoNotDisturb, OutsideWorkingHours, nor OutOfOffice.
  *   `occupiedUntil` (*type:* `DateTime.t`, *default:* `nil`) - The time when the user will stop being occupied, i.e., when their status will be neither inMeeting, Busy nor DoNotDisturb.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :committedUntil => DateTime.t() | nil,
          :eventSummary => String.t() | nil,
          :nextAvailable => DateTime.t() | nil,
          :occupiedUntil => DateTime.t() | nil
        }

  field(:committedUntil, as: DateTime)
  field(:eventSummary)
  field(:nextAvailable, as: DateTime)
  field(:occupiedUntil, as: DateTime)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaCalendarBusy do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaCalendarBusy.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaCalendarBusy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
