# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsHospitalityCardSettingsCardConfig do
  @moduledoc """
  Configuration for hospitality card.

  ## Attributes

  *   `activeActionRequired` (*type:* `boolean()`, *default:* `nil`) - Whether the UI module requires user action. If true, the UI module can peek on to the top of Ambient. See SmartDisplayModuleState::ACTIVE_ACTION_REQUIRED.
  *   `dismissable` (*type:* `boolean()`, *default:* `nil`) - Whether the UI module is dismissable.
  *   `effectiveTime` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t`, *default:* `nil`) - The time that the module is effective and visible to the user. If not set, the module is effective immediately.
  *   `expiryTime` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t`, *default:* `nil`) - The time that the module is expired and invisible to the user. If not set, the module never expires.
  *   `imageUrl` (*type:* `String.t`, *default:* `nil`) - The image URL for the UI module.
  *   `moduleId` (*type:* `String.t`, *default:* `nil`) - Module ID.
  *   `payloadQuery` (*type:* `String.t`, *default:* `nil`) - Payload query to the partner AoG action when user responds to UI Module, e.g. “Tell the hotel how my stay is going”.
  *   `title` (*type:* `String.t`, *default:* `nil`) - Title of the message to be shown to user at the top of the UI Module.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activeActionRequired => boolean() | nil,
          :dismissable => boolean() | nil,
          :effectiveTime => GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t() | nil,
          :expiryTime => GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t() | nil,
          :imageUrl => String.t() | nil,
          :moduleId => String.t() | nil,
          :payloadQuery => String.t() | nil,
          :title => String.t() | nil
        }

  field(:activeActionRequired)
  field(:dismissable)
  field(:effectiveTime, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp)
  field(:expiryTime, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp)
  field(:imageUrl)
  field(:moduleId)
  field(:payloadQuery)
  field(:title)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsHospitalityCardSettingsCardConfig do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsHospitalityCardSettingsCardConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsHospitalityCardSettingsCardConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
