# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProduct do
  @moduledoc """
  A product that can be purchased.

  ## Attributes

  *   `catalogId` (*type:* `String.t`, *default:* `nil`) - The shopping catalog identifier.
  *   `maxPrice` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t`, *default:* `nil`) - The highes price this product is available for.
  *   `mediaProduct` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProduct.t`, *default:* `nil`) - TODO(ppoudyal) Add logging for media_product.
  *   `mid` (*type:* `String.t`, *default:* `nil`) - Optional. Knowledge Graph identifier for the product.
  *   `minPrice` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t`, *default:* `nil`) - The lowest price this product is available for.
  *   `title` (*type:* `String.t`, *default:* `nil`) - Title of the product. Example: Moto X Blue 64GB Note: This refers to only the catalog title not user specified phrase
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :catalogId => String.t() | nil,
          :maxPrice =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t() | nil,
          :mediaProduct =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProduct.t()
            | nil,
          :mid => String.t() | nil,
          :minPrice =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t() | nil,
          :title => String.t() | nil
        }

  field(:catalogId)
  field(:maxPrice, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney)

  field(:mediaProduct,
    as:
      GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProductMediaProduct
  )

  field(:mid)
  field(:minPrice, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney)
  field(:title)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProduct do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProduct.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProduct do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
