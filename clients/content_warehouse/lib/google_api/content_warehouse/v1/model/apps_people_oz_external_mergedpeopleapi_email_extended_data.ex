# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailExtendedData do
  @moduledoc """
  Extension data for a person email.

  ## Attributes

  *   `internalExternal` (*type:* `GoogleApi.ContentWarehouse.V1.Model.PeoplestackFlexorgsProtoInternalExternal.t`, *default:* `nil`) - For use with the CUSTOMER_INFO_ADDITIONAL_DATA extension. This includes information on whether the given email is internal to or external to the requesting user's domain.
  *   `isPlaceholder` (*type:* `boolean()`, *default:* `nil`) - For ListPeoplebyKnownId to indicate an email is sythesized from a lookup email.
  *   `smtpServerSupportsTls` (*type:* `boolean()`, *default:* `nil`) - For use with the TLS extension. Whether the SMTP server that handles delivery for this email address supports TLS encryption.
  *   `usesConfusingCharacters` (*type:* `boolean()`, *default:* `nil`) - For use with the Gmail Homograph Warning extension. Whether the email contains mixed character sets that could be used to decieve users. This field is populated by the GMAIL_SECURITY_DATA extension.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :internalExternal =>
            GoogleApi.ContentWarehouse.V1.Model.PeoplestackFlexorgsProtoInternalExternal.t() | nil,
          :isPlaceholder => boolean() | nil,
          :smtpServerSupportsTls => boolean() | nil,
          :usesConfusingCharacters => boolean() | nil
        }

  field(:internalExternal,
    as: GoogleApi.ContentWarehouse.V1.Model.PeoplestackFlexorgsProtoInternalExternal
  )

  field(:isPlaceholder)
  field(:smtpServerSupportsTls)
  field(:usesConfusingCharacters)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailExtendedData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailExtendedData.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailExtendedData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
