# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ReneEmbedding do
  @moduledoc """
  Message to represent an embedding vector with clusters.

  ## Attributes

  *   `clusterList` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ReneEmbeddingClusterList.t`, *default:* `nil`) - Token information of the embedding vector if available.
  *   `compressedValue` (*type:* `String.t`, *default:* `nil`) - Compressed value of the embedding. For example, different versions of starburst signals use different compressor to generate the value.
  *   `denseFeatureFloatValues` (*type:* `list(number())`, *default:* `nil`) - Optional feature map output from the model. Note: this is not applicable to some models.
  *   `floatValues` (*type:* `list(number())`, *default:* `nil`) - Values of the embedding vector.
  *   `floatValuesBeforeProjection` (*type:* `list(number())`, *default:* `nil`) - Optional embedding vector prior to projection. Note: this is not applicable to some models.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clusterList => GoogleApi.ContentWarehouse.V1.Model.ReneEmbeddingClusterList.t() | nil,
          :compressedValue => String.t() | nil,
          :denseFeatureFloatValues => list(number()) | nil,
          :floatValues => list(number()) | nil,
          :floatValuesBeforeProjection => list(number()) | nil
        }

  field(:clusterList, as: GoogleApi.ContentWarehouse.V1.Model.ReneEmbeddingClusterList)
  field(:compressedValue)
  field(:denseFeatureFloatValues, type: :list)
  field(:floatValues, type: :list)
  field(:floatValuesBeforeProjection, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ReneEmbedding do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ReneEmbedding.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ReneEmbedding do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
