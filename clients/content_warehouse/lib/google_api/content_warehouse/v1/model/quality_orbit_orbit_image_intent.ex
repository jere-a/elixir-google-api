# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityOrbitOrbitImageIntent do
  @moduledoc """
  Stores information for a single image-only orbit intent. See go/orbit-for-images-v2 for more details.

  ## Attributes

  *   `imageIntent` (*type:* `String.t`, *default:* `nil`) - Intent of this proto instance.
  *   `missingInputs` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `reach` (*type:* `String.t`, *default:* `nil`) - 
  *   `remove` (*type:* `boolean()`, *default:* `nil`) - Whether this intent should be removed when backfilling new classifications to the index. When backfilling a new version of a classifier to production we have cases where we actually want to *remove* an intent that was present in production because the new version might have moved the intent to below logging threshold. This bit should be used to signal this case so that merging logic can remove the intent for the image. This should *never* be set in a production callsite, it is only intended for backfilling operations.
  *   `score` (*type:* `number()`, *default:* `nil`) - Score of the intent.
  *   `trigger` (*type:* `boolean()`, *default:* `nil`) - Whether the intent triggered with the default threshold or not.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :imageIntent => String.t() | nil,
          :missingInputs => list(String.t()) | nil,
          :reach => String.t() | nil,
          :remove => boolean() | nil,
          :score => number() | nil,
          :trigger => boolean() | nil
        }

  field(:imageIntent)
  field(:missingInputs, type: :list)
  field(:reach)
  field(:remove)
  field(:score)
  field(:trigger)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityOrbitOrbitImageIntent do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityOrbitOrbitImageIntent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityOrbitOrbitImageIntent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
