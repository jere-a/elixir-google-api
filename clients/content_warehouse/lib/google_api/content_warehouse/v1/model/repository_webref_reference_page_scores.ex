# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores do
  @moduledoc """
  Signals used for mining new reference pages, set by the reference-page-scorer processor.

  ## Attributes

  *   `bookScore` (*type:* `number()`, *default:* `nil`) - Stores score for later offline voting to choose reference pages. If zero, it's not a good book reference page.
  *   `referencePageScore` (*type:* `number()`, *default:* `nil`) - Reference page score used to select the reference page owner.
  *   `selected` (*type:* `boolean()`, *default:* `nil`) - True if the entity is selected as the reference page owner.
  *   `singleTopicness` (*type:* `number()`, *default:* `nil`) - A score in [0, 1] which indicates the single topicness of the entity.
  *   `singleTopicnessV2` (*type:* `number()`, *default:* `nil`) - This should have the same semantic as single_topicness, and should replace it in the long term.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bookScore => number() | nil,
          :referencePageScore => number() | nil,
          :selected => boolean() | nil,
          :singleTopicness => number() | nil,
          :singleTopicnessV2 => number() | nil
        }

  field(:bookScore)
  field(:referencePageScore)
  field(:selected)
  field(:singleTopicness)
  field(:singleTopicnessV2)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
