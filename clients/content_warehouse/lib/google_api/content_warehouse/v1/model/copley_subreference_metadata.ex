# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata do
  @moduledoc """
  Represents the most compound resolved entities and most nested unresolved references for a span. Useful for punting.

  ## Attributes

  *   `mostCompoundResolvedEntities` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceResolution.t)`, *default:* `nil`) - Resolved entities are sorted from highest resolution score to lowest.
  *   `mostNestedUnresolvedReference` (*type:* `GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceReference.t`, *default:* `nil`) - This is a merged representation of the compound reference having the most_compound_resolved_entities as an argument.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :mostCompoundResolvedEntities =>
            list(GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceResolution.t()) | nil,
          :mostNestedUnresolvedReference =>
            GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceReference.t() | nil
        }

  field(:mostCompoundResolvedEntities,
    as: GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceResolution,
    type: :list
  )

  field(:mostNestedUnresolvedReference,
    as: GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceReference
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
