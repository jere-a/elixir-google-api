# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocationElement do
  @moduledoc """
  Next ID: 26 LINT.IfChange

  ## Attributes

  *   `aliasIcon` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.PersonalizationMapsAliasIcon.t)`, *default:* `nil`) - For elements with a NICKNAME alias location, this field will hold all matching alias icons, which are used in search to resolve the location.
  *   `aliasLocation` (*type:* `String.t`, *default:* `nil`) - The following fields (alias_location, qref_location, and saft_location) should have at most one non-empty value between them.
  *   `businessType` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalBusinessType.t`, *default:* `nil`) - Set only when type is BUSINESS_NAME or BUSINESS_CATEGORY.
  *   `contactLocation` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalContactLocation.t`, *default:* `nil`) - 
  *   `dialogReferents` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDialogReferentsDialogReferents.t)`, *default:* `nil`) - This will hold semantics from the dialog_referents subgrammar with offsets and indices relating to a list of results shown to the user. This field is repeated while in the future we could support multiple item list selection. i.e. [the starbucks] where multiple entries in the results will be indicated here
  *   `directionalModifier` (*type:* `String.t`, *default:* `nil`) - Set only when type is DIRECTIONAL_MODIFIER.
  *   `genericLocation` (*type:* `boolean()`, *default:* `nil`) - DEPRECATED. See basic_location.element.type == LOCATION_REFERENT to determine this instead. Populated by a type VISITED local action, this field is used to indicate a location element is a general-case $PT_visited_location string.
  *   `hotelType` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHotelType.t`, *default:* `nil`) - Set only when business_type is hotel.
  *   `hyperReliableData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData.t`, *default:* `nil`) - 
  *   `implicitLocalCategory` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalImplicitLocalCategory.t`, *default:* `nil`) - 
  *   `localResultId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocalResultId.t`, *default:* `nil`) - A field used to store the ID of a specific location entity, especially one not extracted via QRef. For example, - a location selected by the users via a dialog follow-up query like [the second one]. Will only be populated in the LocalSemanticsServlet, not in the grammar. - a location resolved based on a full search, e.g., following the geocoding step for a directions query. This field is also used by NoramlizeLocationForFingerprinting as the canonical place to store FeatureIds.
  *   `numBytes` (*type:* `integer()`, *default:* `nil`) - 
  *   `number` (*type:* `integer()`, *default:* `nil`) - Represents zip codes, street numbers, etc. that were detected directly by the grammar (and not, e.g., by QRef). DEPRECATED. We ran into problems with zip codes having leading zeroes. Now we store numbers only in the text field.
  *   `personalReferenceLocation` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingPersonalReferenceAnnotation.t`, *default:* `nil`) - A collection of QRefAnnotations repesenting Reference and Resolution data for Personal References. See go/copley-local and go/copley-annotator.
  *   `qrefLocation` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation.t`, *default:* `nil`) - 
  *   `saftLocation` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingSaftMentionAnnotation.t`, *default:* `nil`) - 
  *   `source` (*type:* `String.t`, *default:* `nil`) - 
  *   `startByte` (*type:* `integer()`, *default:* `nil`) - The byte span, in the raw query, which corresponds to this location element.
  *   `text` (*type:* `String.t`, *default:* `nil`) - A string representation of the location element. Typical, this field will be populated by the MakeLocationElementFn semantic function with the substring of the raw_query defined by start_byte and num_bytes. However, the field can also be populated explicitly in the grammar, in which case MakeLocationElementFn leaves it alone.
  *   `transitLineNumber` (*type:* `String.t`, *default:* `nil`) - Train number associated with /collection/geo/transit_line. Populated when user requests specific instance of a transit line. For example, long distance trains in India have two numbers for each train, one for up direction and other for down. And user use these numbers in queries along with name to specify the specific trip of the train. More details in go/number-transit-line-queries.
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aliasIcon =>
            list(GoogleApi.ContentWarehouse.V1.Model.PersonalizationMapsAliasIcon.t()) | nil,
          :aliasLocation => String.t() | nil,
          :businessType =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalBusinessType.t() | nil,
          :contactLocation =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalContactLocation.t() | nil,
          :dialogReferents =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDialogReferentsDialogReferents.t()
            )
            | nil,
          :directionalModifier => String.t() | nil,
          :genericLocation => boolean() | nil,
          :hotelType =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHotelType.t() | nil,
          :hyperReliableData =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData.t() | nil,
          :implicitLocalCategory =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalImplicitLocalCategory.t()
            | nil,
          :localResultId =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocalResultId.t() | nil,
          :numBytes => integer() | nil,
          :number => integer() | nil,
          :personalReferenceLocation =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingPersonalReferenceAnnotation.t()
            | nil,
          :qrefLocation =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation.t() | nil,
          :saftLocation =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingSaftMentionAnnotation.t() | nil,
          :source => String.t() | nil,
          :startByte => integer() | nil,
          :text => String.t() | nil,
          :transitLineNumber => String.t() | nil,
          :type => String.t() | nil
        }

  field(:aliasIcon,
    as: GoogleApi.ContentWarehouse.V1.Model.PersonalizationMapsAliasIcon,
    type: :list
  )

  field(:aliasLocation)

  field(:businessType, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalBusinessType)

  field(:contactLocation,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalContactLocation
  )

  field(:dialogReferents,
    as:
      GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsDialogReferentsDialogReferents,
    type: :list
  )

  field(:directionalModifier)
  field(:genericLocation)
  field(:hotelType, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHotelType)

  field(:hyperReliableData,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalHyperReliableData
  )

  field(:implicitLocalCategory,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalImplicitLocalCategory
  )

  field(:localResultId,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocalResultId
  )

  field(:numBytes)
  field(:number)

  field(:personalReferenceLocation,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingPersonalReferenceAnnotation
  )

  field(:qrefLocation, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingQRefAnnotation)

  field(:saftLocation,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingSaftMentionAnnotation
  )

  field(:source)
  field(:startByte)
  field(:text)
  field(:transitLineNumber)
  field(:type)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocationElement do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocationElement.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocationElement do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
