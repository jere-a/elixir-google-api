# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocation do
  @moduledoc """
  A representation of reminder-triggering locations. They may be specific, resolved locations, non-specific location groups, or personal aliases. Next id: 12

  ## Attributes

  *   `categoryInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationCategoryInfo.t`, *default:* `nil`) - 
  *   `chainInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationChainInfo.t`, *default:* `nil`) - 
  *   `customLocationType` (*type:* `String.t`, *default:* `nil`) - Optional additional information about the types of the custom location. This field is not stored in backend, and is only used to plumb NLP information to fulfillment UI.
  *   `displayAddress` (*type:* `String.t`, *default:* `nil`) - An address string that is suitable for displaying to the user in an application interface. It can be detailed, or brief. e.g. "80 Absolute Ave, Unit 1708, Mississauga, ON" e.g. "151 Charles Street West"
  *   `geoFeatureId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t`, *default:* `nil`) - Filled if location_type is CUSTOM and this is a resolved instance of a business (not for specific address locations).
  *   `lat` (*type:* `float()`, *default:* `nil`) - 
  *   `lng` (*type:* `float()`, *default:* `nil`) - 
  *   `locationType` (*type:* `String.t`, *default:* `nil`) - 
  *   `name` (*type:* `String.t`, *default:* `nil`) - Descriptive name, e.g. "43rd st new york", a user-edited place name (e.g. "Gym"), or a reverse geocoded business name. This can be any string.
  *   `personalLocationMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.CopleySourceTypeList.t`, *default:* `nil`) - Deprecated in favor of Reminder.personal_reference_metadata.
  *   `ttsAddress` (*type:* `String.t`, *default:* `nil`) - A localized, shortened version of the address, suitable for TTS. This originates in the LocationFrame.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :categoryInfo =>
            GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationCategoryInfo.t()
            | nil,
          :chainInfo =>
            GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationChainInfo.t() | nil,
          :customLocationType => String.t() | nil,
          :displayAddress => String.t() | nil,
          :geoFeatureId => GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t() | nil,
          :lat => float() | nil,
          :lng => float() | nil,
          :locationType => String.t() | nil,
          :name => String.t() | nil,
          :personalLocationMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.CopleySourceTypeList.t() | nil,
          :ttsAddress => String.t() | nil
        }

  field(:categoryInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationCategoryInfo
  )

  field(:chainInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationChainInfo
  )

  field(:customLocationType)
  field(:displayAddress)
  field(:geoFeatureId, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto)
  field(:lat)
  field(:lng)
  field(:locationType)
  field(:name)
  field(:personalLocationMetadata, as: GoogleApi.ContentWarehouse.V1.Model.CopleySourceTypeList)
  field(:ttsAddress)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
