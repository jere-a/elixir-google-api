# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProto do
  @moduledoc """
  Media item attached to an element of price list.

  ## Attributes

  *   `googleUrl` (*type:* `String.t`, *default:* `nil`) - The FIFE url associated with the media. NOTE: This FIFE URL must be PII-free, see go/product-catalogue-photo-storage
  *   `mediaFormat` (*type:* `String.t`, *default:* `nil`) - 
  *   `mediaKey` (*type:* `String.t`, *default:* `nil`) - The mediaKey associated with the media. NOTE: This media key must be PII-free, see go/product-catalogue-photo-storage
  *   `mediaSize` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProtoMediaSize.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :googleUrl => String.t() | nil,
          :mediaFormat => String.t() | nil,
          :mediaKey => String.t() | nil,
          :mediaSize =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProtoMediaSize.t() | nil
        }

  field(:googleUrl)
  field(:mediaFormat)
  field(:mediaKey)
  field(:mediaSize, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProtoMediaSize)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreMediaItemProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
