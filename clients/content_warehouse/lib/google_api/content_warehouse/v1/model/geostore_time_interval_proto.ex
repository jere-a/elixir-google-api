# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeIntervalProto do
  @moduledoc """


  ## Attributes

  *   `begin` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeEndpointProto.t`, *default:* `nil`) - Begin and end are used to specify a range of times: [begin, end). If one is present, the other must be present as well. Additionally, both must have matching time granularities - all fields specified in the begin TimeEndpointProto must be present in the end TimeEndpointProto and vice-versa. Hours are not allowed to wrap (begin.hour() <= end.hour()).
  *   `end` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeEndpointProto.t`, *default:* `nil`) - 
  *   `inverted` (*type:* `boolean()`, *default:* `nil`) - If true, then this interval actually encodes the complement of the specified occasion or range. For example, the following TimeIntervalProto encodes all times other than the month of May. TimeIntervalProto[ type = TYPE_RANGE inverted = true begin = TimeEndpointProto[ month = MAY ] end = TimeEndpointProto[ month = JUNE ] ]
  *   `occasion` (*type:* `String.t`, *default:* `nil`) - clang-format on
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :begin => GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeEndpointProto.t() | nil,
          :end => GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeEndpointProto.t() | nil,
          :inverted => boolean() | nil,
          :occasion => String.t() | nil,
          :type => String.t() | nil
        }

  field(:begin, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeEndpointProto)
  field(:end, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeEndpointProto)
  field(:inverted)
  field(:occasion)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeIntervalProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeIntervalProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreTimeIntervalProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
