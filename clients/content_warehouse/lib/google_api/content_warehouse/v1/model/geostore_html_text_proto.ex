# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreHtmlTextProto do
  @moduledoc """
  Represents HTML text associated with a feature.

  ## Attributes

  *   `text` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreLanguageTaggedTextProto.t)`, *default:* `nil`) - Zero or more texts of the specified type, in various languages. If this is a HTML_DESCRIPTION blob then these texts would hold the description in English, German, and so forth. The text is an HTML fragment, not a full page. The fragment should be suitable for including in a DIV. It must have balanced HTML tags. It may use HTML's "class" attributes to assign classes to HTML elements. This allows the HTML to be formatted by an (external) style sheet. The HTML should not have embedded style sheet definitions, nor should it have embedded JavaScript.
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :text =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreLanguageTaggedTextProto.t()) | nil,
          :type => String.t() | nil
        }

  field(:text,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreLanguageTaggedTextProto,
    type: :list
  )

  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreHtmlTextProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreHtmlTextProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreHtmlTextProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
