# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoMediaInfo do
  @moduledoc """
  Feel free to ignore this lint warning if only the trivia (e.g., comments) is is changed. LINT.IfChange

  ## Attributes

  *   `audioStream` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.VideoAudioStream.t)`, *default:* `nil`) - Each entry corresponds to one audio stream in the original media file.
  *   `containerId` (*type:* `integer()`, *default:* `nil`) - Container type of the file, e.g. FLV, H264, MP3. Uses the numeric value corresponding to the ContainerId enum objects, in order to avoid the dependency on vsi/videostreaminfo.proto. http://cs/symbol:ContainerId%20f:google3/video/vidproc/vsi/videostreaminfo.proto
  *   `fileSize` (*type:* `String.t`, *default:* `nil`) - Media file size in bytes.
  *   `overview` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoMediaOverview.t`, *default:* `nil`) - This is a high-level description of the media. It does not contain PII.
  *   `videoStream` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.VideoVideoStream.t)`, *default:* `nil`) - Each entry corresponds to one video stream (usually just one) in the original media file.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :audioStream => list(GoogleApi.ContentWarehouse.V1.Model.VideoAudioStream.t()) | nil,
          :containerId => integer() | nil,
          :fileSize => String.t() | nil,
          :overview => GoogleApi.ContentWarehouse.V1.Model.VideoMediaOverview.t() | nil,
          :videoStream => list(GoogleApi.ContentWarehouse.V1.Model.VideoVideoStream.t()) | nil
        }

  field(:audioStream, as: GoogleApi.ContentWarehouse.V1.Model.VideoAudioStream, type: :list)
  field(:containerId)
  field(:fileSize)
  field(:overview, as: GoogleApi.ContentWarehouse.V1.Model.VideoMediaOverview)
  field(:videoStream, as: GoogleApi.ContentWarehouse.V1.Model.VideoVideoStream, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoMediaInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoMediaInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoMediaInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
