# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoVideoGeoLocation do
  @moduledoc """
  Generic geo-location information. This is error-prone due to the fact that is uses signed integer fields, which are not supported by proto1 API and are cast to unsigned integers. Consider using the metadata_util function directly, which fills out a version 2 API proto.

  ## Attributes

  *   `altitudeE2` (*type:* `integer()`, *default:* `nil`) - Altitude is in meters and multiplied by 100 (i.e., in centimeters). Up till 10 km this fits in 3 bytes.
  *   `latitudeE7` (*type:* `integer()`, *default:* `nil`) - Latitude and longitude are in degrees and multiplied by 10^7. This gives the worst precision of about 1 cm at the equator.
  *   `longitudeE7` (*type:* `integer()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :altitudeE2 => integer() | nil,
          :latitudeE7 => integer() | nil,
          :longitudeE7 => integer() | nil
        }

  field(:altitudeE2)
  field(:latitudeE7)
  field(:longitudeE7)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoVideoGeoLocation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoVideoGeoLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoVideoGeoLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
