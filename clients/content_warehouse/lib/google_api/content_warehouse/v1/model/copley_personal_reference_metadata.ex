# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReferenceMetadata do
  @moduledoc """
  General message used to store metadata about references to personal entities, even if those entities cannot be resolved.

  ## Attributes

  *   `referenceScore` (*type:* `number()`, *default:* `nil`) - The strength of the personal reference. For example "my flight" may receive a high reference_score, whereas "the airport" may receive a low score.
  *   `references` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReference.t)`, *default:* `nil`) - A list of all references made. Empty if no personal references exist. Multiple references can be present when multiple references were made in a single query, or the type of reference was ambiguous.
  *   `subreferenceMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata.t`, *default:* `nil`) - Subreference metadata for all compound references on this span.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :referenceScore => number() | nil,
          :references =>
            list(GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReference.t()) | nil,
          :subreferenceMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata.t() | nil
        }

  field(:referenceScore)
  field(:references, as: GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReference, type: :list)
  field(:subreferenceMetadata, as: GoogleApi.ContentWarehouse.V1.Model.CopleySubreferenceMetadata)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReferenceMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReferenceMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CopleyPersonalReferenceMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
