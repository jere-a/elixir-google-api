# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabel do
  @moduledoc """


  ## Attributes

  *   `confidence` (*type:* `number()`, *default:* `nil`) - If global_label_value is present, confidence is ignored. confidence is DEPRECATED.
  *   `globalLabelBucket` (*type:* `integer()`, *default:* `nil`) - A byte-size value representing 64 * (1 + global_label_value). Use this instead of global_label_value to save on label storage. See quality_prose::LabelValueToBucket() for more info.
  *   `globalLabelValue` (*type:* `number()`, *default:* `nil`) - 
  *   `labelId` (*type:* `integer()`, *default:* `nil`) - At least one of label_id and label_name must be filled in
  *   `labelName` (*type:* `String.t`, *default:* `nil`) - 
  *   `provider` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabelProvider.t)`, *default:* `nil`) - 
  *   `providerId` (*type:* `list(String.t)`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confidence => number() | nil,
          :globalLabelBucket => integer() | nil,
          :globalLabelValue => number() | nil,
          :labelId => integer() | nil,
          :labelName => String.t() | nil,
          :provider =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabelProvider.t()
            )
            | nil,
          :providerId => list(String.t()) | nil
        }

  field(:confidence)
  field(:globalLabelBucket)
  field(:globalLabelValue)
  field(:labelId)
  field(:labelName)

  field(:provider,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabelProvider,
    type: :list
  )

  field(:providerId, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabel do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabel.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
