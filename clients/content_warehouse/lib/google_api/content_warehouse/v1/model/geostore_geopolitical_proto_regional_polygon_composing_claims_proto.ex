# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreGeopoliticalProtoRegionalPolygonComposingClaimsProto do
  @moduledoc """
  The polygon composition recipe for a specific region's view of this feature's geometry, based on disputed area claims asserted by this country. Note that the included / excluded claims listed for a given region's view of this feature may not match up exactly with which claims the region recognizes / does not recognize for this feature. Claims may only be included or excluded for regions that themselves are a party to the dispute, i.e. a region's view of itself will include its own claims, and a region's view of another feature will exclude its own claims. See current Geopolitical policy at go/geopolitical-policy-primer.

  ## Attributes

  *   `regionCode` (*type:* `String.t`, *default:* `nil`) - Region code (or other identifier) for the region.
  *   `regionExcludedClaims` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t)`, *default:* `nil`) - TYPE_DISPUTED_AREAs claimed by this feature excluded from this region's view of the feature's geometry. (The TDAs must have polygonal geometry and be referenced in this feature's political.claim field.) The polygons of these claims will be subtracted to this feature's base polygon when this feature is viewed from the specified region.
  *   `regionIncludedClaims` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t)`, *default:* `nil`) - TYPE_DISPUTED_AREAs claimed by this feature and included in this region's view of the feature's geometry. (The TDAs must have polygonal geometry and be referenced in this feature's political.claim field.) The polygons of these claims will be added to this feature's base polygon when this feature is viewed from the specified region.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :regionCode => String.t() | nil,
          :regionExcludedClaims =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t()) | nil,
          :regionIncludedClaims =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t()) | nil
        }

  field(:regionCode)

  field(:regionExcludedClaims,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto,
    type: :list
  )

  field(:regionIncludedClaims,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto,
    type: :list
  )
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.GeostoreGeopoliticalProtoRegionalPolygonComposingClaimsProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreGeopoliticalProtoRegionalPolygonComposingClaimsProto.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.GeostoreGeopoliticalProtoRegionalPolygonComposingClaimsProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
