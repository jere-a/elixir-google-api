# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoStyle do
  @moduledoc """
  Next id: 54 Font and text decorations:

  ## Attributes

  *   `marginTop` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - Margin
  *   `marginLeft` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `listStyleType` (*type:* `String.t`, *default:* `nil`) - 
  *   `referencedResourceIndex` (*type:* `list(integer())`, *default:* `nil`) - List of referenced resource indexes for any resources that this style references. (e.g. background images.) (see document.proto)
  *   `borderPixelWidthLeft` (*type:* `integer()`, *default:* `nil`) - 
  *   `display` (*type:* `String.t`, *default:* `nil`) - 
  *   `borderPixelWidthBottom` (*type:* `integer()`, *default:* `nil`) - 
  *   `textAlign` (*type:* `String.t`, *default:* `nil`) - 
  *   `fontSize` (*type:* `integer()`, *default:* `nil`) - 
  *   `borderColorArgbTop` (*type:* `integer()`, *default:* `nil`) - 
  *   `backgroundImageYPos` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `fontFamily` (*type:* `String.t`, *default:* `nil`) - `font_family` is the `font-family` computed style, not necessarily the actual font. https://developer.mozilla.org/en-US/docs/Web/CSS/font-family. Note that it may contain multiple font families, not just one.
  *   `overflowX` (*type:* `String.t`, *default:* `nil`) - 
  *   `borderColorArgbLeft` (*type:* `integer()`, *default:* `nil`) - 
  *   `textShadowColorArgb` (*type:* `integer()`, *default:* `nil`) - 
  *   `backgroundGradientRepeat` (*type:* `boolean()`, *default:* `nil`) - 
  *   `foregroundColorArgb` (*type:* `integer()`, *default:* `nil`) - Foreground color encoded as ARGB
  *   `borderPixelWidthRight` (*type:* `integer()`, *default:* `nil`) - 
  *   `position` (*type:* `String.t`, *default:* `nil`) - 
  *   `borderStyleLeft` (*type:* `String.t`, *default:* `nil`) - 
  *   `borderPixelWidthTop` (*type:* `integer()`, *default:* `nil`) - 
  *   `backgroundSize` (*type:* `String.t`, *default:* `nil`) - 
  *   `backgroundImageUrl` (*type:* `String.t`, *default:* `nil`) - The url of the background image in the first layer.
  *   `clip` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRectangle.t`, *default:* `nil`) - Default value for clip is "auto", which is represented here as !has_clip().
  *   `fontWeight` (*type:* `integer()`, *default:* `nil`) - 
  *   `backgroundGradientColorStopArgb` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `backgroundSizeWidth` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - Only present (but may be missing) if background_size == SIZE_LENGTH.
  *   `paddingTop` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - Padding
  *   `visibility` (*type:* `String.t`, *default:* `nil`) - 
  *   `textDecoration` (*type:* `String.t`, *default:* `nil`) - 
  *   `marginBottom` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `marginRight` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `borderStyleRight` (*type:* `String.t`, *default:* `nil`) - 
  *   `backgroundAttachment` (*type:* `String.t`, *default:* `nil`) - 
  *   `overflowY` (*type:* `String.t`, *default:* `nil`) - 
  *   `direction` (*type:* `String.t`, *default:* `nil`) - 
  *   `borderStyleBottom` (*type:* `String.t`, *default:* `nil`) - 
  *   `borderColorArgbBottom` (*type:* `integer()`, *default:* `nil`) - 
  *   `paddingLeft` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `hasBackground` (*type:* `boolean()`, *default:* `nil`) - Starting from Chromium, has_background is set when there is a non-empty specification for background_image, whether it be a url, gradient or other cases, such as cross-fade. Besides setting this field, We additionally parse url and gradient cases and populate some of the following background fields.
  *   `backgroundImageXPos` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - Background image position (x, y).
  *   `borderStyleTop` (*type:* `String.t`, *default:* `nil`) - 
  *   `backgroundSizeHeight` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `backgroundColorArgb` (*type:* `integer()`, *default:* `nil`) - Background color encoded as ARGB
  *   `paddingRight` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `borderColorArgbRight` (*type:* `integer()`, *default:* `nil`) - 
  *   `listStyleImageUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `backgroundGradientType` (*type:* `String.t`, *default:* `nil`) - 
  *   `backgroundImageRepeat` (*type:* `String.t`, *default:* `nil`) - 
  *   `opacity` (*type:* `number()`, *default:* `nil`) - 
  *   `fontStyle` (*type:* `String.t`, *default:* `nil`) - 
  *   `paddingBottom` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t`, *default:* `nil`) - 
  *   `zIndex` (*type:* `integer()`, *default:* `nil`) - Default value for z-index is "auto" which means "inherit from parent".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :marginTop =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :marginLeft =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :listStyleType => String.t() | nil,
          :referencedResourceIndex => list(integer()) | nil,
          :borderPixelWidthLeft => integer() | nil,
          :display => String.t() | nil,
          :borderPixelWidthBottom => integer() | nil,
          :textAlign => String.t() | nil,
          :fontSize => integer() | nil,
          :borderColorArgbTop => integer() | nil,
          :backgroundImageYPos =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :fontFamily => String.t() | nil,
          :overflowX => String.t() | nil,
          :borderColorArgbLeft => integer() | nil,
          :textShadowColorArgb => integer() | nil,
          :backgroundGradientRepeat => boolean() | nil,
          :foregroundColorArgb => integer() | nil,
          :borderPixelWidthRight => integer() | nil,
          :position => String.t() | nil,
          :borderStyleLeft => String.t() | nil,
          :borderPixelWidthTop => integer() | nil,
          :backgroundSize => String.t() | nil,
          :backgroundImageUrl => String.t() | nil,
          :clip =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRectangle.t() | nil,
          :fontWeight => integer() | nil,
          :backgroundGradientColorStopArgb => list(integer()) | nil,
          :backgroundSizeWidth =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :paddingTop =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :visibility => String.t() | nil,
          :textDecoration => String.t() | nil,
          :marginBottom =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :marginRight =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :borderStyleRight => String.t() | nil,
          :backgroundAttachment => String.t() | nil,
          :overflowY => String.t() | nil,
          :direction => String.t() | nil,
          :borderStyleBottom => String.t() | nil,
          :borderColorArgbBottom => integer() | nil,
          :paddingLeft =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :hasBackground => boolean() | nil,
          :backgroundImageXPos =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :borderStyleTop => String.t() | nil,
          :backgroundSizeHeight =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :backgroundColorArgb => integer() | nil,
          :paddingRight =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :borderColorArgbRight => integer() | nil,
          :listStyleImageUrl => String.t() | nil,
          :backgroundGradientType => String.t() | nil,
          :backgroundImageRepeat => String.t() | nil,
          :opacity => number() | nil,
          :fontStyle => String.t() | nil,
          :paddingBottom =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset.t() | nil,
          :zIndex => integer() | nil
        }

  field(:marginTop, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset)
  field(:marginLeft, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset)
  field(:listStyleType)
  field(:referencedResourceIndex, type: :list)
  field(:borderPixelWidthLeft)
  field(:display)
  field(:borderPixelWidthBottom)
  field(:textAlign)
  field(:fontSize)
  field(:borderColorArgbTop)

  field(:backgroundImageYPos,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset
  )

  field(:fontFamily)
  field(:overflowX)
  field(:borderColorArgbLeft)
  field(:textShadowColorArgb)
  field(:backgroundGradientRepeat)
  field(:foregroundColorArgb)
  field(:borderPixelWidthRight)
  field(:position)
  field(:borderStyleLeft)
  field(:borderPixelWidthTop)
  field(:backgroundSize)
  field(:backgroundImageUrl)
  field(:clip, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRectangle)
  field(:fontWeight)
  field(:backgroundGradientColorStopArgb, type: :list)

  field(:backgroundSizeWidth,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset
  )

  field(:paddingTop, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset)
  field(:visibility)
  field(:textDecoration)

  field(:marginBottom, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset)

  field(:marginRight, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset)
  field(:borderStyleRight)
  field(:backgroundAttachment)
  field(:overflowY)
  field(:direction)
  field(:borderStyleBottom)
  field(:borderColorArgbBottom)
  field(:paddingLeft, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset)
  field(:hasBackground)

  field(:backgroundImageXPos,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset
  )

  field(:borderStyleTop)

  field(:backgroundSizeHeight,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset
  )

  field(:backgroundColorArgb)

  field(:paddingRight, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset)

  field(:borderColorArgbRight)
  field(:listStyleImageUrl)
  field(:backgroundGradientType)
  field(:backgroundImageRepeat)
  field(:opacity)
  field(:fontStyle)

  field(:paddingBottom,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoOffset
  )

  field(:zIndex)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoStyle do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoStyle.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoStyle do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
