# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderTreeNode do
  @moduledoc """


  ## Attributes

  *   `box` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoBox.t`, *default:* `nil`) - Box is set for render blocks ( , , etc). Box for any RenderTreeNode can be found either in the RenderTreeNode itself or by traversing up the ancestors until a RenderTreeNode with a Box is found.
  *   `childRenderTreeNodeIndex` (*type:* `list(integer())`, *default:* `nil`) - child_render_tree_node_index is an index into the list of RenderTreeNodes stored in the Document. *** WARNING ***: Don't use this field. Applications should not rely on the structure of the render tree. This is an internal browser implementation detail and it changes from time to time. Generally, applications should obtain rendering information by starting with the relevant DOMTreeNode and following pointers from there to the relevant RenderTreeNodes.
  *   `domTreeNodeIndex` (*type:* `integer()`, *default:* `nil`) - Index of the DOMTreeNode for which this RenderTreeNode is applicable. This index can be used to lookup a DOMTreeNode from list of DOMTreeNodes stored in the Document.
  *   `inlineTextBox` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderTreeNodeInlineTextBox.t)`, *default:* `nil`) - 
  *   `renderedText` (*type:* `String.t`, *default:* `nil`) - The actual text that was rendered. This is applicable only for text nodes.
  *   `styleIndex` (*type:* `integer()`, *default:* `nil`) - Style index is set for rendered nodes (text nodes, image nodes, widgets, etc). The style_index can be used to lookup the style from the list of styles stored in the Document.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :box => GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoBox.t() | nil,
          :childRenderTreeNodeIndex => list(integer()) | nil,
          :domTreeNodeIndex => integer() | nil,
          :inlineTextBox =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderTreeNodeInlineTextBox.t()
            )
            | nil,
          :renderedText => String.t() | nil,
          :styleIndex => integer() | nil
        }

  field(:box, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoBox)
  field(:childRenderTreeNodeIndex, type: :list)
  field(:domTreeNodeIndex)

  field(:inlineTextBox,
    as:
      GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderTreeNodeInlineTextBox,
    type: :list
  )

  field(:renderedText)
  field(:styleIndex)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderTreeNode do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderTreeNode.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderTreeNode do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
