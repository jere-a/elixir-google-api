# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.MediaIndexSparseFloatVector do
  @moduledoc """


  ## Attributes

  *   `columns` (*type:* `list(String.t)`, *default:* `nil`) - Parallel arrays of column / value. Exactly one of those columns vector should be set. Columns must be in monotonically increasing order.
  *   `columnsInt16` (*type:* `String.t`, *default:* `nil`) - 
  *   `columnsInt32` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `columnsInt64` (*type:* `list(String.t)`, *default:* `nil`) - Columns are fixed integers, used for accelerated parse.
  *   `columnsInt8` (*type:* `String.t`, *default:* `nil`) - 
  *   `values` (*type:* `list(number())`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columns => list(String.t()) | nil,
          :columnsInt16 => String.t() | nil,
          :columnsInt32 => list(integer()) | nil,
          :columnsInt64 => list(String.t()) | nil,
          :columnsInt8 => String.t() | nil,
          :values => list(number()) | nil
        }

  field(:columns, type: :list)
  field(:columnsInt16)
  field(:columnsInt32, type: :list)
  field(:columnsInt64, type: :list)
  field(:columnsInt8)
  field(:values, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.MediaIndexSparseFloatVector do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.MediaIndexSparseFloatVector.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.MediaIndexSparseFloatVector do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
