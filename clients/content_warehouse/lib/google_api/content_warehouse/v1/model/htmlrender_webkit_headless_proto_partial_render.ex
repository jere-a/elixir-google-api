# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPartialRender do
  @moduledoc """
  PartialRenders can be created using the extension API to store the document state and/or create an image at points before the final render.

  ## Attributes

  *   `cookie` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie.t)`, *default:* `nil`) - Cookies at the time of snapshot creation.
  *   `currentClientUrl` (*type:* `String.t`, *default:* `nil`) - Current url as would appear in the web browser's address bar at the time of snapshot creation.
  *   `document` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument.t`, *default:* `nil`) - Snapshot of the document DOM + Render trees, if requested
  *   `id` (*type:* `String.t`, *default:* `nil`) - ID set by the render extension
  *   `image` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage.t`, *default:* `nil`) - Image of the render, if requested
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cookie =>
            list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie.t())
            | nil,
          :currentClientUrl => String.t() | nil,
          :document =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument.t() | nil,
          :id => String.t() | nil,
          :image =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage.t() | nil
        }

  field(:cookie,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie,
    type: :list
  )

  field(:currentClientUrl)
  field(:document, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument)
  field(:id)
  field(:image, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPartialRender do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPartialRender.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPartialRender do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
