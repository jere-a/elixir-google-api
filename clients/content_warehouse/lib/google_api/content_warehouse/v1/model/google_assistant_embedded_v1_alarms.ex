# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarms do
  @moduledoc """
  Contains information about on-device alarms for devices that support alarms.

  ## Attributes

  *   `alarms` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarm.t)`, *default:* `nil`) - Information about all on-device alarms.
  *   `snoozeDuration` (*type:* `String.t`, *default:* `nil`) - The amount of time for which alarms should be snoozed. If not specified, the productivity vertical applies a default snooze duration, which may be seen here: http://google3/assistant/verticals/productivity/utils/alarm_utils.cc;l=2734;rcl=415933085
  *   `stateFetchError` (*type:* `String.t`, *default:* `nil`) - Indicates if an error occurred while fetching alarm state. If this value is missing, it can be assumed that the state fetch was successful.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alarms =>
            list(GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarm.t()) | nil,
          :snoozeDuration => String.t() | nil,
          :stateFetchError => String.t() | nil
        }

  field(:alarms,
    as: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarm,
    type: :list
  )

  field(:snoozeDuration)
  field(:stateFetchError)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarms do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarms.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1Alarms do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
