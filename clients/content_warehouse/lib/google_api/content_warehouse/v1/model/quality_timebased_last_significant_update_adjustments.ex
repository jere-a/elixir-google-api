# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityTimebasedLastSignificantUpdateAdjustments do
  @moduledoc """


  ## Attributes

  *   `adjustmentSource` (*type:* `String.t`, *default:* `nil`) - If the selected LSU has been adjusted, i.e. the maximum passage timestamp, firstseen or contentage were assigned to LSU, the adjustment source is stored here.
  *   `isUpperboundTimestampPrecise` (*type:* `boolean()`, *default:* `nil`) - The timestamp is precise when it's derived from existing (>March 2022) passage timestamp.
  *   `unboundedTimestampInSeconds` (*type:* `String.t`, *default:* `nil`) - The timestamp that was picked up by the component indicated in the LastSignificantUpdateSource but was dropped due to exceeding the upper bound. Set only if it is not equal to final LSU.
  *   `unboundedTimestampSource` (*type:* `String.t`, *default:* `nil`) - The source that produced the unbounded timestamp.
  *   `upperboundTimestampInSeconds` (*type:* `String.t`, *default:* `nil`) - The upperbound value derived from passage timestamps. If present, the LSU date should never exceed this value. Design doc: go/lsu-max-passage-timestamp
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adjustmentSource => String.t() | nil,
          :isUpperboundTimestampPrecise => boolean() | nil,
          :unboundedTimestampInSeconds => String.t() | nil,
          :unboundedTimestampSource => String.t() | nil,
          :upperboundTimestampInSeconds => String.t() | nil
        }

  field(:adjustmentSource)
  field(:isUpperboundTimestampPrecise)
  field(:unboundedTimestampInSeconds)
  field(:unboundedTimestampSource)
  field(:upperboundTimestampInSeconds)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityTimebasedLastSignificantUpdateAdjustments do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityTimebasedLastSignificantUpdateAdjustments.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityTimebasedLastSignificantUpdateAdjustments do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
