# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.OceanDocTagCatalogSpecific do
  @moduledoc """
  catalog-specific fields.

  ## Attributes

  *   `latest` (*type:* `boolean()`, *default:* `nil`) - Is this the latest issue of this catalog series? This is required to filter results if the latest restrict is on.
  *   `publicationDate` (*type:* `integer()`, *default:* `nil`) - time_t date corresponding to the catalog publication date. Approximate when the catalog does not have an exact "date" of publication, e.g. For "Spring 2002", year, month and day are 2002, 03 and 21, respectivley. This value is used to compare catalog issues to determine the latest. The value is stored in seconds-since-epoch, 1/1/1970. This is not a problem for catalogs because we are not dealing with any catalogs from before the 70's.
  *   `publicationTimeToDisplay` (*type:* `String.t`, *default:* `nil`) - String to be displayed as catalog publication time, e.g. "Spring 2002".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :latest => boolean() | nil,
          :publicationDate => integer() | nil,
          :publicationTimeToDisplay => String.t() | nil
        }

  field(:latest)
  field(:publicationDate)
  field(:publicationTimeToDisplay)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.OceanDocTagCatalogSpecific do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.OceanDocTagCatalogSpecific.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.OceanDocTagCatalogSpecific do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
