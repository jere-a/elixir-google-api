# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldWithRightsProto do
  @moduledoc """
  Proto used to represent rights for a feature property id. See go/geo-rights for more details. NOTE: Use google3/geostore/provenance/public/rights.h or google3/java/com/google/geostore/provenance/rights/Rights.java instead of accessing this proto directly.

  ## Attributes

  *   `attributeId` (*type:* `String.t`, *default:* `nil`) - **DEPRECATED** Never set. 
  *   `featurePropertyId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto.t`, *default:* `nil`) - The feature property id for which this entry tracks rights.
  *   `fieldType` (*type:* `integer()`, *default:* `nil`) - **DEPRECATED** The field type for which this entry tracks rights. There may be multiple entries for the same field type - prefer feature_property_id to uniquely identify a particular entry. 
  *   `minRightsLevel` (*type:* `String.t`, *default:* `nil`) - The minimum rights level among all current values for this feature property id.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributeId => String.t() | nil,
          :featurePropertyId =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto.t() | nil,
          :fieldType => integer() | nil,
          :minRightsLevel => String.t() | nil
        }

  field(:attributeId)

  field(:featurePropertyId, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto)

  field(:fieldType)
  field(:minRightsLevel)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldWithRightsProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldWithRightsProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldWithRightsProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
