# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerServingTimeClusterId do
  @moduledoc """
  The serving cluster id metadata. Why we cluster the documents. The default value is UNKNOWN. Serving-Side Clustering is used for pages which represent the same content but are not identical (e.g. translated pages, or paginated content). Those documents are not dup-clustered in Alexandria so that all documents (and their tokens) are available to search queries. However, those documents are assigned the same Serving-Time-Cluster-ID (on the same reasontype), which during serving guarantees that only one of them is shown to the user.

  ## Attributes

  *   `clusterId` (*type:* `String.t`, *default:* `nil`) - The unique id to distinguish members in cluster. It could be generated in different ways according to reason, e.g. LINK_REL_NEXT_PREVIOUS: it is the fingerprint of the URL of index 0; PAGE_PARAMETER_INFO: it is the fingerprint of pagination pattern (pagination_pattern_fp field in PageParamInfo message).
  *   `indexForDebugging` (*type:* `integer()`, *default:* `nil`) - The member index of this document in cluster. Starts from "0". Note that indices of pages in a cluster may not be consistent with each other, because we may update them at different points in time. Currently only used for debugging.
  *   `reason` (*type:* `String.t`, *default:* `nil`) - The reason why this document is clustered into this cluster.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clusterId => String.t() | nil,
          :indexForDebugging => integer() | nil,
          :reason => String.t() | nil
        }

  field(:clusterId)
  field(:indexForDebugging)
  field(:reason)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerServingTimeClusterId do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerServingTimeClusterId.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingDocjoinerServingTimeClusterId do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
