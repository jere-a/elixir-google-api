# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.LocalsearchProtoInternalFoodOrderingActionMetadata do
  @moduledoc """
  * Proto representing the metadata associated with food ordering internal action. Next ID: 13

  ## Attributes

  *   `actionType` (*type:* `String.t`, *default:* `nil`) - The action type of this action metadata.
  *   `hasPrimarilyFoodIntent` (*type:* `boolean()`, *default:* `nil`) - If true, it indicates that the merchant has a primarily food intent. This field will only be set when enable_food_gcid_strict_check in FoodOrderingRestrictionProto is true, see go/togo-unified:overlapping-for-le. See go/togo-unified-gcid for how this is calculated.
  *   `isOutOfOperationalHours` (*type:* `boolean()`, *default:* `nil`) - If set, indicates that the food ordering service is out of operational hours. This could only be populated if the request explicitly asks for ignore_operational_hours in request (universalsearch/rpc/geo/food_ordering_restriction.proto). Design doc: go/fo-persistent-v1.
  *   `isWhitelistedExternalRestaurant` (*type:* `boolean()`, *default:* `nil`) - When true, indicates that this is a whitelisted restaurant from a first party (but non FO) partner, i.e. a merchant from the orderig app, who is Google owned first party food ordering platform. Design doc: go/onboard-mavn-to-fo. Tracking bug: b/150331855
  *   `nextOpeningTime` (*type:* `DateTime.t`, *default:* `nil`) - Next opening time when the food ordering service will be available. This is only present if the unavailability reason is OUT_OF_OPERATIONAL_HOURS.
  *   `onlyOrderAheadServicesAvailable` (*type:* `boolean()`, *default:* `nil`) - Indicates whether only order ahead services are available. Order ahead services allow only to place order for future and ASAP order can not be placed via them.
  *   `serviceInfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.LocalsearchProtoInternalFoodOrderingActionMetadataServiceInfo.t)`, *default:* `nil`) - Aggregated service information by service type. Each service type would only have one ServiceInfo. Optional.
  *   `supportedServiceType` (*type:* `String.t`, *default:* `nil`) - Food ordering service type.
  *   `unavailabilityReason` (*type:* `String.t`, *default:* `nil`) - Reason for unavailability of internal food ordering action. This is only present when FOPA is unavailable for a particular restaurant. When this is set, all other fields in this proto will not be populated. Note(fo-search): If there are log only partners and this particular restaurant is only supported because of log only partners, this field will not be set to NOT_INTEGRATED_WITH_FOPA.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :actionType => String.t() | nil,
          :hasPrimarilyFoodIntent => boolean() | nil,
          :isOutOfOperationalHours => boolean() | nil,
          :isWhitelistedExternalRestaurant => boolean() | nil,
          :nextOpeningTime => DateTime.t() | nil,
          :onlyOrderAheadServicesAvailable => boolean() | nil,
          :serviceInfo =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.LocalsearchProtoInternalFoodOrderingActionMetadataServiceInfo.t()
            )
            | nil,
          :supportedServiceType => String.t() | nil,
          :unavailabilityReason => String.t() | nil
        }

  field(:actionType)
  field(:hasPrimarilyFoodIntent)
  field(:isOutOfOperationalHours)
  field(:isWhitelistedExternalRestaurant)
  field(:nextOpeningTime, as: DateTime)
  field(:onlyOrderAheadServicesAvailable)

  field(:serviceInfo,
    as:
      GoogleApi.ContentWarehouse.V1.Model.LocalsearchProtoInternalFoodOrderingActionMetadataServiceInfo,
    type: :list
  )

  field(:supportedServiceType)
  field(:unavailabilityReason)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.LocalsearchProtoInternalFoodOrderingActionMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.LocalsearchProtoInternalFoodOrderingActionMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.LocalsearchProtoInternalFoodOrderingActionMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
