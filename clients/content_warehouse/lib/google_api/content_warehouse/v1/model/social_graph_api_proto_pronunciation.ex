# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoPronunciation do
  @moduledoc """
  Stores the pronunciation as phoneme for the given word/text. Next ID: 8

  ## Attributes

  *   `learningSessionId` (*type:* `String.t`, *default:* `nil`) - All pronunciations with the same learning_session_id were learnt in the same learning flow, e.g. multiple name segments learnt simultaneously from a recording in the Your People UI.
  *   `learningSource` (*type:* `String.t`, *default:* `nil`) - 
  *   `locale` (*type:* `String.t`, *default:* `nil`) - The locale used when learning the pronunciation. BCP-47 language code, e.g. "en-US".
  *   `phonemes` (*type:* `String.t`, *default:* `nil`) - Phoneme sequence representing how the user pronounces |token|. Format is specified by the phonology_type type field, e.g. go/psampa is the preferred phonology type used by the TTS team.
  *   `phonologyType` (*type:* `String.t`, *default:* `nil`) - 
  *   `spellingHint` (*type:* `String.t`, *default:* `nil`) - An optional user-specified spelling of this token, to improve pronunciation learning success rate. E.g. the token may be "Jana" and the spelling hint "jah-nah".
  *   `token` (*type:* `String.t`, *default:* `nil`) - Corresponds to a word segment of the contact name. E.g. for a contact with given name "John Doe", last name "Smith" and nickname "Best Dad", |token| can be any of {John, Doe, Smith, Best, Dad}.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :learningSessionId => String.t() | nil,
          :learningSource => String.t() | nil,
          :locale => String.t() | nil,
          :phonemes => String.t() | nil,
          :phonologyType => String.t() | nil,
          :spellingHint => String.t() | nil,
          :token => String.t() | nil
        }

  field(:learningSessionId)
  field(:learningSource)
  field(:locale)
  field(:phonemes)
  field(:phonologyType)
  field(:spellingHint)
  field(:token)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoPronunciation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoPronunciation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoPronunciation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
