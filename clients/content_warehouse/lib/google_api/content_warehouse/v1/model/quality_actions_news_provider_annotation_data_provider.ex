# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityActionsNewsProviderAnnotationDataProvider do
  @moduledoc """
  NextId: 6

  ## Attributes

  *   `locales` (*type:* `list(String.t)`, *default:* `nil`) - List of supported locales for this provider. Must follow the format from go/iii, e.g.: 'en', 'en-US', 'en-GB', etc. Short forms without regions codes, such as, 'en' match all possible regions: en-US, en-GB, en-IN, etc.
  *   `officialName` (*type:* `String.t`, *default:* `nil`) - The official name of the provider. Used in TTS and should be localized.
  *   `officialNamePronunciation` (*type:* `String.t`, *default:* `nil`) - TTS hint for the pronunciation of the name. Should be left blank unless TTS performs poorly on official_name. Example: Without hinting, TTS mispronounces "The Daily 202" as "the daily two hundred and two". Feeding tts the string "the daily two oh two" produces correct TTS.
  *   `providerId` (*type:* `integer()`, *default:* `nil`) - The provider id used for news source URL lookup in Kansas. See b/27250779 for details.
  *   `score` (*type:* `float()`, *default:* `nil`) - A score of how confident the annotated span is a news provider. For example, a high score is assigned for span "bbc news", but a low score for span "bbc", which only triggers narrative news aqua parse for a query with explicit news intent, e.g [play news from bbc].
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :locales => list(String.t()) | nil,
          :officialName => String.t() | nil,
          :officialNamePronunciation => String.t() | nil,
          :providerId => integer() | nil,
          :score => float() | nil
        }

  field(:locales, type: :list)
  field(:officialName)
  field(:officialNamePronunciation)
  field(:providerId)
  field(:score)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsNewsProviderAnnotationDataProvider do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityActionsNewsProviderAnnotationDataProvider.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsNewsProviderAnnotationDataProvider do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
