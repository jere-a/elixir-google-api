# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchCaptionSpanAnchorFeatures do
  @moduledoc """


  ## Attributes

  *   `dolphinFeatures` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSpanDolphinFeatures.t`, *default:* `nil`) - The features used to construct the inference example.
  *   `dolphinScores` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSpanDolphinScores.t`, *default:* `nil`) - The inference result from the Dolphin span model.
  *   `embeddingDistance` (*type:* `list(number())`, *default:* `nil`) - Embedding distances (e.g. cosine distance) to the other anchors of the same video.
  *   `postGapInMs` (*type:* `integer()`, *default:* `nil`) - Time gap in ms to the next anchor. Always positive number.
  *   `preGapInMs` (*type:* `integer()`, *default:* `nil`) - Time gap in ms to the previous anchor. Always a positive number.
  *   `saftBeginTokenIndex` (*type:* `integer()`, *default:* `nil`) - The range of tokens in video_info.saft_doc for the anchor label.
  *   `saftEndTokenIndex` (*type:* `integer()`, *default:* `nil`) - 
  *   `saftTranscriptEndCharOffset` (*type:* `integer()`, *default:* `nil`) - 
  *   `saftTranscriptStartCharOffset` (*type:* `integer()`, *default:* `nil`) - The range of characters in video_info.saft_transcript for the anchor label.
  *   `spanAsrConfidenceStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - A summary of the ASR confidence for the selected candidate.
  *   `spanDolphinScore` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - A summary of the Dolphin span token scores for the selected candidate.
  *   `wordCount` (*type:* `integer()`, *default:* `nil`) - Word count of the span text, tokenized with SAFT.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dolphinFeatures =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSpanDolphinFeatures.t() | nil,
          :dolphinScores =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSpanDolphinScores.t() | nil,
          :embeddingDistance => list(number()) | nil,
          :postGapInMs => integer() | nil,
          :preGapInMs => integer() | nil,
          :saftBeginTokenIndex => integer() | nil,
          :saftEndTokenIndex => integer() | nil,
          :saftTranscriptEndCharOffset => integer() | nil,
          :saftTranscriptStartCharOffset => integer() | nil,
          :spanAsrConfidenceStats =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil,
          :spanDolphinScore =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil,
          :wordCount => integer() | nil
        }

  field(:dolphinFeatures,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSpanDolphinFeatures
  )

  field(:dolphinScores,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchSpanDolphinScores
  )

  field(:embeddingDistance, type: :list)
  field(:postGapInMs)
  field(:preGapInMs)
  field(:saftBeginTokenIndex)
  field(:saftEndTokenIndex)
  field(:saftTranscriptEndCharOffset)
  field(:saftTranscriptStartCharOffset)

  field(:spanAsrConfidenceStats,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats
  )

  field(:spanDolphinScore, as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats)
  field(:wordCount)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchCaptionSpanAnchorFeatures do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchCaptionSpanAnchorFeatures.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchCaptionSpanAnchorFeatures do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
