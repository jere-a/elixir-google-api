# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplateSubSet do
  @moduledoc """
  Each SubSet contains LocalDescriptors of a specific type. The type indicates which algorithm has been used to generate the descriptors. No enum is defined for the descriptor_type. For most applications it is sufficient to know if two descriptors are of the same or a different type, while ignoring the details of their generation. The descriptor type '0' is reserved and must not be used.

  ## Attributes

  *   `descriptor` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecLocalDescriptor.t)`, *default:* `nil`) - 
  *   `descriptorType` (*type:* `integer()`, *default:* `nil`) - 
  *   `isBinaryDescriptor` (*type:* `boolean()`, *default:* `nil`) - Used to indicate if the descriptor is binary or not. When decompressing feature this is useful to decide calling different decompression functions.
  *   `numDescriptors` (*type:* `integer()`, *default:* `nil`) - Used to store the number of descriptors for statistical purposes, if the descriptors themselves are not stored.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :descriptor =>
            list(GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecLocalDescriptor.t())
            | nil,
          :descriptorType => integer() | nil,
          :isBinaryDescriptor => boolean() | nil,
          :numDescriptors => integer() | nil
        }

  field(:descriptor,
    as: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecLocalDescriptor,
    type: :list
  )

  field(:descriptorType)
  field(:isBinaryDescriptor)
  field(:numDescriptors)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplateSubSet do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplateSubSet.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplateSubSet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
