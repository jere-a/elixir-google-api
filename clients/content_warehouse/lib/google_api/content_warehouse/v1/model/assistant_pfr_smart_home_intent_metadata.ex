# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantPfrSmartHomeIntentMetadata do
  @moduledoc """
  Used by the Smarthome Business Rules twiddler to determine whether to replace the top-scoring Smarthome intent with another.

  ## Attributes

  *   `deviceRdMetadata` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AssistantPfrDeviceRdMetadata.t)`, *default:* `nil`) - Each DeviceRdMetadata represents one device RD (device slot) in the intent. Note that each device RD could have multiple device groundings inside of it.
  *   `intentName` (*type:* `String.t`, *default:* `nil`) - 
  *   `isExactMatch` (*type:* `boolean()`, *default:* `nil`) - When num_constraints == num_constraints_satisfied, indicating all slot matchings are exact match.
  *   `isGrounded` (*type:* `boolean()`, *default:* `nil`) - When num_grounded_args > 0, indicating there is at least one top-level argument is grounded.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceRdMetadata =>
            list(GoogleApi.ContentWarehouse.V1.Model.AssistantPfrDeviceRdMetadata.t()) | nil,
          :intentName => String.t() | nil,
          :isExactMatch => boolean() | nil,
          :isGrounded => boolean() | nil
        }

  field(:deviceRdMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantPfrDeviceRdMetadata,
    type: :list
  )

  field(:intentName)
  field(:isExactMatch)
  field(:isGrounded)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantPfrSmartHomeIntentMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantPfrSmartHomeIntentMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantPfrSmartHomeIntentMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
