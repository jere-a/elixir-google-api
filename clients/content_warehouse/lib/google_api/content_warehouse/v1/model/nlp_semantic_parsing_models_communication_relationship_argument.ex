# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsCommunicationRelationshipArgument do
  @moduledoc """
  A relationship contact.

  ## Attributes

  *   `alias` (*type:* `String.t`, *default:* `nil`) - The alias of the relationship in the query, e.g. "mom".
  *   `canonical` (*type:* `String.t`, *default:* `nil`) - The canonical format of the relationship, e.g. "Mother".
  *   `canonicalLexicalMid` (*type:* `String.t`, *default:* `nil`) - Mid for an entity that has lexical data (a LexiconEntry). See https://g3doc.corp.google.com/nlp/generation/g3doc/lexical_data.md for for more information about lexical data. This is the canonical mid for this entity (eg. it would be /m/0lbxz for "mother" in EN even if user referred to "mom").
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alias => String.t() | nil,
          :canonical => String.t() | nil,
          :canonicalLexicalMid => String.t() | nil
        }

  field(:alias)
  field(:canonical)
  field(:canonicalLexicalMid)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsCommunicationRelationshipArgument do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsCommunicationRelationshipArgument.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsCommunicationRelationshipArgument do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
