# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotation do
  @moduledoc """
  High level category annotations for documents and queries.

  ## Attributes

  *   `browsyTopic` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationBrowsyTopic.t`, *default:* `nil`) - Experimental scores to be used by Discover.
  *   `debugString` (*type:* `String.t`, *default:* `nil`) - Title of the category. Eg "Politics", "Technology".
  *   `hitcat` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationHitCatSource.t`, *default:* `nil`) - Sources asserting the category. In the future we may have one calibrated confidence score.
  *   `mid` (*type:* `String.t`, *default:* `nil`) - Mid representation of the category. Eg "/m/05qt0". WARNING: In UDR this field is not populated, use document_entity.entity.mid instead of document_entity.category.mid.
  *   `shopping` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationShoppingSignals.t`, *default:* `nil`) - Qprime asserting this category.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :browsyTopic =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationBrowsyTopic.t()
            | nil,
          :debugString => String.t() | nil,
          :hitcat =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationHitCatSource.t()
            | nil,
          :mid => String.t() | nil,
          :shopping =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationShoppingSignals.t()
            | nil
        }

  field(:browsyTopic,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationBrowsyTopic
  )

  field(:debugString)

  field(:hitcat,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationHitCatSource
  )

  field(:mid)

  field(:shopping,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotationShoppingSignals
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotation.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefCategoryAnnotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
