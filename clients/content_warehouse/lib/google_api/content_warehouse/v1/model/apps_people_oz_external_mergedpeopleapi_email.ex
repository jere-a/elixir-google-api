# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmail do
  @moduledoc """


  ## Attributes

  *   `certificate` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailCertificate.t)`, *default:* `nil`) - 
  *   `classification` (*type:* `String.t`, *default:* `nil`) - 
  *   `contactGroupPreference` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailContactGroupPreference.t)`, *default:* `nil`) - To read or update, use the CONTACT_GROUP_PREFERENCE mask field.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - 
  *   `extendedData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailExtendedData.t`, *default:* `nil`) - 
  *   `formattedType` (*type:* `String.t`, *default:* `nil`) - The `type` translated and formatted in the request locale. See go/people-api-howto/localization for details on how to usage.
  *   `metadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata.t`, *default:* `nil`) - 
  *   `signupEmailMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailSignupEmailMetadata.t`, *default:* `nil`) - 
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of the email address. The type can be free form or one of these predefined values: * `home` * `work` * `other`
  *   `value` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :certificate =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailCertificate.t()
            )
            | nil,
          :classification => String.t() | nil,
          :contactGroupPreference =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailContactGroupPreference.t()
            )
            | nil,
          :displayName => String.t() | nil,
          :extendedData =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailExtendedData.t()
            | nil,
          :formattedType => String.t() | nil,
          :metadata =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata.t()
            | nil,
          :signupEmailMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailSignupEmailMetadata.t()
            | nil,
          :type => String.t() | nil,
          :value => String.t() | nil
        }

  field(:certificate,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailCertificate,
    type: :list
  )

  field(:classification)

  field(:contactGroupPreference,
    as:
      GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailContactGroupPreference,
    type: :list
  )

  field(:displayName)

  field(:extendedData,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailExtendedData
  )

  field(:formattedType)

  field(:metadata,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata
  )

  field(:signupEmailMetadata,
    as:
      GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmailSignupEmailMetadata
  )

  field(:type)
  field(:value)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmail do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmail.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiEmail do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
