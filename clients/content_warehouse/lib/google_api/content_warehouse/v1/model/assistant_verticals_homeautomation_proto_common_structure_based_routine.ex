# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoCommonStructureBasedRoutine do
  @moduledoc """
  Routines team stores the core Structure Based Routine data as the payload. We will add specific metadata on a per-need basis. LINT.IfChange(proto_structure_based_routine) Next id: 12 These two forms of payload are equivalent data in different formats and both will be stored in Home Graph. 1. The internal format will fan out to the DynamicEntity Footprints for read in Settings flow and Execution. 2. The UI format will be stripped out upon replication to DynamicEntity Footprints due to its redundancy and the Footprints data size limit, i.e. DE Footprints will only contain the internal format.

  ## Attributes

  *   `enabled` (*type:* `boolean()`, *default:* `nil`) - Whether this Routine is enabled or not. If false, then this Routine can't be triggered by Voice.
  *   `googlePreconfigWorkflowId` (*type:* `String.t`, *default:* `nil`) - The unique identifier for a class of workflows. For example: * "sbr_001" => Away * "sbr_002" => Home * "category_template" => CUSTOM
  *   `language` (*type:* `String.t`, *default:* `nil`) - 
  *   `payload` (*type:* `map()`, *default:* `nil`) - Internal format payload primarily for Routines team use.
  *   `securityLevel` (*type:* `String.t`, *default:* `nil`) - The security level of the Structure Based Routine as determined by the most security-sensitive task.
  *   `shared` (*type:* `boolean()`, *default:* `nil`) - 
  *   `storagePayload` (*type:* `map()`, *default:* `nil`) - 
  *   `structureId` (*type:* `String.t`, *default:* `nil`) - 
  *   `triggers` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoCommonStructureBasedRoutineTrigger.t)`, *default:* `nil`) - Voice or event triggers.
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  *   `uiPayload` (*type:* `map()`, *default:* `nil`) - UI format payload primarily for external team use.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :enabled => boolean() | nil,
          :googlePreconfigWorkflowId => String.t() | nil,
          :language => String.t() | nil,
          :payload => map() | nil,
          :securityLevel => String.t() | nil,
          :shared => boolean() | nil,
          :storagePayload => map() | nil,
          :structureId => String.t() | nil,
          :triggers =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoCommonStructureBasedRoutineTrigger.t()
            )
            | nil,
          :type => String.t() | nil,
          :uiPayload => map() | nil
        }

  field(:enabled)
  field(:googlePreconfigWorkflowId)
  field(:language)
  field(:payload, type: :map)
  field(:securityLevel)
  field(:shared)
  field(:storagePayload, type: :map)
  field(:structureId)

  field(:triggers,
    as:
      GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoCommonStructureBasedRoutineTrigger,
    type: :list
  )

  field(:type)
  field(:uiPayload, type: :map)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoCommonStructureBasedRoutine do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoCommonStructureBasedRoutine.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AssistantVerticalsHomeautomationProtoCommonStructureBasedRoutine do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
