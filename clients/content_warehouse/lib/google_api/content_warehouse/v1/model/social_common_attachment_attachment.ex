# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.SocialCommonAttachmentAttachment do
  @moduledoc """
  An Attachment represents a linked entity associated with a piece of social content. This may be a 1st-party or 3rd-party entity. In the Papyrus context, an Attachment is part of a Cent, and sits alongside the main content of the cent, which is represented as a sequence of Segments. Right now an Attachment is just a wrapper around an Embed, but we provide the extra layer of abstraction since, as Embeds move to separate storage in Briefcase, we may want to add additional fields that are not part of the Embed proper, but that (for example) relate to the usage of the linked content within the particular post/cent.

  ## Attributes

  *   `embedItem` (*type:* `GoogleApi.ContentWarehouse.V1.Model.EmbedsEmbedClientItem.t`, *default:* `nil`) - An embed represents an external entity. See go/es-embeds.
  *   `id` (*type:* `String.t`, *default:* `nil`) - An id to uniquely identify an attachment when several attachments are in a collection.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :embedItem => GoogleApi.ContentWarehouse.V1.Model.EmbedsEmbedClientItem.t() | nil,
          :id => String.t() | nil
        }

  field(:embedItem, as: GoogleApi.ContentWarehouse.V1.Model.EmbedsEmbedClientItem)
  field(:id)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.SocialCommonAttachmentAttachment do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.SocialCommonAttachmentAttachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.SocialCommonAttachmentAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
