# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfo do
  @moduledoc """
  Information of the app to be annotated for the query. It contains the name of the app, the package name associated with it. It also contains the confidence associated with {app, package} pair. This confidence is calculated from different signals like navboost, ranking etc. which later is used for ranking the apps for a particular query. The source of this app information is also indicated. This app info can either be from installed app (collected from device content) or from the fastmap. LINT.IfChange

  ## Attributes

  *   `androidIntent` (*type:* `list(String.t)`, *default:* `nil`) - The list of android intents that the app is capable of executing.
  *   `appName` (*type:* `String.t`, *default:* `nil`) - This is the string matched from the query.
  *   `category` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppUnderstandingCategory.t`, *default:* `nil`) - Category of this package.
  *   `confidence` (*type:* `number()`, *default:* `nil`) - 
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - This is the display name of the app as shown below the app icon.
  *   `fallbackUrl` (*type:* `String.t`, *default:* `nil`) - URL for the website associated with this app.
  *   `packageName` (*type:* `String.t`, *default:* `nil`) - Note that the package_name could be empty for two reasons: - The AppInfo is annotated by device content. - The ngram exists in app name fastmap, but there are a lot of packages associated with it. e.g., there could be a lot of apps for app name "recipes app".
  *   `source` (*type:* `String.t`, *default:* `nil`) - For the future source, use the field in source_data.source().
  *   `sourceData` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceData.t)`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :androidIntent => list(String.t()) | nil,
          :appName => String.t() | nil,
          :category =>
            GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppUnderstandingCategory.t() | nil,
          :confidence => number() | nil,
          :displayName => String.t() | nil,
          :fallbackUrl => String.t() | nil,
          :packageName => String.t() | nil,
          :source => String.t() | nil,
          :sourceData =>
            list(GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceData.t()) | nil
        }

  field(:androidIntent, type: :list)
  field(:appName)
  field(:category, as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppUnderstandingCategory)
  field(:confidence)
  field(:displayName)
  field(:fallbackUrl)
  field(:packageName)
  field(:source)

  field(:sourceData,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceData,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
