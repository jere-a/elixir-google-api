# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsMustangSentimentSnippetAnnotations do
  @moduledoc """
  A conceptual structure for storing sentiment snippet information in mustang. Essentially an adaptation of PhraseAnnotationProperties from //repository/annotations/proto/annotations.proto.

  ## Attributes

  *   `deprecatedMagnitude` (*type:* `number()`, *default:* `nil`) - Deprecated: use snippet_score instead
  *   `deprecatedPolarity` (*type:* `number()`, *default:* `nil`) - Deprecated: use snippet_score instead
  *   `end` (*type:* `integer()`, *default:* `nil`) - 
  *   `isTruncated` (*type:* `boolean()`, *default:* `nil`) - 
  *   `phraseType` (*type:* `String.t`, *default:* `nil`) - 
  *   `snippetScore` (*type:* `integer()`, *default:* `nil`) - 
  *   `snippetText` (*type:* `String.t`, *default:* `nil`) - This protobuffer is serving double duty as both a Mustang attachment and the response proto that gets returned by Mustang in the WWWSnippetResponse's info MessageSet. When stored as an attachment, this field will always be empty. However, when returned with the WWWSnippetResponse, Mustang will print and store the actual sentiment snippet's text here.
  *   `start` (*type:* `integer()`, *default:* `nil`) - begin and end are token offsets.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deprecatedMagnitude => number() | nil,
          :deprecatedPolarity => number() | nil,
          :end => integer() | nil,
          :isTruncated => boolean() | nil,
          :phraseType => String.t() | nil,
          :snippetScore => integer() | nil,
          :snippetText => String.t() | nil,
          :start => integer() | nil
        }

  field(:deprecatedMagnitude)
  field(:deprecatedPolarity)
  field(:end)
  field(:isTruncated)
  field(:phraseType)
  field(:snippetScore)
  field(:snippetText)
  field(:start)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsMustangSentimentSnippetAnnotations do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsMustangSentimentSnippetAnnotations.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryAnnotationsMustangSentimentSnippetAnnotations do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
