# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSurfacePropertiesExecutionCapabilities do
  @moduledoc """
  Describes the capabilities that are related to the execution of client ops on the device.

  ## Attributes

  *   `supportsClientOpPreloading` (*type:* `boolean()`, *default:* `nil`) - Completes the preloading ie., sets up the stage for the execution of client ops on the device while the previous conv delta is being executed. Refer to go/preload-convdelta for more information.
  *   `supportsNonFinalizedResponses` (*type:* `boolean()`, *default:* `nil`) - A value of true indicates that the client supports streaming of non-finalized responses by use of ClientExecutionParams.response_stream_id. and ClientExecutionParams.to_be_finalized.
  *   `supportsNonMaterializedInteractions` (*type:* `boolean()`, *default:* `nil`) - If true, the client supports receiving non-materialized interactions (go/as-streaming-protocol-nm).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :supportsClientOpPreloading => boolean() | nil,
          :supportsNonFinalizedResponses => boolean() | nil,
          :supportsNonMaterializedInteractions => boolean() | nil
        }

  field(:supportsClientOpPreloading)
  field(:supportsNonFinalizedResponses)
  field(:supportsNonMaterializedInteractions)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSurfacePropertiesExecutionCapabilities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSurfacePropertiesExecutionCapabilities.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSurfacePropertiesExecutionCapabilities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
