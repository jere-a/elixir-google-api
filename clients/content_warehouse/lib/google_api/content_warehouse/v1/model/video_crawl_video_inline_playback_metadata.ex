# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoCrawlVideoInlinePlaybackMetadata do
  @moduledoc """
  This message is used to store information about Inline Playback in the VideoWebAttachment portion of the websearch index. LINT.IfChange

  ## Attributes

  *   `expirationTimestampSec` (*type:* `String.t`, *default:* `nil`) - Timestamp (measured in seconds since epoch) when a video may not be used for inline playback in the interest feed.
  *   `googleAnalyticsId` (*type:* `String.t`, *default:* `nil`) - Publisher's Google Analytics Id to which we can report view metrics.
  *   `playbackCountryBlacklist` (*type:* `list(String.t)`, *default:* `nil`) - All two-letter codes for countries where this video may NOT be played.
  *   `playbackCountryWhitelist` (*type:* `list(String.t)`, *default:* `nil`) - All two-letter codes for countries where this video may be played. If empty, then all countries not on the blacklist are allowed for playback.
  *   `transcodeItags` (*type:* `list(integer())`, *default:* `nil`) - Set of transcodes which are available for the video.
  *   `vastTag` (*type:* `String.t`, *default:* `nil`) - VAST tag for ads to be played along with this video. Currently, we only support VAST tags from Doubleclick and FreeWheel.
  *   `videoId` (*type:* `String.t`, *default:* `nil`) - Identifier video is known by in the video infrastructure. The format given here is the YoutubeId format (base-64) used in Venom; for Viper/Bandaid/ StreamingURLService, convert to ContentIdHex.
  *   `videoUrlOnExternalCdn` (*type:* `String.t`, *default:* `nil`) - Set if the video is hosted on an external CDN, in which case it is not to be transcoded and hosted at Google for the Interest Feed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :expirationTimestampSec => String.t() | nil,
          :googleAnalyticsId => String.t() | nil,
          :playbackCountryBlacklist => list(String.t()) | nil,
          :playbackCountryWhitelist => list(String.t()) | nil,
          :transcodeItags => list(integer()) | nil,
          :vastTag => String.t() | nil,
          :videoId => String.t() | nil,
          :videoUrlOnExternalCdn => String.t() | nil
        }

  field(:expirationTimestampSec)
  field(:googleAnalyticsId)
  field(:playbackCountryBlacklist, type: :list)
  field(:playbackCountryWhitelist, type: :list)
  field(:transcodeItags, type: :list)
  field(:vastTag)
  field(:videoId)
  field(:videoUrlOnExternalCdn)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoCrawlVideoInlinePlaybackMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoCrawlVideoInlinePlaybackMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoCrawlVideoInlinePlaybackMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
