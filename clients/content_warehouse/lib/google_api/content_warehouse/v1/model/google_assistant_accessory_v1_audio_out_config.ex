# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1AudioOutConfig do
  @moduledoc """
  Specifies the desired format for the server to use when it returns `audio_out` messages.

  ## Attributes

  *   `audioMode` (*type:* `String.t`, *default:* `nil`) - Current audio mode on the device while issuing the query.
  *   `audioRoutingMode` (*type:* `String.t`, *default:* `nil`) - Current audio routing on the device while issuing the query.
  *   `encoding` (*type:* `String.t`, *default:* `nil`) - *Required* The encoding of audio data to be returned in all `audio_out` messages.
  *   `preferredBitrateBps` (*type:* `integer()`, *default:* `nil`) - *Optional* Specifies preferred encoding bitrate (bits-per-second). Currently this is only implemented for OGG_OPUS for bitrates of 12000, 16000, 24000, 32000. If not specified, OGG_OPUS defaults to 32000.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :audioMode => String.t() | nil,
          :audioRoutingMode => String.t() | nil,
          :encoding => String.t() | nil,
          :preferredBitrateBps => integer() | nil
        }

  field(:audioMode)
  field(:audioRoutingMode)
  field(:encoding)
  field(:preferredBitrateBps)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1AudioOutConfig do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1AudioOutConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1AudioOutConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
