# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureMetadataProto do
  @moduledoc """
  General metadata related to a given feature in the Geo repository.

  ## Attributes

  *   `bulkUpdatable` (*type:* `String.t`, *default:* `nil`) - This field indicates whether the feature is subject to bulk updates. Caution must be exercised while editing such features since the changes made by the edits will be overwritten by the bulk update (if the feature is bulk updated). See go/mapfacts-abu for more information.
  *   `coreVersionToken` (*type:* `String.t`, *default:* `nil`) - core_version_token is an opaque token representing the version of the core fields of the feature. This field is not updated when attachments are changed.
  *   `featureReplacementInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureReplacementInfoProto.t`, *default:* `nil`) - Metadata for tracking when a feature is derived from or replaced by another feature or set of features.
  *   `fieldMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureFieldMetadataProto.t`, *default:* `nil`) - Metadata about certain repeated fields and their subfields, for which field type is not granular enough.
  *   `forwardings` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdForwardingsProto.t`, *default:* `nil`) - Feature ID forwardings, if applicable.
  *   `history` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureHistoryMetadataProto.t`, *default:* `nil`) - Metadata related to the history.
  *   `versionToken` (*type:* `String.t`, *default:* `nil`) - version_token is an opaque token representing the version of this feature. It can be used as a concurrency token when sending edits.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bulkUpdatable => String.t() | nil,
          :coreVersionToken => String.t() | nil,
          :featureReplacementInfo =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureReplacementInfoProto.t() | nil,
          :fieldMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureFieldMetadataProto.t() | nil,
          :forwardings =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdForwardingsProto.t() | nil,
          :history =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureHistoryMetadataProto.t() | nil,
          :versionToken => String.t() | nil
        }

  field(:bulkUpdatable)
  field(:coreVersionToken)

  field(:featureReplacementInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureReplacementInfoProto
  )

  field(:fieldMetadata, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureFieldMetadataProto)
  field(:forwardings, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdForwardingsProto)
  field(:history, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureHistoryMetadataProto)
  field(:versionToken)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureMetadataProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureMetadataProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureMetadataProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
