# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalData do
  @moduledoc """
  SignalData stores signal-specific salient-term-set-level information. Stores mostly internal data as it is one of the primary data structures used in the populators.

  ## Attributes

  *   `bias` (*type:* `number()`, *default:* `nil`) - A fixed bias for this signal, the higher the stronger. This can be used to balance the weight of signals independently of the confidence we give it. This field is only available in debug mode.
  *   `confidence` (*type:* `number()`, *default:* `nil`) - The measurement of how much we trust this signal. Range: [0.0, 1.0] This field is available is both debug and non-debug mode.
  *   `halfSalience` (*type:* `number()`, *default:* `nil`) - Raw saliences equal to half_salience will be equal to 0.5 normalized. Range: [0, volume]. This field is only available in debug mode.
  *   `noiseCorrection` (*type:* `number()`, *default:* `nil`) - The minimum TF for a term not to be considered noise. While the possible range of values for this field is [0, observed_volume], it is expected to be a somewhat small percentage of observed_volume (e.g. 5%). This field is only available in debug mode.
  *   `observedConfidence` (*type:* `number()`, *default:* `nil`) - The measurement of how much we trust this signal, calculated using the observed volume. Range: [0.0, 1.0] This field is only available in debug mode.
  *   `observedVolume` (*type:* `number()`, *default:* `nil`) - The amount of signal we observed for a document. Range: [0.0, +infinity) This field is only available in debug mode.
  *   `rawVolume` (*type:* `number()`, *default:* `nil`) - The amount of raw signal we observed for a document. Range: [0.0, +infinity) This field is only available in debug mode.
  *   `source` (*type:* `String.t`, *default:* `nil`) - source is the type of the signal of this SignalData.
  *   `volume` (*type:* `number()`, *default:* `nil`) - The amount of signal left after applying all corrections. Range: [0.0, +infinity) This field is only available in debug mode.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bias => number() | nil,
          :confidence => number() | nil,
          :halfSalience => number() | nil,
          :noiseCorrection => number() | nil,
          :observedConfidence => number() | nil,
          :observedVolume => number() | nil,
          :rawVolume => number() | nil,
          :source => String.t() | nil,
          :volume => number() | nil
        }

  field(:bias)
  field(:confidence)
  field(:halfSalience)
  field(:noiseCorrection)
  field(:observedConfidence)
  field(:observedVolume)
  field(:rawVolume)
  field(:source)
  field(:volume)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
