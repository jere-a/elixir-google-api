# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilities do
  @moduledoc """
  Capabilities related to Lens Perception, i.e. image understanding. See go/loa-lens-device-capabilities. Next ID: 6

  ## Attributes

  *   `hasLensPerception` (*type:* `boolean()`, *default:* `nil`) - Whether the device supports Lens Perception.
  *   `isLensDirectIntentAvailable` (*type:* `boolean()`, *default:* `nil`) - Indicates whether Lens supports Lens Direct Intent (go/lensdirectintent).
  *   `isLensLiveViewfinderAvailable` (*type:* `boolean()`, *default:* `nil`) - Indicates whether Lens supports Live view-finder experience.
  *   `isLensPostCaptureAvailable` (*type:* `boolean()`, *default:* `nil`) - Indicates whether Lens supports Post-capture experience with an image payload.
  *   `lensCapabilities` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilities.t`, *default:* `nil`) - Contains the capabilities that Lens can support.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hasLensPerception => boolean() | nil,
          :isLensDirectIntentAvailable => boolean() | nil,
          :isLensLiveViewfinderAvailable => boolean() | nil,
          :isLensPostCaptureAvailable => boolean() | nil,
          :lensCapabilities =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilities.t()
            | nil
        }

  field(:hasLensPerception)
  field(:isLensDirectIntentAvailable)
  field(:isLensLiveViewfinderAvailable)
  field(:isLensPostCaptureAvailable)

  field(:lensCapabilities,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilitiesLensCapabilities
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilities.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiLensPerceptionCapabilities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
