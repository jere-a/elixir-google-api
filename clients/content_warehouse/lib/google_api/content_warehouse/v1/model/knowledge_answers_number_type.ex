# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersNumberType do
  @moduledoc """
  A NumberType configures a value whose type is intended to be numeric.

  ## Attributes

  *   `componentSpecificContracts` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t`, *default:* `nil`) - Contains data about the contracts that this ValueType level is available for. For more information see go/contract-based-conformance.
  *   `keepAsString` (*type:* `boolean()`, *default:* `nil`) - If true, the semantics of the NumberType argument are retained as a string, rather than being converted to a float-type object. This option is particularly useful in cases where leading 0s in the user input are meaningful, e.g. for zip codes or sports jersey numbers. For the user- specified value "01", for instance, the PathQuery semantics will be: def $Slot "01"
  *   `rangeConstraint` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersRangeConstraint.t`, *default:* `nil`) - Range constraint limits the set of numbers accepted by this type. The constraint applies to all subtypes. Currently, this constraint is only enforced in Loose Parser.
  *   `remodelings` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t`, *default:* `nil`) - Contains data about current schema remodelings at this ValueType level. For more information see go/meaning-remodeling-framework.
  *   `subType` (*type:* `list(String.t)`, *default:* `nil`) - sub_type is a list of the NumberSubTypes which are accepted. If the list is empty, that means all numeric or ordinal values are accepted. If multiple values are specified, then this value accepts any of the sub_types in the list.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :componentSpecificContracts =>
            GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts.t() | nil,
          :keepAsString => boolean() | nil,
          :rangeConstraint =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersRangeConstraint.t() | nil,
          :remodelings =>
            GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings.t() | nil,
          :subType => list(String.t()) | nil
        }

  field(:componentSpecificContracts,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningComponentSpecificContracts
  )

  field(:keepAsString)
  field(:rangeConstraint, as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersRangeConstraint)
  field(:remodelings, as: GoogleApi.ContentWarehouse.V1.Model.NlpMeaningMeaningRemodelings)
  field(:subType, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersNumberType do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersNumberType.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersNumberType do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
