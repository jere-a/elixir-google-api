# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSaftMention do
  @moduledoc """
  Mentions of the entity in the document.

  ## Attributes

  *   `confidence` (*type:* `float()`, *default:* `nil`) - Estimate of the confidence that this mention is in the correct cluster. Zero means this mention is probably in the wrong cluster, 1 means this mention is probably in the correct cluster. See nlp/saft/components/coreference/coreference-confidence.h for details about what "correct cluster" might mean.
  *   `info` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Application-specific information about this mention.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - 
  *   `nestingRelation` (*type:* `String.t`, *default:* `nil`) - 
  *   `phrase` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t`, *default:* `nil`) - Phrase for the mention.
  *   `resolution` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSaftMentionResolution.t`, *default:* `nil`) - Mention-level resolution. This is used for encoding the meaning of the mention rather than the entity. For example, definite references and appositions are resolved to the mid for the concept rather than the entity.
  *   `role` (*type:* `String.t`, *default:* `nil`) - 
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confidence => float() | nil,
          :info => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :kind => String.t() | nil,
          :nestingRelation => String.t() | nil,
          :phrase => GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.t() | nil,
          :resolution => GoogleApi.ContentWarehouse.V1.Model.NlpSaftMentionResolution.t() | nil,
          :role => String.t() | nil,
          :type => String.t() | nil
        }

  field(:confidence)
  field(:info, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:kind)
  field(:nestingRelation)
  field(:phrase, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase)
  field(:resolution, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftMentionResolution)
  field(:role)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftMention do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSaftMention.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftMention do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
