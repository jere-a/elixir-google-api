# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventAttendee do
  @moduledoc """
  Next id: 8

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Display name, present only if available.
  *   `email` (*type:* `String.t`, *default:* `nil`) - Email address of the attendee (calendar), for regular events. For +Events, this field is not populated, instead "id" is used.
  *   `givenName` (*type:* `String.t`, *default:* `nil`) - Given (first) name, present only if available. This is used for generating meeting titles as given name is preferred over display (full) name (ie: "Jeff : Sundar" is better than "Jeff Dean : Sundar Pichai").
  *   `id` (*type:* `String.t`, *default:* `nil`) - Profile ID of the principal, for +Events. For regular events, this field is not populated, instead "email" is used.
  *   `organizer` (*type:* `boolean()`, *default:* `nil`) - Is this the organizer?
  *   `responseStatus` (*type:* `String.t`, *default:* `nil`) - Attendees response status.
  *   `self` (*type:* `boolean()`, *default:* `nil`) - Is this the owner of this copy of the event?
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t() | nil,
          :email => String.t() | nil,
          :givenName => String.t() | nil,
          :id => String.t() | nil,
          :organizer => boolean() | nil,
          :responseStatus => String.t() | nil,
          :self => boolean() | nil
        }

  field(:displayName)
  field(:email)
  field(:givenName)
  field(:id)
  field(:organizer)
  field(:responseStatus)
  field(:self)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventAttendee do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventAttendee.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCalendarEventAttendee do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
