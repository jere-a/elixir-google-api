# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderEvent do
  @moduledoc """


  ## Attributes

  *   `frameResize` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoFrameResizeEvent.t`, *default:* `nil`) - 
  *   `initialLoad` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoInitialLoadEvent.t`, *default:* `nil`) - 
  *   `modalDialog` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoModalDialogEvent.t`, *default:* `nil`) - 
  *   `redirect` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRedirectEvent.t`, *default:* `nil`) - 
  *   `scriptOriginUrl` (*type:* `String.t`, *default:* `nil`) - The URL of the script which caused this event, if any. Analogous to origin_url in DOMTreeNode.
  *   `virtualTimeOffset` (*type:* `float()`, *default:* `nil`) - Virtual time of the event, as an offset from the beginning of the render in seconds.
  *   `windowOpen` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoWindowOpenEvent.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :frameResize =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoFrameResizeEvent.t()
            | nil,
          :initialLoad =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoInitialLoadEvent.t()
            | nil,
          :modalDialog =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoModalDialogEvent.t()
            | nil,
          :redirect =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRedirectEvent.t()
            | nil,
          :scriptOriginUrl => String.t() | nil,
          :virtualTimeOffset => float() | nil,
          :windowOpen =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoWindowOpenEvent.t()
            | nil
        }

  field(:frameResize,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoFrameResizeEvent
  )

  field(:initialLoad,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoInitialLoadEvent
  )

  field(:modalDialog,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoModalDialogEvent
  )

  field(:redirect,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRedirectEvent
  )

  field(:scriptOriginUrl)
  field(:virtualTimeOffset)

  field(:windowOpen,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoWindowOpenEvent
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderEvent do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderEvent.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
