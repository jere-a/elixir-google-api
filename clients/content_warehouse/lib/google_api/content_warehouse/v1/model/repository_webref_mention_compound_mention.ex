# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionCompoundMention do
  @moduledoc """
  A single compound mention. Next available tag: 3

  ## Attributes

  *   `component` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionComponent.t)`, *default:* `nil`) - References to the component mentions which the MRF needs to be fully expanded. It is guaranteed that for a given set of components there exists only a single CompoundMention, i.e. the CompoundMentions are deduped to be unique so each set of components is present only once. The ArgumentValue of the WebrefEntity.mrf refer to these components via ComponentReference; it is guaranteed there are as many components as the MRF expression refers to.
  *   `mrfIndex` (*type:* `list(integer())`, *default:* `nil`) - The WebrefEntity.mrf indices which this compound applies to. There can be at most one CompoundMention which claims an MRF index, but it is possible there are MRF expressions which are not claimed by any CompoundMention.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :component =>
            list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionComponent.t()) | nil,
          :mrfIndex => list(integer()) | nil
        }

  field(:component,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionComponent,
    type: :list
  )

  field(:mrfIndex, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionCompoundMention do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionCompoundMention.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefMentionCompoundMention do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
