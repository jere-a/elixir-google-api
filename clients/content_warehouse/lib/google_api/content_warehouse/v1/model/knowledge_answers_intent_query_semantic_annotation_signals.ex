# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySemanticAnnotationSignals do
  @moduledoc """
  Signals associated with nlp_ig::v1::SemanticAnnotator.

  ## Attributes

  *   `category` (*type:* `String.t`, *default:* `nil`) - Name of the subgrammar category this annotation is associated with.
  *   `domain` (*type:* `String.t`, *default:* `nil`) - Name of the subgrammar domain.
  *   `features` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySemanticAnnotationSignalsFeature.t)`, *default:* `nil`) - 
  *   `score` (*type:* `float()`, *default:* `nil`) - Numeric value associated with each subgrammar annotation. Used for in-domain ranking inside the Aqua Analyzer. This field is not guaranteed to be in any range. Furthermore, this field should never be compared for annotations with differing 'domain' value. The field is included here for making the Aqua Analyzer work with subgrammar annotations that have been generated in a different Aqua Analyzer (typically by TUIG SemanticAnnotationServlet). TL;DR: Consumers of this message are STRONGLY DISCOURAGED from using this field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :category => String.t() | nil,
          :domain => String.t() | nil,
          :features =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySemanticAnnotationSignalsFeature.t()
            )
            | nil,
          :score => float() | nil
        }

  field(:category)
  field(:domain)

  field(:features,
    as:
      GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySemanticAnnotationSignalsFeature,
    type: :list
  )

  field(:score)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySemanticAnnotationSignals do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySemanticAnnotationSignals.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQuerySemanticAnnotationSignals do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
