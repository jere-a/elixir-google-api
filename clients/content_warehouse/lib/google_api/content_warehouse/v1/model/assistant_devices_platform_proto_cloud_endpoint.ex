# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudEndpoint do
  @moduledoc """
  A cloud endpoints associates with this device, it can be used for query parsing, or cloud execution.

  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - The name for this cloud endpoint. It's unique per Locale. This is not an API resource name. Ex: sample-nlu-endpoint
  *   `scopes` (*type:* `list(String.t)`, *default:* `nil`) - The list of scopes to be provided in the OAuth2 token. They must be a subset of the scopes registered in the Account Linking flow, or the request will fail. If the client itself provides the token, then this field is ignored.
  *   `url` (*type:* `String.t`, *default:* `nil`) - The URL for this endpoint, it must start with https.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t() | nil,
          :scopes => list(String.t()) | nil,
          :url => String.t() | nil
        }

  field(:name)
  field(:scopes, type: :list)
  field(:url)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudEndpoint do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudEndpoint.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudEndpoint do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
