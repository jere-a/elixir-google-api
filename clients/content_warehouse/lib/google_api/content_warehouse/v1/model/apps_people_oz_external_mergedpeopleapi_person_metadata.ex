# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonMetadata do
  @moduledoc """
  Metadata for the entire Person resource.

  ## Attributes

  *   `affinity` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAffinity.t)`, *default:* `nil`) - Affinities associated with the person, with respect to the requester.
  *   `attribution` (*type:* `list(String.t)`, *default:* `nil`) - Populated when the data for the MergedPerson comes from a 3rd party provider or data source. Clients must display these attributions to the user if they are present. NOTE: This field is only relevant when requesting the following containers: - PLACE (data read from Maps)
  *   `bestDisplayName` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiBestDisplayName.t`, *default:* `nil`) - The best name to use for this person for user-facing display. See go/people-api-howto:names for details about how this field is computed. In many cases this will simply be Person.name[0]. However, Person.name returns only explicit Name fields, but other fields maybe usable as a name (for example: nicknames, file_as, ...). `best_display_name` will be calculated from all fields in storage which are usable as a name, even fields which are not explicitly requested in the MergedPerson result. See go/javagoog/apps/tacotown/socialgraph/entity/PersonNameFormatter.java
  *   `blockType` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. Indicates whether the profile owner has blocked this person. Please use `person.read_only_profile_info.block_type` instead.
  *   `circleId` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. The circles the person belongs to.
  *   `contactGroupId` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. Please use `person.contact_group_memberships` instead. The contact groups the person belongs to.
  *   `contactId` (*type:* `list(String.t)`, *default:* `nil`) - The IDs of all contacts contributing to this person.
  *   `customResponseMaskingType` (*type:* `String.t`, *default:* `nil`) - DEPRECATED. Customized masking of the response similar to the legacy People2RequestMask People2Params request message. NOTE: This param is inherently client-specific, limited to specific legacy clients, and not open to new usage. NOTE: Effects may be applied to a subset of people in the response.
  *   `deleted` (*type:* `boolean()`, *default:* `nil`) - For sync requests (i.e., changed since the provided sync_token), indicates the resource is a tombstone for a Person resource that has been entirely deleted.
  *   `deprecatedBlocked` (*type:* `boolean()`, *default:* `nil`) - DEPRECATED. Please use `person.read_only_profile_info.block_type` instead.
  *   `deprecatedMembershipCircleId` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. This field is no longer populated or read.
  *   `deprecatedMembershipContactGroupId` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. This field is no longer populated or read.
  *   `deviceContactInfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo.t)`, *default:* `nil`) - Info about the aggregated device contacts. When the person contains RAW_DEVICE_CONTACT containers, each DeviceContactInfo represents a single aggregate device contact made up of one or more raw device contacts.
  *   `identityInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiIdentityInfo.t`, *default:* `nil`) - Detailed metadata about the lookup IDs and data sources included in a MergedPerson result.
  *   `inViewerDomain` (*type:* `boolean()`, *default:* `nil`) - DEPRECATED. Indicates whether this person is in the same domain as the viewer. For proxying trust between two users based on organization membership, see: - go/flex-orgs-platform - go/flex-orgs-compliance-handbook (especially http://shortn/_ChwfAY36Ys)
  *   `incomingBlockType` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. Indicates whether this person is blocking the profile owner. Please use `person.read_only_profile_info.incoming_block_type` instead.
  *   `lastUpdateTimeMicros` (*type:* `String.t`, *default:* `nil`) - DEPRECATED. The last update timestamps for the constituent components of this person are available in `identity_info.source_ids`. The time of the most recent change to this person, in !!!NANOS!!! (due to a bug). May be a change to any of the underlying parts of the person (profile, contact, etc.). Not guaranteed to be the timestamp of the most recent change, due to limitations in the backend. This field is not fully deprecated for backend container-specific storage services like ProfileService which lack identity_info. The use is still discouraged in such systems and they should prefer to use the `last_update_time` field of this message instead.
  *   `model` (*type:* `String.t`, *default:* `nil`) - The person model that is used to construct this person.
  *   `objectType` (*type:* `String.t`, *default:* `nil`) - DEPRECATED.
  *   `ownerId` (*type:* `String.t`, *default:* `nil`) - DEPRECATED. Please use `person.read_only_profile_info.owner_id` instead.
  *   `ownerUserType` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. See `person.read_only_profile_info.owner_user_type` instead.
  *   `plusPageType` (*type:* `String.t`, *default:* `nil`) - DEPRECATED. Please use `Person.plus_page_info` instead.
  *   `previousPersonId` (*type:* `list(String.t)`, *default:* `nil`) - DEPRECATED. This field is no longer populated or read.
  *   `profileOwnerStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProfileOwnerStats.t`, *default:* `nil`) - DEPRECATED. Stats/counters pertaining to followers and incoming edges. Please use `person.read_only_profile_info.profile_owner_stats` instead.
  *   `scoringInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonMetadataScoringInfo.t`, *default:* `nil`) - Contact people-directory-dev-team@ if you want to use this field.
  *   `userVisibleStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiUserVisibleStats.t`, *default:* `nil`) - DEPRECATED. This field is no longer populated or read.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :affinity =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAffinity.t()
            )
            | nil,
          :attribution => list(String.t()) | nil,
          :bestDisplayName =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiBestDisplayName.t()
            | nil,
          :blockType => list(String.t()) | nil,
          :circleId => list(String.t()) | nil,
          :contactGroupId => list(String.t()) | nil,
          :contactId => list(String.t()) | nil,
          :customResponseMaskingType => String.t() | nil,
          :deleted => boolean() | nil,
          :deprecatedBlocked => boolean() | nil,
          :deprecatedMembershipCircleId => list(String.t()) | nil,
          :deprecatedMembershipContactGroupId => list(String.t()) | nil,
          :deviceContactInfo =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo.t()
            )
            | nil,
          :identityInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiIdentityInfo.t()
            | nil,
          :inViewerDomain => boolean() | nil,
          :incomingBlockType => list(String.t()) | nil,
          :lastUpdateTimeMicros => String.t() | nil,
          :model => String.t() | nil,
          :objectType => String.t() | nil,
          :ownerId => String.t() | nil,
          :ownerUserType => list(String.t()) | nil,
          :plusPageType => String.t() | nil,
          :previousPersonId => list(String.t()) | nil,
          :profileOwnerStats =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProfileOwnerStats.t()
            | nil,
          :scoringInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonMetadataScoringInfo.t()
            | nil,
          :userVisibleStats =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiUserVisibleStats.t()
            | nil
        }

  field(:affinity,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiAffinity,
    type: :list
  )

  field(:attribution, type: :list)

  field(:bestDisplayName,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiBestDisplayName
  )

  field(:blockType, type: :list)
  field(:circleId, type: :list)
  field(:contactGroupId, type: :list)
  field(:contactId, type: :list)
  field(:customResponseMaskingType)
  field(:deleted)
  field(:deprecatedBlocked)
  field(:deprecatedMembershipCircleId, type: :list)
  field(:deprecatedMembershipContactGroupId, type: :list)

  field(:deviceContactInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiDeviceContactInfo,
    type: :list
  )

  field(:identityInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiIdentityInfo
  )

  field(:inViewerDomain)
  field(:incomingBlockType, type: :list)
  field(:lastUpdateTimeMicros)
  field(:model)
  field(:objectType)
  field(:ownerId)
  field(:ownerUserType, type: :list)
  field(:plusPageType)
  field(:previousPersonId, type: :list)

  field(:profileOwnerStats,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProfileOwnerStats
  )

  field(:scoringInfo,
    as:
      GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonMetadataScoringInfo
  )

  field(:userVisibleStats,
    as: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiUserVisibleStats
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPersonMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
