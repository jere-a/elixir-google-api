# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataProtocolResponse do
  @moduledoc """
  Group with protocol specific response (determined by the protocol of the url that generated the content we return).

  ## Attributes

  *   `Code` (*type:* `integer()`, *default:* `nil`) - Response code. We emulate the HTTP response codes for all protocols that we know. -- HTTP: response code for the downloaded page. -- FTP: similar with HTTP: 200 - OK, 40X - errors (not found, etc), 500 - server unavailable
  *   `ContentType` (*type:* `String.t`, *default:* `nil`) - Content type as inferred by the fetcher (webutil/http/content-type.proto)
  *   `CutoffSize` (*type:* `String.t`, *default:* `nil`) - Where did we cut off? Includes headers plus truncated but uncompressed content. Present if and only if we truncated the document.
  *   `HttpVersion` (*type:* `String.t`, *default:* `nil`) - DEPRECATED, see field 113. Stores the HTTP version we used in the final hop.
  *   `ProtocolVersionFallback` (*type:* `boolean()`, *default:* `nil`) - DEPRECATED, see field 114. Whether we fallback from HTTP/2 to HTTP/1.1 during fetch. The fallback could happen in any hops and there can be at most one fallback because once fallback happens, we will not try HTTP/2 anymore.
  *   `UnTruncatedSize` (*type:* `String.t`, *default:* `nil`) - The amount of data we got from the webserver before any truncation, but after undoing any HTTP gzip/deflate encoding. For HTTP, this includes headers and uncompressed content. Content size is excluded if content was not successfully fetched. See description above TotalFetchedSize for comparison.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :Code => integer() | nil,
          :ContentType => String.t() | nil,
          :CutoffSize => String.t() | nil,
          :HttpVersion => String.t() | nil,
          :ProtocolVersionFallback => boolean() | nil,
          :UnTruncatedSize => String.t() | nil
        }

  field(:Code)
  field(:ContentType)
  field(:CutoffSize)
  field(:HttpVersion)
  field(:ProtocolVersionFallback)
  field(:UnTruncatedSize)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataProtocolResponse do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataProtocolResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataProtocolResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
