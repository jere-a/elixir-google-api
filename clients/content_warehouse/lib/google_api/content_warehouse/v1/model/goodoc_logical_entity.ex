# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntity do
  @moduledoc """
  A logical entity in the abstract is just a group of links to the goodoc. Depending on the kind of item, a separate proto file should extend this to define the logical structure for that kind. For example. newspapers.proto defines the logical entity for newspapers. LogicalEntity is also used within some SemanticLabels, for example, for a table-of-contents link.

  ## Attributes

  *   `Metadata` (*type:* `String.t`, *default:* `nil`) - 
  *   `link` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntityLink.t)`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :Metadata => String.t() | nil,
          :link => list(GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntityLink.t()) | nil
        }

  field(:Metadata)
  field(:link, as: GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntityLink, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntity do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntity.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocLogicalEntity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
