# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ScienceCitationFunding do
  @moduledoc """


  ## Attributes

  *   `Agency` (*type:* `integer()`, *default:* `nil`) - values are from FundingAgency enum
  *   `AgencyName` (*type:* `String.t`, *default:* `nil`) - Text name of the agency. For analysis. Plus for agencies that don't have an enum.
  *   `DebugExtractionInfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.ScienceCitationFundingExtractionInfo.t)`, *default:* `nil`) - Funding entries for the same agency and grant number can be merged during our extraction process so we maintain a record of all the deduped ExtractionInfo messages within the remaining entry.
  *   `DebugFundingTextBlock` (*type:* `String.t`, *default:* `nil`) - Text block from which the funding entry was extracted. Intended to be used for offline analysis. DEPRECATED
  *   `GrantNumber` (*type:* `String.t`, *default:* `nil`) - 
  *   `Recipient` (*type:* `String.t`, *default:* `nil`) - funding recipient
  *   `SourceText` (*type:* `String.t`, *default:* `nil`) - Original text for the funding acknowledgement
  *   `UrlBasedFundingSource` (*type:* `boolean()`, *default:* `nil`) - Whether this funding info was added because this article was at the exclusive repository for this agency.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :Agency => integer() | nil,
          :AgencyName => String.t() | nil,
          :DebugExtractionInfo =>
            list(GoogleApi.ContentWarehouse.V1.Model.ScienceCitationFundingExtractionInfo.t())
            | nil,
          :DebugFundingTextBlock => String.t() | nil,
          :GrantNumber => String.t() | nil,
          :Recipient => String.t() | nil,
          :SourceText => String.t() | nil,
          :UrlBasedFundingSource => boolean() | nil
        }

  field(:Agency)
  field(:AgencyName)

  field(:DebugExtractionInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.ScienceCitationFundingExtractionInfo,
    type: :list
  )

  field(:DebugFundingTextBlock)
  field(:GrantNumber)
  field(:Recipient)
  field(:SourceText)
  field(:UrlBasedFundingSource)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ScienceCitationFunding do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ScienceCitationFunding.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ScienceCitationFunding do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
