# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ScienceCitationTranslatedAuthor do
  @moduledoc """
  translated author names. we usually get these for non-english papers which provide english title/author/abstract info

  ## Attributes

  *   `Department` (*type:* `String.t`, *default:* `nil`) - 
  *   `Email` (*type:* `String.t`, *default:* `nil`) - 
  *   `GuessOrderType` (*type:* `integer()`, *default:* `nil`) - 
  *   `Institution` (*type:* `String.t`, *default:* `nil`) - 
  *   `Language` (*type:* `String.t`, *default:* `nil`) - 
  *   `LastName` (*type:* `String.t`, *default:* `nil`) - 
  *   `OtherNames` (*type:* `String.t`, *default:* `nil`) - 
  *   `SourceText` (*type:* `String.t`, *default:* `nil`) - 
  *   `Type` (*type:* `integer()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :Department => String.t() | nil,
          :Email => String.t() | nil,
          :GuessOrderType => integer() | nil,
          :Institution => String.t() | nil,
          :Language => String.t() | nil,
          :LastName => String.t() | nil,
          :OtherNames => String.t() | nil,
          :SourceText => String.t() | nil,
          :Type => integer() | nil
        }

  field(:Department)
  field(:Email)
  field(:GuessOrderType)
  field(:Institution)
  field(:Language)
  field(:LastName)
  field(:OtherNames)
  field(:SourceText)
  field(:Type)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ScienceCitationTranslatedAuthor do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ScienceCitationTranslatedAuthor.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ScienceCitationTranslatedAuthor do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
