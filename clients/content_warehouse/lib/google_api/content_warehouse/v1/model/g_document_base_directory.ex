# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GDocumentBaseDirectory do
  @moduledoc """
  The Directory proto group holds snippet and title metadata which is made available to the snippet code. The proto group was originally created for metadata coming from the Google Web Directory (gwd) project. It has since come to be used to hold metadata from gwd and other sources. 

  ## Attributes

  *   `Category` (*type:* `String.t`, *default:* `nil`) - encoded in UTF8
  *   `Description` (*type:* `String.t`, *default:* `nil`) - encoded in UTF8
  *   `DescriptionScore` (*type:* `number()`, *default:* `nil`) - 
  *   `Identifier` (*type:* `String.t`, *default:* `nil`) - "gwd", etc.
  *   `Language` (*type:* `integer()`, *default:* `nil`) - go/language-enum
  *   `Title` (*type:* `String.t`, *default:* `nil`) - encoded in UTF8
  *   `TitleScore` (*type:* `number()`, *default:* `nil`) - Deprecated; do not use. There is no code populating these fields as of Oct 2017.
  *   `URL` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :Category => String.t() | nil,
          :Description => String.t() | nil,
          :DescriptionScore => number() | nil,
          :Identifier => String.t() | nil,
          :Language => integer() | nil,
          :Title => String.t() | nil,
          :TitleScore => number() | nil,
          :URL => String.t() | nil
        }

  field(:Category)
  field(:Description)
  field(:DescriptionScore)
  field(:Identifier)
  field(:Language)
  field(:Title)
  field(:TitleScore)
  field(:URL)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GDocumentBaseDirectory do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GDocumentBaseDirectory.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GDocumentBaseDirectory do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
