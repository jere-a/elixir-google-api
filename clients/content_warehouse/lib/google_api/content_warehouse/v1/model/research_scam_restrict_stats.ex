# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictStats do
  @moduledoc """
  TODO(qhliao) move this proto to research/scam/proto/restricts.proto Structure to hold the number of active and total datapoints for a given dataset, as defined below. Last used: 3

  ## Attributes

  *   `evaluationInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictEvaluationInfo.t`, *default:* `nil`) - Information about the evaluation of the restricts for this query. Could be used for production (e.g., custom restrict pass certain information to the downstream). copybara:strip_end
  *   `numActiveDatapoints` (*type:* `String.t`, *default:* `nil`) - The number of datapoints that are whitelisted by restricts specified for this query, across all shards for which the query executed successfully. In other words, this represents the number of datapoints that could potentially be returned if they were close enough to the query according to the selected distance measure. If restricts are disabled, this will be equal to num_total_datapoints.
  *   `numTotalDatapoints` (*type:* `String.t`, *default:* `nil`) - The number of total datapoints in all shards of this dataset for which the query executed successfully. This is returned for convenience so that a ratio can be easily computed, and so that num_active_datapoints can be put in perspective for partially successful queries, i.e. queries where only some shards were successful.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :evaluationInfo =>
            GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictEvaluationInfo.t() | nil,
          :numActiveDatapoints => String.t() | nil,
          :numTotalDatapoints => String.t() | nil
        }

  field(:evaluationInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictEvaluationInfo
  )

  field(:numActiveDatapoints)
  field(:numTotalDatapoints)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictStats do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictStats.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScamRestrictStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
