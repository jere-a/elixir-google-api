# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorUrlScore do
  @moduledoc """
  Representation of numeric signal of a url.

  ## Attributes

  *   `dsacNumWeeklyPerfRecords` (*type:* `integer()`, *default:* `nil`) - The number of weekly performance records if the UrlScore is extracted from the DSAC data. It should be used in case a URL is no longer served. As of 2014-10-14, this field is for the evaluation purpose only.
  *   `eligibleExperimentalLayer` (*type:* `String.t`, *default:* `nil`) - If this field is set, it indicates the url is eligible to be aggregated to one of the experimental layers.
  *   `firstServedTimestamp` (*type:* `String.t`, *default:* `nil`) - The timestamp of the first time this document is served anywhere.
  *   `isImportant` (*type:* `boolean()`, *default:* `nil`) - Whether this url has important signal. Used for keeping patterns that match too few URLs but some of them have good clicks.
  *   `score` (*type:* `float()`, *default:* `nil`) - score might be missing if the url does not have signal.
  *   `url` (*type:* `String.t`, *default:* `nil`) - url might be missing if we can get it from sstable key.
  *   `weight` (*type:* `float()`, *default:* `nil`) - weight for this url.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dsacNumWeeklyPerfRecords => integer() | nil,
          :eligibleExperimentalLayer => String.t() | nil,
          :firstServedTimestamp => String.t() | nil,
          :isImportant => boolean() | nil,
          :score => float() | nil,
          :url => String.t() | nil,
          :weight => float() | nil
        }

  field(:dsacNumWeeklyPerfRecords)
  field(:eligibleExperimentalLayer)
  field(:firstServedTimestamp)
  field(:isImportant)
  field(:score)
  field(:url)
  field(:weight)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorUrlScore do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorUrlScore.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.IndexingSignalAggregatorUrlScore do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
