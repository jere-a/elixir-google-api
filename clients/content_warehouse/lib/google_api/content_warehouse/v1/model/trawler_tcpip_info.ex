# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.TrawlerTCPIPInfo do
  @moduledoc """
  To keep track of fetch connection endpoints. Note: You can use trawler::SourceIP(info) or trawler::DestinationIP(info) (as well as HasSourceIP/HasDestinationIP) in basictypes.h instead of accessing the packed strings directly. This will return a proper IPAddress. Never use the fixed32 based Source/Destination-IP in new code as they will go away (only IPv4).

  ## Attributes

  *   `DestinationIPAddressPacked` (*type:* `String.t`, *default:* `nil`) - Address of the destination host. Extract with trawler::DestinationIP() or decode with PackedStringToIPAddress().
  *   `DestinationPort` (*type:* `integer()`, *default:* `nil`) - 
  *   `SourceIPAddressPacked` (*type:* `String.t`, *default:* `nil`) - Source address of the crawl machine we originated the fetch from. Extract with trawler::SourceIP() or decode with PackedStringToIPAddress().
  *   `SourcePort` (*type:* `integer()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :DestinationIPAddressPacked => String.t() | nil,
          :DestinationPort => integer() | nil,
          :SourceIPAddressPacked => String.t() | nil,
          :SourcePort => integer() | nil
        }

  field(:DestinationIPAddressPacked)
  field(:DestinationPort)
  field(:SourceIPAddressPacked)
  field(:SourcePort)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerTCPIPInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.TrawlerTCPIPInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerTCPIPInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
