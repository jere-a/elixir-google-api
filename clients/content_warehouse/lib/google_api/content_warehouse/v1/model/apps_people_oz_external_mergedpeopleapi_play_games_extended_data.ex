# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData do
  @moduledoc """
  Extension data for use in Play Games Product Profile. See go/jam-games-profile.

  ## Attributes

  *   `achievements` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedDataAchievement.t)`, *default:* `nil`) - User's top achievements that are sorted for example by rarity.
  *   `avatarImageUrl` (*type:* `String.t`, *default:* `nil`) - The avatar image to display for the user.
  *   `failure` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProductProfileFailure.t`, *default:* `nil`) - Failure type if there is an error when fetching product profile data.
  *   `gamerTag` (*type:* `String.t`, *default:* `nil`) - The gamer tag set by the user. Not set if the user hasn't set a gamer tag yet.
  *   `playerLevel` (*type:* `integer()`, *default:* `nil`) - User's level.
  *   `profileVisibility` (*type:* `String.t`, *default:* `nil`) - Specifies the visibility of the player's profile.
  *   `totalFriendsCount` (*type:* `String.t`, *default:* `nil`) - Total number of friends.
  *   `totalUnlockedAchievements` (*type:* `String.t`, *default:* `nil`) - How many achievements this player has unlocked.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :achievements =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedDataAchievement.t()
            )
            | nil,
          :avatarImageUrl => String.t() | nil,
          :failure =>
            GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProductProfileFailure.t()
            | nil,
          :gamerTag => String.t() | nil,
          :playerLevel => integer() | nil,
          :profileVisibility => String.t() | nil,
          :totalFriendsCount => String.t() | nil,
          :totalUnlockedAchievements => String.t() | nil
        }

  field(:achievements,
    as:
      GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedDataAchievement,
    type: :list
  )

  field(:avatarImageUrl)

  field(:failure,
    as:
      GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiProductProfileFailure
  )

  field(:gamerTag)
  field(:playerLevel)
  field(:profileVisibility)
  field(:totalFriendsCount)
  field(:totalUnlockedAchievements)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleOzExternalMergedpeopleapiPlayGamesExtendedData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
