# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantOffer do
  @moduledoc """
  A product for sale from a particular merchant, possibly available at a specific store.

  ## Attributes

  *   `docid` (*type:* `String.t`, *default:* `nil`) - The offer document id as used in Shopping's metadata.
  *   `merchant` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantMerchant.t`, *default:* `nil`) - The merchant selling the product.
  *   `price` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t`, *default:* `nil`) - The price of the product sold by the merchant.
  *   `product` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProduct.t`, *default:* `nil`) - The product for sale.
  *   `store` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantStore.t`, *default:* `nil`) - Optional. The physical store where the product can be purchased.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :docid => String.t() | nil,
          :merchant =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantMerchant.t()
            | nil,
          :price =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney.t() | nil,
          :product =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProduct.t()
            | nil,
          :store =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantStore.t()
            | nil
        }

  field(:docid)

  field(:merchant,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantMerchant
  )

  field(:price, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMoneyMoney)

  field(:product,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantProduct
  )

  field(:store,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantStore
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantOffer do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantOffer.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsShoppingAssistantOffer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
