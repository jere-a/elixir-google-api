# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplate do
  @moduledoc """
  ImageTemplate contains local and/or global features generated from one image. User-defined members can be set to any value within the constraints outlined below. Algorithms usually pass these through without evaluation, unless documented otherwise. Next id: 29

  ## Attributes

  *   `authorName` (*type:* `String.t`, *default:* `nil`) - Name of the author or image source. User-defined. Must be NULL-terminated.
  *   `corpus` (*type:* `String.t`, *default:* `nil`) - Identifier for which corpus the image belongs to. Currently Cyclone uses this field in: - photos_vision_objectrec.SpatialMatcherRequest.residual_template to select which spatial matcher should be applied to the candidate matches - photos_vision_objectrec.CustomCorpusQuantizer to map a custom corpus to one or more posting lists
  *   `geoLocation` (*type:* `GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecGeoLocation.t`, *default:* `nil`) - The geolocation of the image. Assumed to represent the location where the photo was taken from.
  *   `globalFeature` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecGlobalFeature.t)`, *default:* `nil`) - 
  *   `imageHeight` (*type:* `integer()`, *default:* `nil`) - 
  *   `imageId` (*type:* `String.t`, *default:* `nil`) - Unique identifier for the image used to compute this template.
  *   `imageUrl` (*type:* `String.t`, *default:* `nil`) - URL or filename of the image used to compute this template. User-defined. Must contain only ASCII characters and be NULL-terminated.
  *   `imageWidth` (*type:* `integer()`, *default:* `nil`) - Dimension of the image used to compute this template.
  *   `info` (*type:* `String.t`, *default:* `nil`) - 
  *   `objectInfo` (*type:* `list(String.t)`, *default:* `nil`) - Tags pertaining to this image. User-defined. Must be NULL-terminated.
  *   `objectName` (*type:* `String.t`, *default:* `nil`) - Name of the object/scene depicted. User-defined. Must contain only ASCII characters and be NULL-terminated.
  *   `opaqueData` (*type:* `String.t`, *default:* `nil`) - Opaque template data. May be used to pass through additional data from template sources to processing modules, that is not already covered by other members of this PB. It is the responsibility of processing modules to verify that the data is in a compatible format.
  *   `roi` (*type:* `GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecROI.t`, *default:* `nil`) - Region-of-interest: The bounding box of the object or scene depicted in the image.
  *   `subset` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplateSubSet.t)`, *default:* `nil`) - 
  *   `version` (*type:* `String.t`, *default:* `nil`) - Feature version.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authorName => String.t() | nil,
          :corpus => String.t() | nil,
          :geoLocation =>
            GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecGeoLocation.t() | nil,
          :globalFeature =>
            list(GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecGlobalFeature.t()) | nil,
          :imageHeight => integer() | nil,
          :imageId => String.t() | nil,
          :imageUrl => String.t() | nil,
          :imageWidth => integer() | nil,
          :info => String.t() | nil,
          :objectInfo => list(String.t()) | nil,
          :objectName => String.t() | nil,
          :opaqueData => String.t() | nil,
          :roi => GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecROI.t() | nil,
          :subset =>
            list(GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplateSubSet.t())
            | nil,
          :version => String.t() | nil
        }

  field(:authorName)
  field(:corpus)
  field(:geoLocation, as: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecGeoLocation)

  field(:globalFeature,
    as: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecGlobalFeature,
    type: :list
  )

  field(:imageHeight)
  field(:imageId)
  field(:imageUrl)
  field(:imageWidth)
  field(:info)
  field(:objectInfo, type: :list)
  field(:objectName)
  field(:opaqueData)
  field(:roi, as: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecROI)

  field(:subset,
    as: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplateSubSet,
    type: :list
  )

  field(:version)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplate do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplate.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
