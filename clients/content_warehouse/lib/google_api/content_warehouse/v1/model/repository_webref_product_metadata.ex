# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProductMetadata do
  @moduledoc """
  Products-specific information about the entity. Only available in QrefMetadata output. Next available tag: 16.

  ## Attributes

  *   `productLineId` (*type:* `list(String.t)`, *default:* `nil`) - Shopping product line ids (typically moka product line tag) of this entity. Represents shopping product lines, such as iPhone or Canon EOS. Typically, we expect only one id. But keeping repeated, in case we want to merge or aggregate product lines. Using int64, as tag_id in commerce/datastore/processors/moka/proto/moka_annotations.proto.
  *   `shoppingIds` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t`, *default:* `nil`) - All ShoppingIds for this MID that need to be copied to IntentQuery (FunctionCall) if this MID is used in intent generation. See go/iql-shopping-ids for details.
  *   `variantClusterId` (*type:* `list(String.t)`, *default:* `nil`) - All unique variant cluster ids (shopping's GPCs) of this entity.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :productLineId => list(String.t()) | nil,
          :shoppingIds =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds.t() | nil,
          :variantClusterId => list(String.t()) | nil
        }

  field(:productLineId, type: :list)

  field(:shoppingIds,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryShoppingIds
  )

  field(:variantClusterId, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProductMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProductMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProductMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
