# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadata do
  @moduledoc """
  A message holding information about the mastering display color volume. This metadata can be used when tone mapping an HDR signal to a display with a different gamut or brightness characteristics than the mastering display. This message is capable of containing SMPTE 2086 metadata.

  ## Attributes

  *   `blue` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t`, *default:* `nil`) - Coordinates of the blue primary of the mastering display.
  *   `green` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t`, *default:* `nil`) - Coordinates of the green primary of the mastering display.
  *   `maxLuminance` (*type:* `number()`, *default:* `nil`) - Maximum luminance of the display (in cd/m^2).
  *   `minLuminance` (*type:* `number()`, *default:* `nil`) - Minimum luminance of the display (in cd/m^2).
  *   `red` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t`, *default:* `nil`) - Coordinates of the red primary of the mastering display.
  *   `whitePoint` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t`, *default:* `nil`) - Coordinates of the white point of the mastering display.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blue =>
            GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t()
            | nil,
          :green =>
            GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t()
            | nil,
          :maxLuminance => number() | nil,
          :minLuminance => number() | nil,
          :red =>
            GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t()
            | nil,
          :whitePoint =>
            GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate.t()
            | nil
        }

  field(:blue,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate
  )

  field(:green,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate
  )

  field(:maxLuminance)
  field(:minLuminance)

  field(:red,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate
  )

  field(:whitePoint,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadataCIE1931Coordinate
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoFileMasteringDisplayMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
