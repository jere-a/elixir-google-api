# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata do
  @moduledoc """
  Metadata fields for LMS. See go/lms-online-restrictions for details.

  ## Attributes

  *   `clientIdsAllowed` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `isEditorial` (*type:* `boolean()`, *default:* `nil`) - 
  *   `modificationsAllowed` (*type:* `list(String.t)`, *default:* `nil`) - Int values corresponds to the values of image_repository.licensed.api.restrictions.Modification enum.
  *   `regionsAllowed` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t`, *default:* `nil`) - 
  *   `regionsDisallowed` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t`, *default:* `nil`) - 
  *   `requiresAttribution` (*type:* `boolean()`, *default:* `nil`) - 
  *   `requiresFirstPartyOnly` (*type:* `boolean()`, *default:* `nil`) - 
  *   `requiresLinkback` (*type:* `boolean()`, *default:* `nil`) - 
  *   `requiresShareAlike` (*type:* `boolean()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clientIdsAllowed => list(String.t()) | nil,
          :isEditorial => boolean() | nil,
          :modificationsAllowed => list(String.t()) | nil,
          :regionsAllowed =>
            GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t() | nil,
          :regionsDisallowed =>
            GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t() | nil,
          :requiresAttribution => boolean() | nil,
          :requiresFirstPartyOnly => boolean() | nil,
          :requiresLinkback => boolean() | nil,
          :requiresShareAlike => boolean() | nil
        }

  field(:clientIdsAllowed, type: :list)
  field(:isEditorial)
  field(:modificationsAllowed, type: :list)
  field(:regionsAllowed, as: GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions)
  field(:regionsDisallowed, as: GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions)
  field(:requiresAttribution)
  field(:requiresFirstPartyOnly)
  field(:requiresLinkback)
  field(:requiresShareAlike)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
