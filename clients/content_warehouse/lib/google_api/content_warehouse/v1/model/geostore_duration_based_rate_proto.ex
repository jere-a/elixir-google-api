# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreDurationBasedRateProto do
  @moduledoc """
  A single cost which will apply based on the duration of utilization. The cost may apply once, or repeatedly on some interval, to account for the total utilization. If the duration expressed by range_start_seconds and range_end_seconds do not cover the entire duration of the utilization (i.e. from 0 to some time greater than the total utilization time), this must be combined with other DurationBasedRateProtos such that the entire duration of the utilization is accounted for. See go/rate-schema for more details.

  ## Attributes

  *   `isFree` (*type:* `boolean()`, *default:* `nil`) - If true, represents that the rate is free; i.e. the price is 0 in any currency. If this is true, price must be empty.
  *   `periodicitySeconds` (*type:* `integer()`, *default:* `nil`) - The billable unit of the rate; i.e. after having utilized the service for exactly periodicity_seconds, the total cost should increase by ‘price’. For example, if the rate expresses a price per hour, then periodicity_seconds should be set to 3600. If this is unset, then the rate does not vary based on duration, and price represents a flat cost. May only be set if price is nonempty.
  *   `price` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.FreebaseTopic.t)`, *default:* `nil`) - The total price, in each applicable currency, of utilizing the service for periodicity_seconds, or for the entire duration expressed by range_start_seconds and range_end_seconds if periodicity_seconds is 0. Each entry should have an ID of /measurement_unit/money_value and consist of two properties: one with an ID of /measurement_unit/money_value/amount and a float value with the amount, and another with the ID /measurement_unit/money_value/currency and an ID value with the MID of the proper currency. May only be set if is_free is false.
  *   `rangeEndSeconds` (*type:* `integer()`, *default:* `nil`) - Upper bound for durations to match, exclusive. Unset implies indefinite.
  *   `rangeStartSeconds` (*type:* `integer()`, *default:* `nil`) - Lower bound for durations to match, inclusive. Required; a value of 0 expresses that the price applies from the start of the utilization period.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isFree => boolean() | nil,
          :periodicitySeconds => integer() | nil,
          :price => list(GoogleApi.ContentWarehouse.V1.Model.FreebaseTopic.t()) | nil,
          :rangeEndSeconds => integer() | nil,
          :rangeStartSeconds => integer() | nil
        }

  field(:isFree)
  field(:periodicitySeconds)
  field(:price, as: GoogleApi.ContentWarehouse.V1.Model.FreebaseTopic, type: :list)
  field(:rangeEndSeconds)
  field(:rangeStartSeconds)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreDurationBasedRateProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreDurationBasedRateProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreDurationBasedRateProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
