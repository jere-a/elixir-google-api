# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProviderDelta do
  @moduledoc """
  ProviderDelta. The incremental change, e.g. installation or deletion for Spotify or iHeartRadio. Currently it is for Android only. A few considerations for edge cases: - If the app being deleted is not found from Footprints, it is ignored. - For Footprint upload through Geller, the gPRC response is available for client to retry in the next upload if the upload fails. - For Assistant Request, there is no upload status similar to the current AppCapabilities. Next ID: 4

  ## Attributes

  *   `androidAppInfoDelta` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfoDelta.t`, *default:* `nil`) - The android app information of the provider.
  *   `fallbackUrl` (*type:* `String.t`, *default:* `nil`) - A URL to fallback to if app can not be opened.
  *   `iconImageUrl` (*type:* `String.t`, *default:* `nil`) - Public URL pointing to an icon image for the provider. e.g. https://lh3.googleusercontent.com/UrY7BAZ-XfXGpfkeWg0zCCeo-7ras4DCoRalC_WXXWTK9q5b0Iw7B0YQMsVxZaNB7DM
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :androidAppInfoDelta =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfoDelta.t() | nil,
          :fallbackUrl => String.t() | nil,
          :iconImageUrl => String.t() | nil
        }

  field(:androidAppInfoDelta,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfoDelta
  )

  field(:fallbackUrl)
  field(:iconImageUrl)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProviderDelta do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProviderDelta.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProviderDelta do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
