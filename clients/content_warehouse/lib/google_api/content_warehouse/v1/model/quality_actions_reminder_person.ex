# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderPerson do
  @moduledoc """
  A representation of a person other than the current user, who may have created the reminder for the current user, or will receive it from them.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - REQUIRED. Their full name, which will be shown/spoken when referring to this person informally, e.g. "You have 2 reminders from Dave Smith."
  *   `emailAddress` (*type:* `String.t`, *default:* `nil`) - OPTIONAL. Their email address.
  *   `gaiaId` (*type:* `String.t`, *default:* `nil`) - REQUIRED. Their gaia id (used by the backend for CRUD operations).
  *   `givenName` (*type:* `String.t`, *default:* `nil`) - REQUIRED. Their given name, which will be shown/spoken when referring to this person informally, e.g. "You have 2 reminders from Dave."
  *   `photoUrl` (*type:* `String.t`, *default:* `nil`) - OPTIONAL. The URL of the photo. This field is read from photo field from go/people-api. Also see go/khdgk for URL formats. This field might be missing if user does not have photo URL available.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t() | nil,
          :emailAddress => String.t() | nil,
          :gaiaId => String.t() | nil,
          :givenName => String.t() | nil,
          :photoUrl => String.t() | nil
        }

  field(:displayName)
  field(:emailAddress)
  field(:gaiaId)
  field(:givenName)
  field(:photoUrl)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderPerson do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderPerson.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderPerson do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
