# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedClientOpSupportedExecution do
  @moduledoc """
  Additional properties that client can support for executing the client op. They are surface-specific execution properties and are unrelated to the execution model.

  ## Attributes

  *   `supportsPartialFulfillment` (*type:* `boolean()`, *default:* `nil`) - ClientOp execution supports special rendering behavior while the user is in the middle of expressing their query. This behavior includes: 1) New partial output always over-writes prior partial output. 2) Canceling the interaction removes partial fulfilment from any user visible interaction history. If this is true, whether to apply the special rendering behavior will be determined by PartialFulfillmentRenderingParams. More details can be found at go/ma-natcon-pf-api.
  *   `supportsSynchronousExecution` (*type:* `boolean()`, *default:* `nil`) - Client can support synchronous execution of the client op. For tts.OUTPUT client op it means that client would honor |synchronous_playback_args| argument. Please see more at go/synchronous-sounds-design.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :supportsPartialFulfillment => boolean() | nil,
          :supportsSynchronousExecution => boolean() | nil
        }

  field(:supportsPartialFulfillment)
  field(:supportsSynchronousExecution)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedClientOpSupportedExecution do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedClientOpSupportedExecution.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSupportedClientOpSupportedExecution do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
