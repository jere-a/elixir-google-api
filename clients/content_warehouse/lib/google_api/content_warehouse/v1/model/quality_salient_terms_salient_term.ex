# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm do
  @moduledoc """
  SalientTerm can be two things depending on where this message is. When right under a SalientTermSet, it is a normalized term and weight pair, along with other term-level data. When under another SalientTerm message, it is a non-normalized original term (see original_term field).

  ## Attributes

  *   `idf` (*type:* `number()`, *default:* `nil`) - idf of the original_term. Used by Accumulator2. This field is only available in debug mode.
  *   `label` (*type:* `String.t`, *default:* `nil`) - label can be two things depending on where this message is. When right under a SalientTermSet, it is the normalized term returned by quality_salient_terms::utils::NormalizeTerm() from salient_terms_utils.h. When under another SalientTerm message, it is the original term as found in a signal (see original_term field).
  *   `originalTerm` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm.t)`, *default:* `nil`) - original_term are the different ways we found this normalized term in the signals. They are in increasing idf order (the most common version first). An empty string means that this original term is the same as the label field in the parent SalientTerm message. NOTE: Please do not access this field directly. Use quality_salient_terms::utils::OriginalTermsIterator from salient_terms_utils.h instead.
  *   `salience` (*type:* `number()`, *default:* `nil`) - salience is the importance of the term as a descriptor in [0, 1] (the higher the more important). This field takes precedence over weight field below. NOTE: Please do not access this field directly. Use quality_salient_terms::utils::GetSalience() from salient_terms_utils.h instead.
  *   `signalTerm` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalTermData.t)`, *default:* `nil`) - signal_term contains extra signal-specific (e.g., body, anchors, clicks) data for this term.
  *   `virtualTf` (*type:* `number()`, *default:* `nil`) - virtual_tf is the accumulated corrected term frequency from all the signals. This field is only available in debug mode.
  *   `weight` (*type:* `integer()`, *default:* `nil`) - weight is the importance of the term as a descriptor in [0, 100] (the higher the more important). NOTE: Please do not access this field directly. Use quality_salient_terms::utils::GetSalience() from salient_terms_utils.h instead. DEPRECATED: prefer salience field above.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :idf => number() | nil,
          :label => String.t() | nil,
          :originalTerm =>
            list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm.t()) | nil,
          :salience => number() | nil,
          :signalTerm =>
            list(GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalTermData.t()) | nil,
          :virtualTf => number() | nil,
          :weight => integer() | nil
        }

  field(:idf)
  field(:label)

  field(:originalTerm,
    as: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm,
    type: :list
  )

  field(:salience)

  field(:signalTerm,
    as: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSignalTermData,
    type: :list
  )

  field(:virtualTf)
  field(:weight)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualitySalientTermsSalientTerm do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
