# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores do
  @moduledoc """
  Detailed scores about the topicality of an entity. Next available tag: 17

  ## Attributes

  *   `connectedness` (*type:* `number()`, *default:* `nil`) - Represents how much the entity is connected/related to the other entities in the document. This signal partially influences the topicality score, but it is not totally aligned with it: an entity can be very related to the rest of the document, but not central for understanding it. Likewise, an entity can be central to understand a document, but not very related to the rest of the document. The value is in [0, 1].
  *   `docScore` (*type:* `number()`, *default:* `nil`) - How well the document scores for the entity. The score is unnormalized, and serves as a relative ranking signal between different documents for an entity.
  *   `isAuthor` (*type:* `boolean()`, *default:* `nil`) - True if the entity is the author of the document. This was mainly developed and tuned for news articles (e.g. /m/02x27qn on "www.vogue.com/article/flint-town-netflix") but is also popluated for other content (e.g. scientific articles). Important: the semantics of this field may change in the future or it might be removed and replaced with a different API. If you want to use this field, please reach out to ke-authors@ first.
  *   `isPublisher` (*type:* `boolean()`, *default:* `nil`) - True if the entity is the publisher of the page (e.g. CNN on "http://www.cnn.com/foo/bar").
  *   `isReferencePage` (*type:* `boolean()`, *default:* `nil`) - Set to true iff the entity matches the full URL of the document, meaning that it is a reference page or related page of the entity.
  *   `normalizedTopicality` (*type:* `number()`, *default:* `nil`) - Representation of the topicality score that is normalized in [0, 1] and which sum over all entities in the document is 1. It represents the "proportion" of the document that talks about the entity. This score is less human interpretable as the bucketized topicality score (EntityAnnotations.topicality_score), but is more suited for some usages like aggregations.
  *   `profileUrl` (*type:* `String.t`, *default:* `nil`) - Contains the link to the author's profile url on the platform.
  *   `referencePageScores` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores.t`, *default:* `nil`) - Signals used for mining new reference pages, set by the reference-page-scorer processor (that is turned off by default). This field is not populated, except for special reference page extraction runs.
  *   `relevanceScore` (*type:* `number()`, *default:* `nil`) - Relevance score generated by a Machine Learning entity classifier. This signal is similar to topicality, but machine learning based and supported by EntitySignals, not Webref. See http://go/entityclassifier for details on the classifier.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :connectedness => number() | nil,
          :docScore => number() | nil,
          :isAuthor => boolean() | nil,
          :isPublisher => boolean() | nil,
          :isReferencePage => boolean() | nil,
          :normalizedTopicality => number() | nil,
          :profileUrl => String.t() | nil,
          :referencePageScores =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores.t() | nil,
          :relevanceScore => number() | nil
        }

  field(:connectedness)
  field(:docScore)
  field(:isAuthor)
  field(:isPublisher)
  field(:isReferencePage)
  field(:normalizedTopicality)
  field(:profileUrl)

  field(:referencePageScores,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefReferencePageScores
  )

  field(:relevanceScore)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
