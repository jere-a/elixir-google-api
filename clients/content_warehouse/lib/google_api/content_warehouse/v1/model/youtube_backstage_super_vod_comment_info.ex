# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.YoutubeBackstageSuperVodCommentInfo do
  @moduledoc """
  Contains information about comment that is posted through a Super Thanks purchase. Next ID: 7

  ## Attributes

  *   `currencyCode` (*type:* `String.t`, *default:* `nil`) - Currency code the user uses to purchase this Super Thanks item.
  *   `entitlementId` (*type:* `String.t`, *default:* `nil`) - The ID of the Super Thanks entitlement. It uniquely identifies a Super Thanks purchase. This field is deprecated in favor of transaction_id, see go/st-deprecate-ent-id.
  *   `priceInMicros` (*type:* `String.t`, *default:* `nil`) - Price of Super Thanks item the user purchases in micros.
  *   `superVodItemId` (*type:* `String.t`, *default:* `nil`) - The Super Thanks item the user purchases, it represents price tier.
  *   `transactionId` (*type:* `String.t`, *default:* `nil`) - The ID of the Super Thanks transaction. It uniquely identifies a Super Thanks purchase.
  *   `version` (*type:* `String.t`, *default:* `nil`) - Which version of experiment this Super Thanks comment is posted in.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :currencyCode => String.t() | nil,
          :entitlementId => String.t() | nil,
          :priceInMicros => String.t() | nil,
          :superVodItemId => String.t() | nil,
          :transactionId => String.t() | nil,
          :version => String.t() | nil
        }

  field(:currencyCode)
  field(:entitlementId)
  field(:priceInMicros)
  field(:superVodItemId)
  field(:transactionId)
  field(:version)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.YoutubeBackstageSuperVodCommentInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.YoutubeBackstageSuperVodCommentInfo.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.YoutubeBackstageSuperVodCommentInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
