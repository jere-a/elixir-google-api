# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider do
  @moduledoc """
  Provider. Like, Spotify or iHeartRadio. Next ID: 13

  ## Attributes

  *   `androidAppInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfo.t`, *default:* `nil`) - The android app information of the provider.
  *   `castAppInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCastAppInfo.t`, *default:* `nil`) - The cast app information of the provider.
  *   `chromeosAppInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesChromeOsAppInfo.t`, *default:* `nil`) - The ChromeOS app information of the provider.
  *   `cloudProviderInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCloudProviderInfo.t`, *default:* `nil`) - The third party provider information.
  *   `fallbackUrl` (*type:* `String.t`, *default:* `nil`) - A URL to fallback to if app can not be opened.
  *   `homeAppInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesHomeAppInfo.t`, *default:* `nil`) - 
  *   `iconImageUrl` (*type:* `String.t`, *default:* `nil`) - Public URL pointing to an icon image for the provider. e.g. https://lh3.googleusercontent.com/UrY7BAZ-XfXGpfkeWg0zCCeo-7ras4DCoRalC_WXXWTK9q5b0Iw7B0YQMsVxZaNB7DM
  *   `internalProviderInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesInternalProviderInfo.t`, *default:* `nil`) - The internal assistant provider information.
  *   `iosAppInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesIosAppInfo.t`, *default:* `nil`) - The iOS app information of the provider.
  *   `kaiosAppInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesKaiOsAppInfo.t`, *default:* `nil`) - The KaiOS app information of the provider.
  *   `sipProviderInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSipProviderInfo.t`, *default:* `nil`) - The sip information of the provider.
  *   `webProviderInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesWebProviderInfo.t`, *default:* `nil`) - The web provider information.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :androidAppInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfo.t() | nil,
          :castAppInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCastAppInfo.t() | nil,
          :chromeosAppInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesChromeOsAppInfo.t() | nil,
          :cloudProviderInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCloudProviderInfo.t() | nil,
          :fallbackUrl => String.t() | nil,
          :homeAppInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesHomeAppInfo.t() | nil,
          :iconImageUrl => String.t() | nil,
          :internalProviderInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesInternalProviderInfo.t()
            | nil,
          :iosAppInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesIosAppInfo.t() | nil,
          :kaiosAppInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesKaiOsAppInfo.t() | nil,
          :sipProviderInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSipProviderInfo.t() | nil,
          :webProviderInfo =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesWebProviderInfo.t() | nil
        }

  field(:androidAppInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesAndroidAppInfo
  )

  field(:castAppInfo, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCastAppInfo)

  field(:chromeosAppInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesChromeOsAppInfo
  )

  field(:cloudProviderInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesCloudProviderInfo
  )

  field(:fallbackUrl)
  field(:homeAppInfo, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesHomeAppInfo)
  field(:iconImageUrl)

  field(:internalProviderInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesInternalProviderInfo
  )

  field(:iosAppInfo, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesIosAppInfo)
  field(:kaiosAppInfo, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesKaiOsAppInfo)

  field(:sipProviderInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSipProviderInfo
  )

  field(:webProviderInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesWebProviderInfo
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
