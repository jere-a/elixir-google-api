# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageQueryIndices do
  @moduledoc """
  Identifies a set of Image NavBoost queries in the CompositeDoc. Each CompositeDoc can contain several images, so we store the image index from the CompositeDoc::doc_images with the index of the particular query inside ImageData::image_data_navboost.

  ## Attributes

  *   `canonicalDocid` (*type:* `String.t`, *default:* `nil`) - The (canonical) image docid of the ImageData this image query is part of. Useful for identifying the ImageData even after doc_images are updated in between Webref annotation runs. Use docid only when canonical_docid == 0.
  *   `docid` (*type:* `String.t`, *default:* `nil`) - 
  *   `imageIndex` (*type:* `integer()`, *default:* `nil`) - WARNING: The doc_images in docjoins are subject to updates including non-deterministic reordering of doc_images and their image_nb_data extensions. This means that without re-running WebrefAnnotator one cannot rely on the accuracy or even consistency of either image_index or query_index when parsing a cdoc from docjoins. In those situations one ought to rely on canonical_docid (or docid when canonical_docid is absent viz. 0). The index of the source image in CompositeDoc::doc_images.
  *   `queryIndex` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefQueryIndices.t`, *default:* `nil`) - Queries index in ImageData::image_data_navboost.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :canonicalDocid => String.t() | nil,
          :docid => String.t() | nil,
          :imageIndex => integer() | nil,
          :queryIndex =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefQueryIndices.t() | nil
        }

  field(:canonicalDocid)
  field(:docid)
  field(:imageIndex)
  field(:queryIndex, as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefQueryIndices)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageQueryIndices do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageQueryIndices.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageQueryIndices do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
