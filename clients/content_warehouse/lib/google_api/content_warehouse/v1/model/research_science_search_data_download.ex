# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataDownload do
  @moduledoc """
  The dataset in downloadable form. There can be multiple data download entries for different file types. Next ID: 6

  ## Attributes

  *   `contentSize` (*type:* `String.t`, *default:* `nil`) - Size of the download, as a string from the provider. May include units.
  *   `downloadUrl` (*type:* `String.t`, *default:* `nil`) - URL for downloading the data
  *   `fileFormat` (*type:* `String.t`, *default:* `nil`) - File format at the link (ASCII, CSV, etc.)
  *   `fileFormatClass` (*type:* `String.t`, *default:* `nil`) - Pragmatic classification of file formats - for filtering purposes
  *   `parsedContentSize` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataSize.t`, *default:* `nil`) - Parsed content size
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contentSize => String.t() | nil,
          :downloadUrl => String.t() | nil,
          :fileFormat => String.t() | nil,
          :fileFormatClass => String.t() | nil,
          :parsedContentSize =>
            GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataSize.t() | nil
        }

  field(:contentSize)
  field(:downloadUrl)
  field(:fileFormat)
  field(:fileFormatClass)
  field(:parsedContentSize, as: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataSize)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataDownload do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataDownload.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchDataDownload do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
