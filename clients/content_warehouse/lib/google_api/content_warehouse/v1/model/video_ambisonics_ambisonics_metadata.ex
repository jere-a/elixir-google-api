# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoAmbisonicsAmbisonicsMetadata do
  @moduledoc """


  ## Attributes

  *   `channelMap` (*type:* `list(integer())`, *default:* `nil`) - Maps channel indexes of an audio stream to indexes corresponding to the specified ambisonics channel ordering scheme. For example: A 1st order pheriphonic ambisonics format is configured with 4 audio channels corresponding to ambisonic components W, X, Y, Z respectively. The channel_ordering scheme is specified as CHANNEL_ORDERING_ACN (which implies a W, Y, Z, X ordering). Therefore the channel_map is [0, 3, 1, 2].
  *   `channelOrdering` (*type:* `String.t`, *default:* `nil`) - 
  *   `nonDiegeticStereo` (*type:* `boolean()`, *default:* `nil`) - 
  *   `normalization` (*type:* `String.t`, *default:* `nil`) - 
  *   `numChannels` (*type:* `integer()`, *default:* `nil`) - 
  *   `order` (*type:* `integer()`, *default:* `nil`) - 
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  *   `version` (*type:* `integer()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :channelMap => list(integer()) | nil,
          :channelOrdering => String.t() | nil,
          :nonDiegeticStereo => boolean() | nil,
          :normalization => String.t() | nil,
          :numChannels => integer() | nil,
          :order => integer() | nil,
          :type => String.t() | nil,
          :version => integer() | nil
        }

  field(:channelMap, type: :list)
  field(:channelOrdering)
  field(:nonDiegeticStereo)
  field(:normalization)
  field(:numChannels)
  field(:order)
  field(:type)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoAmbisonicsAmbisonicsMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoAmbisonicsAmbisonicsMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.VideoAmbisonicsAmbisonicsMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
