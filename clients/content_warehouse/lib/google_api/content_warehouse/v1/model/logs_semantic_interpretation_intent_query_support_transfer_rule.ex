# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQuerySupportTransferRule do
  @moduledoc """
  Logs version of the repository_webref.SupportTransferRule proto Non-logs version supports go/stbr

  ## Attributes

  *   `allowWildcardIntents` (*type:* `boolean()`, *default:* `nil`) - 
  *   `domain` (*type:* `String.t`, *default:* `nil`) - 
  *   `isReverseLink` (*type:* `boolean()`, *default:* `nil`) - 
  *   `mentionsOnly` (*type:* `boolean()`, *default:* `nil`) - 
  *   `supportShare` (*type:* `boolean()`, *default:* `nil`) - 
  *   `targetCollection` (*type:* `String.t`, *default:* `nil`) - 
  *   `userCountry` (*type:* `String.t`, *default:* `nil`) - 
  *   `userLanguage` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowWildcardIntents => boolean() | nil,
          :domain => String.t() | nil,
          :isReverseLink => boolean() | nil,
          :mentionsOnly => boolean() | nil,
          :supportShare => boolean() | nil,
          :targetCollection => String.t() | nil,
          :userCountry => String.t() | nil,
          :userLanguage => String.t() | nil
        }

  field(:allowWildcardIntents)
  field(:domain)
  field(:isReverseLink)
  field(:mentionsOnly)
  field(:supportShare)
  field(:targetCollection)
  field(:userCountry)
  field(:userLanguage)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQuerySupportTransferRule do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQuerySupportTransferRule.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.LogsSemanticInterpretationIntentQuerySupportTransferRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
