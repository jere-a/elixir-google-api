# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityDniExtendedNewsPreviews do
  @moduledoc """
  When making changes to this proto, make sure to run: blaze test commerce/datastore/tools/codegen:code_generator_test blaze run commerce/datastore/tools/codegen:code_generator See http://go/cds-schema-council for details. LINT.IfChange

  ## Attributes

  *   `desnippetedCountryCode` (*type:* `list(String.t)`, *default:* `nil`) - List of countries that desnippet the publisher. ISO 3166-1-alpha-2 country code (such as FR). See go/iiuse#region-identifiers. Used in V1.
  *   `policyCriteriaBase64` (*type:* `String.t`, *default:* `nil`) - Search Console Signals that modifies how policy are calculated. Didn't add `wmconsole.EnpDesnippetingOverrideRules` direcly to avoid cicular dependency issue: go/enp-v2#bookmark=id.dvb1qcltabv9 ENPv2 proto (EnpDesnippetingOverrideRules): google3/crawler/wmconsole/proto/config_enp_desnippeting_override_rules.proto
  *   `status` (*type:* `String.t`, *default:* `nil`) - ENP status.
  *   `version` (*type:* `String.t`, *default:* `nil`) - The default version is V0 (for backward compatibility).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :desnippetedCountryCode => list(String.t()) | nil,
          :policyCriteriaBase64 => String.t() | nil,
          :status => String.t() | nil,
          :version => String.t() | nil
        }

  field(:desnippetedCountryCode, type: :list)
  field(:policyCriteriaBase64)
  field(:status)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityDniExtendedNewsPreviews do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityDniExtendedNewsPreviews.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityDniExtendedNewsPreviews do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
