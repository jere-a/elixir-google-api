# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaYouTubeDeeplinkInfo do
  @moduledoc """
  Provide the deeplink information specific to YouTube PMAs. Next ID: 3

  ## Attributes

  *   `clickTrackingId` (*type:* `String.t`, *default:* `nil`) - See go/yt-clicktracking. Serialized youtube.api.innertube.InnerTubeClickTrackingProto.
  *   `uploaderChannelId` (*type:* `String.t`, *default:* `nil`) - For YouTube Channels, by default the deeplink is set to be the playlist of all uploads from the channel. This field is used for YouTube in-app browse when we need the YouTube channel's main page url. We will use the uploader_channel_id to construct the needed channel deeplink.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clickTrackingId => String.t() | nil,
          :uploaderChannelId => String.t() | nil
        }

  field(:clickTrackingId)
  field(:uploaderChannelId)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaYouTubeDeeplinkInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaYouTubeDeeplinkInfo.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaYouTubeDeeplinkInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
