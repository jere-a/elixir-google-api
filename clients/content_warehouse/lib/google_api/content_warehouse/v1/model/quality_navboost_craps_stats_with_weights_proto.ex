# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsStatsWithWeightsProto do
  @moduledoc """


  ## Attributes

  *   `hi` (*type:* `float()`, *default:* `nil`) - 
  *   `kind` (*type:* `integer()`, *default:* `nil`) - 
  *   `lo` (*type:* `float()`, *default:* `nil`) - 
  *   `mean` (*type:* `float()`, *default:* `nil`) - 
  *   `median` (*type:* `float()`, *default:* `nil`) - 
  *   `n` (*type:* `integer()`, *default:* `nil`) - 
  *   `pc10` (*type:* `float()`, *default:* `nil`) - 
  *   `pc25` (*type:* `float()`, *default:* `nil`) - 
  *   `pc75` (*type:* `float()`, *default:* `nil`) - 
  *   `pc90` (*type:* `float()`, *default:* `nil`) - 
  *   `stdError` (*type:* `float()`, *default:* `nil`) - 
  *   `stddev` (*type:* `float()`, *default:* `nil`) - 
  *   `varOfMean` (*type:* `float()`, *default:* `nil`) - 
  *   `variance` (*type:* `float()`, *default:* `nil`) - 
  *   `weightedN` (*type:* `float()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hi => float() | nil,
          :kind => integer() | nil,
          :lo => float() | nil,
          :mean => float() | nil,
          :median => float() | nil,
          :n => integer() | nil,
          :pc10 => float() | nil,
          :pc25 => float() | nil,
          :pc75 => float() | nil,
          :pc90 => float() | nil,
          :stdError => float() | nil,
          :stddev => float() | nil,
          :varOfMean => float() | nil,
          :variance => float() | nil,
          :weightedN => float() | nil
        }

  field(:hi)
  field(:kind)
  field(:lo)
  field(:mean)
  field(:median)
  field(:n)
  field(:pc10)
  field(:pc25)
  field(:pc75)
  field(:pc90)
  field(:stdError)
  field(:stddev)
  field(:varOfMean)
  field(:variance)
  field(:weightedN)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsStatsWithWeightsProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsStatsWithWeightsProto.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsStatsWithWeightsProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
