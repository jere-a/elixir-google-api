# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityAnnotations do
  @moduledoc """
  All annotations for a given concept (in one document collection). Available tags: [10-15], [19-]

  ## Attributes

  *   `confidenceScore` (*type:* `number()`, *default:* `nil`) - The overall confidence that the entity is annotated somewhere in the document or query. For WebRef it is computed as a function of the mention confidences weighted by the importance of each mention, where for documents a mention is of greater importance if it occurs in the title, h1 or anchors. For QRef it is just the maximum of the confidence over all mentions. NOTE: You probably want to use the mention-level segment_mentions.mention.confidence_score field instead of this one.
  *   `debugInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotationDebugInfo.t`, *default:* `nil`) - 
  *   `detailedEntityScores` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores.t`, *default:* `nil`) - Additional information about how the entity relates to the page, for example whether it is a business entity which published the page.
  *   `explainedRangeInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefExplainedRangeInfo.t`, *default:* `nil`) - All ranges explained by the entity or any other entity it implies. Used in the context of partial query interpretation (go/partial-understanding).
  *   `imageMention` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageMention.t)`, *default:* `nil`) - This is an experimental output for go/multiref. Don't use it without consulting the Webref team
  *   `isImplicit` (*type:* `boolean()`, *default:* `nil`) - An entity is marked as implicit if there is no explicit mention of the entity in the content of the page. For instance, all mentions of the entity are in query, url and/or anchors; or the entity has only implicit content mentions.
  *   `isResolution` (*type:* `boolean()`, *default:* `nil`) - True if the entity is an MDVC summary entity, i.e. it might not be mentioned directly on the query, but it is the product of resolving a set of explicit annotations. E.g. "2014 FIFA World Cup" can be the summary for the query: [soccer world cup in brazil] even though none of the names of the entity is mentioned on the query. Summary nodes can also be synthetic, i.e. have a /t/ mid, as they represent the intersection between a set of regular annotations. For more information, see http://go/mdvc-output.
  *   `segmentMentions` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMentions.t)`, *default:* `nil`) - All mentions of a given concept grouped by segments. For Webref, there are many different kinds of segment, such as content, title and anchors; while for QRef, there is only one segment called CONTENT. For QRef this field contains the primary output of the annotator, and for WebRef it together with topicality_score does.
  *   `topicalityRank` (*type:* `integer()`, *default:* `nil`) - Rank of the entity when sorted by topicality score.
  *   `topicalityScore` (*type:* `number()`, *default:* `nil`) - The WebRef topicality score of the entity for this document. This score indicates how related is the entity to the overall topic of the document. See https://goto.google.com/topicality-score for details. This field is not present in QRef output. Note that the topicality and the confidence score are orthogonal measures. It is possible that the annotator is absolutely sure that an entity is mentioned in a given range in the document, but this entity may be unrelated to the overall topic of the page (e.g. the entity "RSS" is mentioned in the footer of appleinsider.com). In this case the mention has a very high confidence score, but very low topicality score.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confidenceScore => number() | nil,
          :debugInfo =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotationDebugInfo.t() | nil,
          :detailedEntityScores =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores.t() | nil,
          :explainedRangeInfo =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefExplainedRangeInfo.t() | nil,
          :imageMention =>
            list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageMention.t()) | nil,
          :isImplicit => boolean() | nil,
          :isResolution => boolean() | nil,
          :segmentMentions =>
            list(GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMentions.t()) | nil,
          :topicalityRank => integer() | nil,
          :topicalityScore => number() | nil
        }

  field(:confidenceScore)
  field(:debugInfo, as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotationDebugInfo)

  field(:detailedEntityScores,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefDetailedEntityScores
  )

  field(:explainedRangeInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefExplainedRangeInfo
  )

  field(:imageMention,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefImageMention,
    type: :list
  )

  field(:isImplicit)
  field(:isResolution)

  field(:segmentMentions,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefSegmentMentions,
    type: :list
  )

  field(:topicalityRank)
  field(:topicalityScore)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityAnnotations do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityAnnotations.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefEntityAnnotations do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
