# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1DeviceConfig do
  @moduledoc """
  *Required* Fields that identify the device to the Assistant. See also: * [Register a Device - REST API](https: //developers.google.com/assistant/sdk/re // ference/device-registration/register-device-manual) * [Device Model and Instance Schemas](https: //developers.google.com/assistant/sdk/re // ference/device-registration/model-and-instance-schemas) * [Device Proto](https: //developers.google.com/assistant/sdk/re // ference/rpc/google.assistant.devices.v1#device)

  ## Attributes

  *   `deviceModelCapabilitiesOverride` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1DeviceModelCapabilitiesOverride.t`, *default:* `nil`) - Device model capabilities from client to override capabilities in the primary device model.
  *   `heterodyneToken` (*type:* `String.t`, *default:* `nil`) - *Optional* An encrypted heterodyne_experiment_token containing the list of experiment_ids (go/ph-server-tokens).
  *   `surfaceIdentity` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1SurfaceIdentity.t`, *default:* `nil`) - *Required* Identifier for the device which sent the request.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceModelCapabilitiesOverride =>
            GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1DeviceModelCapabilitiesOverride.t()
            | nil,
          :heterodyneToken => String.t() | nil,
          :surfaceIdentity =>
            GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1SurfaceIdentity.t() | nil
        }

  field(:deviceModelCapabilitiesOverride,
    as:
      GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1DeviceModelCapabilitiesOverride
  )

  field(:heterodyneToken)

  field(:surfaceIdentity,
    as: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantEmbeddedV1SurfaceIdentity
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1DeviceConfig do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1DeviceConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleAssistantAccessoryV1DeviceConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
