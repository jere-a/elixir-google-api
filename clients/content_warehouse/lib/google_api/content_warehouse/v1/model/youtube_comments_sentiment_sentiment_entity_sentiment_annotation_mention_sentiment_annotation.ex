# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsSentimentSentimentEntitySentimentAnnotationMentionSentimentAnnotation do
  @moduledoc """
  A mention level sentiment annotation containing the sentiment values for a single entity mention. // Next tag: 6.

  ## Attributes

  *   `endToken` (*type:* `String.t`, *default:* `nil`) - Token end index in corresponding SAFT document (inclusive).
  *   `magnitude` (*type:* `number()`, *default:* `nil`) - Total magnitude of the sentiment.
  *   `polarity` (*type:* `number()`, *default:* `nil`) - Polarity of the sentiment. See above for detail.
  *   `score` (*type:* `number()`, *default:* `nil`) - The per mention score between -1.0 and 1.0. Combines the signal from polarity and magnitude values.
  *   `startToken` (*type:* `String.t`, *default:* `nil`) - Token start index in corresponding SAFT document.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endToken => String.t() | nil,
          :magnitude => number() | nil,
          :polarity => number() | nil,
          :score => number() | nil,
          :startToken => String.t() | nil
        }

  field(:endToken)
  field(:magnitude)
  field(:polarity)
  field(:score)
  field(:startToken)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsSentimentSentimentEntitySentimentAnnotationMentionSentimentAnnotation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsSentimentSentimentEntitySentimentAnnotationMentionSentimentAnnotation.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContentWarehouse.V1.Model.YoutubeCommentsSentimentSentimentEntitySentimentAnnotationMentionSentimentAnnotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
