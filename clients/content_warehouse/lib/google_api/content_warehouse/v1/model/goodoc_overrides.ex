# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoodocOverrides do
  @moduledoc """
  This message specifies structure "overrides" to apply: it can be used to force certain kinds of GoodocToHTML renderings of elements.

  ## Attributes

  *   `blockImagination` (*type:* `String.t`, *default:* `nil`) - For text blocks only: do not allow this block to be turned into an image when rendering, even if your algorithms want to do so:
  *   `doNotExpandGraphicBox` (*type:* `boolean()`, *default:* `nil`) - For graphic blocks, we often expand the block a bit for rendering, to compensate for bad image segmentation. do_not_expand_graphic_box forces this behavior to be turned off.
  *   `fullPageAsImage` (*type:* `String.t`, *default:* `nil`) - For Pages only: explicitly specify whether or not this page should be rendered fully as an image
  *   `fullPageLineated` (*type:* `String.t`, *default:* `nil`) - For Pages only: explicitly specify whether or not all text on this page should be treated as "LINEATED"
  *   `fullPageSkipped` (*type:* `String.t`, *default:* `nil`) - For Pages only: explicitly specify whether or not this page should be skipped.
  *   `needNotSuppressPhoto` (*type:* `boolean()`, *default:* `nil`) - This GRAPHIC block's image can be shown even when GoodocToHTMLOptions.suppress_photos_with_this is specified.
  *   `pageBreakBefore` (*type:* `String.t`, *default:* `nil`) - For blocks: explicitly specify whether or not this block should get a page-break before it.
  *   `style` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GoodocOverridesStyle.t)`, *default:* `nil`) - 
  *   `wordHtml` (*type:* `String.t`, *default:* `nil`) - For Words only: replace the rendered HTML by this:
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blockImagination => String.t() | nil,
          :doNotExpandGraphicBox => boolean() | nil,
          :fullPageAsImage => String.t() | nil,
          :fullPageLineated => String.t() | nil,
          :fullPageSkipped => String.t() | nil,
          :needNotSuppressPhoto => boolean() | nil,
          :pageBreakBefore => String.t() | nil,
          :style => list(GoogleApi.ContentWarehouse.V1.Model.GoodocOverridesStyle.t()) | nil,
          :wordHtml => String.t() | nil
        }

  field(:blockImagination)
  field(:doNotExpandGraphicBox)
  field(:fullPageAsImage)
  field(:fullPageLineated)
  field(:fullPageSkipped)
  field(:needNotSuppressPhoto)
  field(:pageBreakBefore)
  field(:style, as: GoogleApi.ContentWarehouse.V1.Model.GoodocOverridesStyle, type: :list)
  field(:wordHtml)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocOverrides do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoodocOverrides.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocOverrides do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
