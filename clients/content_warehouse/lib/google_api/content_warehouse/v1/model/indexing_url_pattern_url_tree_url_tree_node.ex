# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTreeNode do
  @moduledoc """


  ## Attributes

  *   `indexOfSubTreeWithSplittingFeature` (*type:* `integer()`, *default:* `nil`) - 
  *   `indexOfSubTreeWithoutSplittingFeature` (*type:* `integer()`, *default:* `nil`) - 
  *   `parent` (*type:* `integer()`, *default:* `nil`) - 
  *   `pathFromRoot` (*type:* `String.t`, *default:* `nil`) - The path from root to current node. This is only used for debugging.
  *   `patternId` (*type:* `String.t`, *default:* `nil`) - This is only used in leaf nodes which represents a url pattern. It is the fingerprint of the splitting url features from root to the leaf.
  *   `payload` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - 
  *   `splittingFeature` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlFeature.t`, *default:* `nil`) - 
  *   `splittingFeatureScore` (*type:* `float()`, *default:* `nil`) - The information gain of content features when selecting this splitting feature to split the node.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :indexOfSubTreeWithSplittingFeature => integer() | nil,
          :indexOfSubTreeWithoutSplittingFeature => integer() | nil,
          :parent => integer() | nil,
          :pathFromRoot => String.t() | nil,
          :patternId => String.t() | nil,
          :payload => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :splittingFeature =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlFeature.t() | nil,
          :splittingFeatureScore => float() | nil
        }

  field(:indexOfSubTreeWithSplittingFeature)
  field(:indexOfSubTreeWithoutSplittingFeature)
  field(:parent)
  field(:pathFromRoot)
  field(:patternId)
  field(:payload, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)

  field(:splittingFeature,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlFeature
  )

  field(:splittingFeatureScore)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTreeNode do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTreeNode.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTreeNode do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
