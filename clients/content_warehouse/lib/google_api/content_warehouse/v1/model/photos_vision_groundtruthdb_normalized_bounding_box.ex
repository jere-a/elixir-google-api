# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.PhotosVisionGroundtruthdbNormalizedBoundingBox do
  @moduledoc """
  Bounding box coordinates are relative to the width and height of the image. For example, if image is 100x200 and NormalizedBoundingBox is , the bounding box coordinates will be (10, 40) to (50, 180). Note parts of the bounding box may fall outside the image.

  ## Attributes

  *   `xmax` (*type:* `number()`, *default:* `nil`) - 
  *   `xmin` (*type:* `number()`, *default:* `nil`) - 
  *   `ymax` (*type:* `number()`, *default:* `nil`) - 
  *   `ymin` (*type:* `number()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :xmax => number() | nil,
          :xmin => number() | nil,
          :ymax => number() | nil,
          :ymin => number() | nil
        }

  field(:xmax)
  field(:xmin)
  field(:ymax)
  field(:ymin)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionGroundtruthdbNormalizedBoundingBox do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.PhotosVisionGroundtruthdbNormalizedBoundingBox.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionGroundtruthdbNormalizedBoundingBox do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
