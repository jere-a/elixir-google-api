# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport do
  @moduledoc """
  Information about the result support for a given interpretation.

  ## Attributes

  *   `debug` (*type:* `String.t`, *default:* `nil`) - A debug message that summarizes how the score was computed. Populated if result was matched and in debug mode.
  *   `docid` (*type:* `String.t`, *default:* `nil`) - The docid of the result, if available.
  *   `estimatedNaviness` (*type:* `number()`, *default:* `nil`) - The naviness for this result. Each matcher can determine the naviness to use for the result. This can be copied directly from the result, or estimated based on clicks or some other heuristic. The value should be between 0 and 1 and should indicate the probability that the user will click on that result. The estimated_naviness is used to break ties when between results with the same rank.
  *   `provenance` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupportProvenance.t)`, *default:* `nil`) - All provenances of this result support.
  *   `rank` (*type:* `integer()`, *default:* `nil`) - The 0 based rank for this result. When the source is MAIN_GSR this corresponds to the index of the result in the generic search response specific in AddKnowledgePackerPreprocessors. Otherwise, the rank should be estimated so the result is closest in importance to the web result at the same rank.
  *   `score` (*type:* `number()`, *default:* `nil`) - A score from 0 to 1 inclusive that represents the strength of the result support. A score of one indicates this result is entirely about this interpretation.
  *   `source` (*type:* `String.t`, *default:* `nil`) - The source of the result support.
  *   `url` (*type:* `String.t`, *default:* `nil`) - The result url when available.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :debug => String.t() | nil,
          :docid => String.t() | nil,
          :estimatedNaviness => number() | nil,
          :provenance =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupportProvenance.t()
            )
            | nil,
          :rank => integer() | nil,
          :score => number() | nil,
          :source => String.t() | nil,
          :url => String.t() | nil
        }

  field(:debug)
  field(:docid)
  field(:estimatedNaviness)

  field(:provenance,
    as:
      GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupportProvenance,
    type: :list
  )

  field(:rank)
  field(:score)
  field(:source)
  field(:url)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.UniversalsearchNewPackerKnowledgeResultSupport do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
