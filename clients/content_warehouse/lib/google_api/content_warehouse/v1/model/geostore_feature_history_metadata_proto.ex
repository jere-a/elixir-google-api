# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureHistoryMetadataProto do
  @moduledoc """
  Metadata related to the history of a given feature in the Geo repository.

  ## Attributes

  *   `featureBirthTimestampUs` (*type:* `String.t`, *default:* `nil`) - The timestamp (in microseconds since the UNIX epoch) when this feature first went live in the Geo repository. Note that this has no relation to the birth data of that geographical entity in the real world.
  *   `lastModificationTimestampUs` (*type:* `String.t`, *default:* `nil`) - The timestamp (in microseconds since the UNIX epoch) of the last modification to the feature. Note this includes attachment modifications. The feature's initial creation is also considered as a modification. This is useful for those that consume features via both listening to notifications and reading from repository snapshots. This timestamp can be used to decide whether a feature in the snapshot was already seen in a more recent state through the notifications.
  *   `removalTimestampUs` (*type:* `String.t`, *default:* `nil`) - The timestamp (in microseconds since the UNIX epoch) of the deletion time of the feature. If the feature is currently removed, this field gets populated with the timestamp the feature first became removed after being live (or being removed from beginning). This field won't be set if the feature is live.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :featureBirthTimestampUs => String.t() | nil,
          :lastModificationTimestampUs => String.t() | nil,
          :removalTimestampUs => String.t() | nil
        }

  field(:featureBirthTimestampUs)
  field(:lastModificationTimestampUs)
  field(:removalTimestampUs)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureHistoryMetadataProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureHistoryMetadataProto.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureHistoryMetadataProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
