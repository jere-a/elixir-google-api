# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.EmbedsProvenance do
  @moduledoc """
  This field records where the ItemScope was retrieved, if it was created via a web fetch.

  ## Attributes

  *   `annotationBlob` (*type:* `String.t`, *default:* `nil`) - Annotation blob from Annotation Service.
  *   `canonicalUrl` (*type:* `String.t`, *default:* `nil`) - Canonical url of the retrieved_url, if one was resolved during retrieval, for example, if a rel="canonical" link tag was provided in the retrieved web page.
  *   `inputUrl` (*type:* `String.t`, *default:* `nil`) - The url originally passed in the PRS request, which should be used to re-discover the content. Note that this URL may be a forwarding service or link shortener (bit.ly), so it should not be assumed to be canonical, but should be used for navigation back to the original source of the itemscope.
  *   `itemtype` (*type:* `list(String.t)`, *default:* `nil`) - Contains exact types as parsed, whether or not we recognized that type at parse time. If an itemscope is created by merging SchemaOrg markup and open graph markup then the first itemtype would be schemaorg type, the second would be open graph and so on. example: http://schema.org/VideoObject, og:video.movie Plain text; usually a URL
  *   `retrievedTimestampMsec` (*type:* `String.t`, *default:* `nil`) - The server retrieved timestamp (in msec).
  *   `retrievedUrl` (*type:* `String.t`, *default:* `nil`) - The final URL that was the actual source of the itemscope, after any redirects.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotationBlob => String.t() | nil,
          :canonicalUrl => String.t() | nil,
          :inputUrl => String.t() | nil,
          :itemtype => list(String.t()) | nil,
          :retrievedTimestampMsec => String.t() | nil,
          :retrievedUrl => String.t() | nil
        }

  field(:annotationBlob)
  field(:canonicalUrl)
  field(:inputUrl)
  field(:itemtype, type: :list)
  field(:retrievedTimestampMsec)
  field(:retrievedUrl)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.EmbedsProvenance do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.EmbedsProvenance.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.EmbedsProvenance do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
