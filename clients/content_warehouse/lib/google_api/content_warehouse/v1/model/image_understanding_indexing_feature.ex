# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageUnderstandingIndexingFeature do
  @moduledoc """
  Image feature embedding proto. It supports various embedding formats: raw bytes, floating point values, and tokens.

  ## Attributes

  *   `bytesValue` (*type:* `String.t`, *default:* `nil`) - Multiple fields can be set. For example for Starburst V3, they can be used to store compressed byte, raw float feature, and tokens, respectively.
  *   `floatValue` (*type:* `list(number())`, *default:* `nil`) - 
  *   `imageTemplate` (*type:* `GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplate.t`, *default:* `nil`) - Local features.
  *   `int32Value` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `version` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bytesValue => String.t() | nil,
          :floatValue => list(number()) | nil,
          :imageTemplate =>
            GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplate.t() | nil,
          :int32Value => list(integer()) | nil,
          :version => String.t() | nil
        }

  field(:bytesValue)
  field(:floatValue, type: :list)

  field(:imageTemplate, as: GoogleApi.ContentWarehouse.V1.Model.PhotosVisionObjectrecImageTemplate)

  field(:int32Value, type: :list)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageUnderstandingIndexingFeature do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageUnderstandingIndexingFeature.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageUnderstandingIndexingFeature do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
