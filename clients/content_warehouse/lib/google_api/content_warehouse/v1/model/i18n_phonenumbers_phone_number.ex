# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.I18nPhonenumbersPhoneNumber do
  @moduledoc """
  The PhoneNumber object that is used by all LibPhoneNumber API's to fully represent a phone number.

  ## Attributes

  *   `countryCode` (*type:* `integer()`, *default:* `nil`) - The country calling code for this number, as defined by the International Telecommunication Union (ITU). For example, this would be 1 for NANPA countries, and 33 for France.
  *   `countryCodeSource` (*type:* `String.t`, *default:* `nil`) - The source from which the country_code is derived.
  *   `extension` (*type:* `String.t`, *default:* `nil`) - Extension is not standardized in ITU recommendations, except for being defined as a series of numbers with a maximum length of 40 digits. It is defined as a string here to accommodate for the possible use of a leading zero in the extension (organizations have complete freedom to do so, as there is no standard defined). Other than digits, some other dialling characters such as "," (indicating a wait) may be stored here.
  *   `italianLeadingZero` (*type:* `boolean()`, *default:* `nil`) - In some countries, the national (significant) number starts with one or more "0"s without this being a national prefix or trunk code of some kind. For example, the leading zero in the national (significant) number of an Italian phone number indicates the number is a fixed-line number. There have been plans to migrate fixed-line numbers to start with the digit two since December 2000, but it has not happened yet. See http://en.wikipedia.org/wiki/%2B39 for more details. These fields can be safely ignored (there is no need to set them) for most countries. Some limited number of countries behave like Italy - for these cases, if the leading zero(s) of a number would be retained even when dialling internationally, set this flag to true, and also set the number of leading zeros. Clients who use the parsing or conversion functionality of the i18n phone number libraries (go/phonenumbers) will have these fields set if necessary automatically.
  *   `nationalNumber` (*type:* `String.t`, *default:* `nil`) - The National (significant) Number, as defined in International Telecommunication Union (ITU) Recommendation E.164, without any leading zero. The leading-zero is stored separately if required, since this is an uint64 and hence cannot store such information. Do not use this field directly: if you want the national significant number, call the getNationalSignificantNumber method of PhoneNumberUtil. For countries which have the concept of an "area code" or "national destination code", this is included in the National (significant) Number. Although the ITU says the maximum length should be 15, we have found longer numbers in some countries e.g. Germany. Note that the National (significant) Number does not contain the National (trunk) prefix. Obviously, as a uint64, it will never contain any formatting (hyphens, spaces, parentheses), nor any alphanumeric spellings.
  *   `numberOfLeadingZeros` (*type:* `integer()`, *default:* `nil`) - Full description of this field in the comment for italian_leading_zero since this field will only be set when italian_leading_zero is true.
  *   `preferredDomesticCarrierCode` (*type:* `String.t`, *default:* `nil`) - The carrier selection code that is preferred when calling this phone number domestically. This also includes codes that need to be dialed in some countries when calling from landlines to mobiles or vice versa. For example, in Columbia, a "3" needs to be dialed before the phone number itself when calling from a mobile phone to a domestic landline phone and vice versa. Note this is the "preferred" code, which means other codes may work as well.
  *   `rawInput` (*type:* `String.t`, *default:* `nil`) - This field is used to store the raw input string containing phone numbers before it was canonicalized by the library. For example, it could be used to store alphanumerical numbers such as "1-800-GOOG-411".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :countryCode => integer() | nil,
          :countryCodeSource => String.t() | nil,
          :extension => String.t() | nil,
          :italianLeadingZero => boolean() | nil,
          :nationalNumber => String.t() | nil,
          :numberOfLeadingZeros => integer() | nil,
          :preferredDomesticCarrierCode => String.t() | nil,
          :rawInput => String.t() | nil
        }

  field(:countryCode)
  field(:countryCodeSource)
  field(:extension)
  field(:italianLeadingZero)
  field(:nationalNumber)
  field(:numberOfLeadingZeros)
  field(:preferredDomesticCarrierCode)
  field(:rawInput)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.I18nPhonenumbersPhoneNumber do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.I18nPhonenumbersPhoneNumber.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.I18nPhonenumbersPhoneNumber do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
