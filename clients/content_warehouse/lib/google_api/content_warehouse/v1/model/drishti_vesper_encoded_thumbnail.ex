# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperEncodedThumbnail do
  @moduledoc """
  The attributes of encoded thumbnail images. Next id: 10.

  ## Attributes

  *   `byteSize` (*type:* `String.t`, *default:* `nil`) - Image size in bytes. Meaningful when contents are not stored inline (e.g., via `image_blob_id`).
  *   `crc32c` (*type:* `integer()`, *default:* `nil`) - CRC-32 checksum of the image bytes. Can be used for data integrity check.
  *   `encodingQuality` (*type:* `integer()`, *default:* `nil`) - JPEG/WEBP quality factor in range [0,100].
  *   `encodingType` (*type:* `String.t`, *default:* `nil`) - Image encoding type.
  *   `height` (*type:* `integer()`, *default:* `nil`) - 
  *   `imageBlobId` (*type:* `String.t`, *default:* `nil`) - The Blob ID of the thumbnail image in the Blobstore. We recommend absolute IDs with universe prefix if this field is passed across systems. The owner of this blob is also responsible for data Wipeout compliance.
  *   `imageBytes` (*type:* `String.t`, *default:* `nil`) - Encoded thumbnail bytes. Prefer this over `image_string` as we are not supposed to store image bytes in a proto string field.
  *   `imageString` (*type:* `String.t`, *default:* `nil`) - Please migrate to `image_bytes`.
  *   `width` (*type:* `integer()`, *default:* `nil`) - Thumbnail resolution.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :byteSize => String.t() | nil,
          :crc32c => integer() | nil,
          :encodingQuality => integer() | nil,
          :encodingType => String.t() | nil,
          :height => integer() | nil,
          :imageBlobId => String.t() | nil,
          :imageBytes => String.t() | nil,
          :imageString => String.t() | nil,
          :width => integer() | nil
        }

  field(:byteSize)
  field(:crc32c)
  field(:encodingQuality)
  field(:encodingType)
  field(:height)
  field(:imageBlobId)
  field(:imageBytes)
  field(:imageString)
  field(:width)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperEncodedThumbnail do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperEncodedThumbnail.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperEncodedThumbnail do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
