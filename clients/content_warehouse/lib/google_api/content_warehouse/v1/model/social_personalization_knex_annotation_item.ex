# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.SocialPersonalizationKnexAnnotationItem do
  @moduledoc """
  Next Tag: 8

  ## Attributes

  *   `confidence` (*type:* `number()`, *default:* `nil`) - 
  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the item for debugging. Note that this field is populated only in a few select places.
  *   `equivalentMid` (*type:* `String.t`, *default:* `nil`) - If this field exists, then there exists a commonly used MID (typically a public MID, i.e., one in /m/) that approximates the meaning for this particular k'nex topic. For example, the value of this field for k'nex topic Tennis (/t/236) is /m/07bs0. The difference between k'nex /m/07bs0 and webref /m/07bs0 is as follows. If a content is annotated with webref /m/07bs0, then the content has to explicitly mention "Tennis" in some way, whereas if a content is annotated with k'nex /m/07bs0, then the content simply needs to talk about stuff related to tennis. Note that this field is not populated for all queries. For example, the compound concept "Tennis in California" does not have an associated mid. This field is intended to help external clients transit to k'nex.
  *   `generality` (*type:* `number()`, *default:* `nil`) - A score that measures how broad / narrow a topic is, independent of the document and/or user profile. This is an experimental score and is not populated by default. Currently, it is in the range of [0, 1], where the higher the score is, the more general a topic is. Please talk to sherlock-dev@ before using this score. Populated when debug_level > 0.
  *   `mid` (*type:* `String.t`, *default:* `nil`) - This is an MID in the /t/ namespace. We will migrate them to /g/ in Q3'15.
  *   `relatedEntity` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.SocialPersonalizationKnexAnnotationItemTopic.t)`, *default:* `nil`) - 
  *   `topicality` (*type:* `number()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :confidence => number() | nil,
          :description => String.t() | nil,
          :equivalentMid => String.t() | nil,
          :generality => number() | nil,
          :mid => String.t() | nil,
          :relatedEntity =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.SocialPersonalizationKnexAnnotationItemTopic.t()
            )
            | nil,
          :topicality => number() | nil
        }

  field(:confidence)
  field(:description)
  field(:equivalentMid)
  field(:generality)
  field(:mid)

  field(:relatedEntity,
    as: GoogleApi.ContentWarehouse.V1.Model.SocialPersonalizationKnexAnnotationItemTopic,
    type: :list
  )

  field(:topicality)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SocialPersonalizationKnexAnnotationItem do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.SocialPersonalizationKnexAnnotationItem.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SocialPersonalizationKnexAnnotationItem do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
