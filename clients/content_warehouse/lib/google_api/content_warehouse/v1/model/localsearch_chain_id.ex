# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId do
  @moduledoc """
  An unique identification of a chain. The following are the possible chain id forms: 1) prominent_entity_id only: The entity uniquely represents a chain, which may have multiple sitechunks. 2) sitechunk only: The sitechunk uniquely represents a chain while the chain currently does not have an entity in KG. 3) prominent_entity_id + sitechunk: The chain could be represented by the entity, but not merged at last, and the sitechunks represents the chain better. 4) prominent_entity_id + category: There are multiple subchains for the prominent entity, and category is used to differentiate subchains. NOTE: the size and complexity of the ChainId proto has implications in the serving system and should be thoughtfully kept under control.

  ## Attributes

  *   `category` (*type:* `String.t`, *default:* `nil`) - The category associated with this chain, currently only used for subchains.
  *   `prominentEntityId` (*type:* `String.t`, *default:* `nil`) - The Knowledge Graph (KG) entity of the chain, found and used in chain mining.
  *   `sitechunk` (*type:* `String.t`, *default:* `nil`) - The website sitechunk/domain that is owned by the chain.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :category => String.t() | nil,
          :prominentEntityId => String.t() | nil,
          :sitechunk => String.t() | nil
        }

  field(:category)
  field(:prominentEntityId)
  field(:sitechunk)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.LocalsearchChainId do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
