# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.SentenceBoundaryAnnotationsInstance do
  @moduledoc """


  ## Attributes

  *   `begin` (*type:* `integer()`, *default:* `nil`) - 
  *   `cleanText` (*type:* `String.t`, *default:* `nil`) - A clean version of .text() generated by using CleanText() and stripping unnecessary whitespace.
  *   `context` (*type:* `String.t`, *default:* `nil`) - Plain text context from the page within which the annotation occurred.
  *   `contextBegin` (*type:* `integer()`, *default:* `nil`) - Byte offsets for the clean text context above.
  *   `contextEnd` (*type:* `integer()`, *default:* `nil`) - 
  *   `end` (*type:* `integer()`, *default:* `nil`) - 
  *   `info` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Used for application-specific information about this annotation.
  *   `text` (*type:* `String.t`, *default:* `nil`) - Original UTF-8 document text occurring in the range [begin, end).
  *   `toIndex` (*type:* `boolean()`, *default:* `nil`) - Used to mark the annotations selected to be indexed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :begin => integer() | nil,
          :cleanText => String.t() | nil,
          :context => String.t() | nil,
          :contextBegin => integer() | nil,
          :contextEnd => integer() | nil,
          :end => integer() | nil,
          :info => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :text => String.t() | nil,
          :toIndex => boolean() | nil
        }

  field(:begin)
  field(:cleanText)
  field(:context)
  field(:contextBegin)
  field(:contextEnd)
  field(:end)
  field(:info, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:text)
  field(:toIndex)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SentenceBoundaryAnnotationsInstance do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.SentenceBoundaryAnnotationsInstance.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SentenceBoundaryAnnotationsInstance do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
