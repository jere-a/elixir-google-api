# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponseTidbit do
  @moduledoc """


  ## Attributes

  *   `anchorinfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponseTidbitAnchorInfo.t`, *default:* `nil`) - 
  *   `begin` (*type:* `integer()`, *default:* `nil`) - For tidbits only: position of tidbit in the document. More specifically, tidbit is found at [begin, end) in the document's tokens.
  *   `end` (*type:* `integer()`, *default:* `nil`) - 
  *   `items` (*type:* `String.t`, *default:* `nil`) - a bitvector of each query term within this tidbit
  *   `score` (*type:* `number()`, *default:* `nil`) - the score for this tidbit if there was one this is returned for Snippets and Tidbits and is only meaningful for comparing between objects of the same type (snippet to snippet, tidbit to tidbit)
  *   `text` (*type:* `String.t`, *default:* `nil`) - the tidbit text, with search terms already highlighted
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :anchorinfo =>
            GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponseTidbitAnchorInfo.t() | nil,
          :begin => integer() | nil,
          :end => integer() | nil,
          :items => String.t() | nil,
          :score => number() | nil,
          :text => String.t() | nil,
          :type => String.t() | nil
        }

  field(:anchorinfo,
    as: GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponseTidbitAnchorInfo
  )

  field(:begin)
  field(:end)
  field(:items)
  field(:score)
  field(:text)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponseTidbit do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponseTidbit.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ExtraSnippetInfoResponseTidbit do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
