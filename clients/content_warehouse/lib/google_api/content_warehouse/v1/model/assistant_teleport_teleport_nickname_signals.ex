# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals do
  @moduledoc """


  ## Attributes

  *   `hasLocationInterpretation` (*type:* `boolean()`, *default:* `nil`) - Whether the nickname could also refer to a location. For example, "walmart", "starbucks".
  *   `installInfo` (*type:* `String.t`, *default:* `nil`) - Indicates whether the user has the app installed.
  *   `isGeneric` (*type:* `boolean()`, *default:* `nil`) - True when the name is generic, i.e when it could refer to multiple packages from different developrs. For example, "mail" is considered a generic name (since it can refer to "gmail", "yahoo mail" etc.) but "facebook" although could refer to both "facebook" and "facebook lite" is not considered generic (both packages are from the same third party).
  *   `nicknameTier` (*type:* `String.t`, *default:* `nil`) - The tier of the nickname.
  *   `source` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hasLocationInterpretation => boolean() | nil,
          :installInfo => String.t() | nil,
          :isGeneric => boolean() | nil,
          :nicknameTier => String.t() | nil,
          :source => String.t() | nil
        }

  field(:hasLocationInterpretation)
  field(:installInfo)
  field(:isGeneric)
  field(:nicknameTier)
  field(:source)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
