# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamRestrictDefinition do
  @moduledoc """
  ////////////////////////////////////////////////////////////////////////////// RestrictDefinition: the set of conjunctions and disjunctions that define a single OR-of-ANDs-of-ORs restrict definition.

  ## Attributes

  *   `conjunctions` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamConjunction.t)`, *default:* `nil`) - conjunctions - each conjunction is an AND-of-ORs; if any of these conjunctions match, then the entire restrict matches.
  *   `disjunctions` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamDisjunction.t)`, *default:* `nil`) - disjunctions - each disjunction is an OR clause.
  *   `subsKey` (*type:* `String.t`, *default:* `nil`) - subs_key - ignore. Only used for testing.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :conjunctions =>
            list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamConjunction.t()) | nil,
          :disjunctions =>
            list(GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamDisjunction.t()) | nil,
          :subsKey => String.t() | nil
        }

  field(:conjunctions,
    as: GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamConjunction,
    type: :list
  )

  field(:disjunctions,
    as: GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamDisjunction,
    type: :list
  )

  field(:subsKey)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamRestrictDefinition do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamRestrictDefinition.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ResearchScamCoscamRestrictDefinition do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
