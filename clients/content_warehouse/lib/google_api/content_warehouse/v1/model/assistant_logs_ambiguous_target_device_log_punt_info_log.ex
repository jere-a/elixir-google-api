# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog do
  @moduledoc """
  PuntInfoLog is used to log why devices get filtered out during media content playability check. It contains media excuse, provider mid and also index of devices filtered by them.

  ## Attributes

  *   `deviceIndex` (*type:* `list(integer())`, *default:* `nil`) - Index of devices that have the same punt info during playability check, i.e. same media_excuse and provider_mid.
  *   `mediaExcuse` (*type:* `integer()`, *default:* `nil`) - Excuse for media action triggering. See: assistant/verticals/media/proto/media_excuse.proto.
  *   `providerMid` (*type:* `String.t`, *default:* `nil`) - Provider id that the excuse belongs to. This is the KG MID of the provider, e.g., "/m/09jcvs" for Youtube.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceIndex => list(integer()) | nil,
          :mediaExcuse => integer() | nil,
          :providerMid => String.t() | nil
        }

  field(:deviceIndex, type: :list)
  field(:mediaExcuse)
  field(:providerMid)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantLogsAmbiguousTargetDeviceLogPuntInfoLog do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
