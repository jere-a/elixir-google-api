# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoPreviewsVideoPreview do
  @moduledoc """


  ## Attributes

  *   `content` (*type:* `String.t`, *default:* `nil`) - The actual video preview bytes generated for the video.
  *   `debuggingInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoPreviewsDebuggingInfo.t`, *default:* `nil`) - Used for debugging only.
  *   `metadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ImageBaseVideoPreviewMetadata.t`, *default:* `nil`) - The metadata associated with the preview (i.e. the type: 8k, 90k, etc.)
  *   `previewFrameZero` (*type:* `GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperVideoThumbnail.t`, *default:* `nil`) - 0th frame image of the preview. This frame has the same resolution as the associated preview video bytes, as it is taken directly from the preview bytes in Venom/Viper processing. Right now, we only populate preview_frame_zero only for the VPREVIEW_TYPE_540K_ORIGINAL_HQ_LICENSED preview type. Note that preview_frame_zero.thumbnails(0).timestamp_ms() is the timestamp from the full video, not from the preview.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :content => String.t() | nil,
          :debuggingInfo =>
            GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoPreviewsDebuggingInfo.t()
            | nil,
          :metadata =>
            GoogleApi.ContentWarehouse.V1.Model.ImageBaseVideoPreviewMetadata.t() | nil,
          :previewFrameZero =>
            GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperVideoThumbnail.t() | nil
        }

  field(:content)

  field(:debuggingInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoPreviewsDebuggingInfo
  )

  field(:metadata, as: GoogleApi.ContentWarehouse.V1.Model.ImageBaseVideoPreviewMetadata)
  field(:previewFrameZero, as: GoogleApi.ContentWarehouse.V1.Model.DrishtiVesperVideoThumbnail)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoPreviewsVideoPreview do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoPreviewsVideoPreview.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVideoPreviewsVideoPreview do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
