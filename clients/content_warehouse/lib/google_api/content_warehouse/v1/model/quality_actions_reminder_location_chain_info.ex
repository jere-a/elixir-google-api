# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationChainInfo do
  @moduledoc """
  If LocationType is CHAIN, this is info about the chain.

  ## Attributes

  *   `chainMid` (*type:* `String.t`, *default:* `nil`) - The freebase mid of the chain entity.
  *   `chainName` (*type:* `String.t`, *default:* `nil`) - The geostore.NameProto.text (corresponding to the user's language) at the time of reminder creation. In most cases, this is the same as name, but there may be corner cases where they differ, e.g. name: "bestbuy", chain_name: "Best Buy".
  *   `featureId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t`, *default:* `nil`) - The (corporate entity) chain's MapFacts feature id.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :chainMid => String.t() | nil,
          :chainName => String.t() | nil,
          :featureId => GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t() | nil
        }

  field(:chainMid)
  field(:chainName)
  field(:featureId, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationChainInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationChainInfo.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsReminderLocationChainInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
