# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketData do
  @moduledoc """
  ============================ Next Tag: 22 ============================ Data about the scheduling host bucket a URL was in (if the client wants to use this, e.g. for more intelligent scheduling, etc).

  ## Attributes

  *   `ClientTrafficFraction` (*type:* `number()`, *default:* `nil`) - How much existing traffic
  *   `ClientWeightFraction` (*type:* `number()`, *default:* `nil`) - belong to the client How much weight the client
  *   `CurrentActiveConnections` (*type:* `integer()`, *default:* `nil`) - How many connections are actively used for downloading ?
  *   `IsFull` (*type:* `boolean()`, *default:* `nil`) - Is this bucket currently full ?
  *   `LastScheduleIntervalMs` (*type:* `String.t`, *default:* `nil`) - How many ms ago we last scheduled a url
  *   `MaxActiveConnections` (*type:* `number()`, *default:* `nil`) - The current hostload value (# of connections) - if negative does not apply
  *   `MediumTermLoad` (*type:* `number()`, *default:* `nil`) - The load the recent times (the actual hostload that we apply is MaxActiveConnections / MediumTermLoad) - a hostload of 1.00 is normal, while over 1.0 is higher than normal load
  *   `MinInterRequestSecs` (*type:* `number()`, *default:* `nil`) - The min delay between requests (in secs) - if negative does not apply
  *   `NonFullIntervalMs` (*type:* `String.t`, *default:* `nil`) - If is full, when is becoming non-full (in ms)
  *   `TotalCapacityQps` (*type:* `number()`, *default:* `nil`) - The following four fields attempt to make things simpler for clients to estimate available capacity. They are not populated yet as of 2013/08/21. Even after they are populated, they may change. So talk to trawler-dev@ before you use the fields. Total qps for this hostid
  *   `TotalUsedQps` (*type:* `number()`, *default:* `nil`) - Currently used qps
  *   `urllist` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketDataUrlList.t)`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ClientTrafficFraction => number() | nil,
          :ClientWeightFraction => number() | nil,
          :CurrentActiveConnections => integer() | nil,
          :IsFull => boolean() | nil,
          :LastScheduleIntervalMs => String.t() | nil,
          :MaxActiveConnections => number() | nil,
          :MediumTermLoad => number() | nil,
          :MinInterRequestSecs => number() | nil,
          :NonFullIntervalMs => String.t() | nil,
          :TotalCapacityQps => number() | nil,
          :TotalUsedQps => number() | nil,
          :urllist =>
            list(GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketDataUrlList.t()) | nil
        }

  field(:ClientTrafficFraction)
  field(:ClientWeightFraction)
  field(:CurrentActiveConnections)
  field(:IsFull)
  field(:LastScheduleIntervalMs)
  field(:MaxActiveConnections)
  field(:MediumTermLoad)
  field(:MinInterRequestSecs)
  field(:NonFullIntervalMs)
  field(:TotalCapacityQps)
  field(:TotalUsedQps)

  field(:urllist,
    as: GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketDataUrlList,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerHostBucketData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
