# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTriple do
  @moduledoc """
  A Triple is a representation of data with a Subject, a Predicate, and an Object, For example: (Triple, IS-A, "data representation"). Triples are a very good representation of data where the relationship between data points is significant, because the Object of a Triple can be the Subject of another Triple: (Triple, HAS-A, Subject) (Subject, IS-A, "Term of a proposition") The ease with which Triples can represent relationships makes them an excellent candidate for representing graphs. Next id: 21

  ## Attributes

  *   `isNegation` (*type:* `boolean()`, *default:* `nil`) - If is_negation is set to true then this triple is considered a statement that the fact is false. This allows for the storage of both what we know to be true and what we know to be false.
  *   `obj` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTripleObj.t`, *default:* `nil`) - obj is the value of a relationship.
  *   `pred` (*type:* `String.t`, *default:* `nil`) - pred is an arbitrary node id representing the predicate (name) of a graph relationship.
  *   `provenance` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTripleProvenance.t)`, *default:* `nil`) - 
  *   `qualifierSets` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphQualifierSet.t)`, *default:* `nil`) - WARNING: This is currently defined for experimentation purposes only. Please do not set. Data set in this field will not be published to any systems downstream of Livegraph. Together with the SPO of this triple, each qualifier set here represents a different logical assertion/fact.
  *   `sub` (*type:* `String.t`, *default:* `nil`) - sub is an arbitrary node id representing the source entity of a graph relationship.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isNegation => boolean() | nil,
          :obj => GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTripleObj.t() | nil,
          :pred => String.t() | nil,
          :provenance =>
            list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTripleProvenance.t()) | nil,
          :qualifierSets =>
            list(GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphQualifierSet.t()) | nil,
          :sub => String.t() | nil
        }

  field(:isNegation)
  field(:obj, as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTripleObj)
  field(:pred)

  field(:provenance,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTripleProvenance,
    type: :list
  )

  field(:qualifierSets,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphQualifierSet,
    type: :list
  )

  field(:sub)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTriple do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTriple.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeGraphTriple do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
