# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchLocation do
  @moduledoc """
  Describes the spatial information about a value in spatial-coverage definition of a dataset. Next ID: 9

  ## Attributes

  *   `boxCoordinates` (*type:* `String.t`, *default:* `nil`) - Coordinates of the corners of the polygon in the form "lat1 long1 lat2 long2"
  *   `circleCoordinates` (*type:* `String.t`, *default:* `nil`) - Coordinates for the circle area defined by its center and radius: "lat long, radius"
  *   `containedInMid` (*type:* `list(String.t)`, *default:* `nil`) - mids for locations that contain loctions in .
  *   `locationMid` (*type:* `list(String.t)`, *default:* `nil`) - mids for locations covering the dataset, contained in the . A region may contain multiple locations that are identified by mids.
  *   `locationMidLabel` (*type:* `list(String.t)`, *default:* `nil`) - Labels (in the preferred language of the dataset) for the mids in .
  *   `locationName` (*type:* `String.t`, *default:* `nil`) - The original name for the area covered by the dataset.
  *   `locationSource` (*type:* `String.t`, *default:* `nil`) - 
  *   `pointCoordinates` (*type:* `String.t`, *default:* `nil`) - Latitude and longitude for a single point in the form of "lat,long".
  *   `unformattedCoordinates` (*type:* `String.t`, *default:* `nil`) - Unformatted coordinates describing the region.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boxCoordinates => String.t() | nil,
          :circleCoordinates => String.t() | nil,
          :containedInMid => list(String.t()) | nil,
          :locationMid => list(String.t()) | nil,
          :locationMidLabel => list(String.t()) | nil,
          :locationName => String.t() | nil,
          :locationSource => String.t() | nil,
          :pointCoordinates => String.t() | nil,
          :unformattedCoordinates => String.t() | nil
        }

  field(:boxCoordinates)
  field(:circleCoordinates)
  field(:containedInMid, type: :list)
  field(:locationMid, type: :list)
  field(:locationMidLabel, type: :list)
  field(:locationName)
  field(:locationSource)
  field(:pointCoordinates)
  field(:unformattedCoordinates)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchLocation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScienceSearchLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
