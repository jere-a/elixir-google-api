# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageContentStarburstVersionGroup do
  @moduledoc """


  ## Attributes

  *   `descriptorFloat` (*type:* `list(number())`, *default:* `nil`) - Raw dense float feature vector.
  *   `descriptorFloatBeforeProjection` (*type:* `list(number())`, *default:* `nil`) - Raw dense float feature vector prior to embedding. Only for Starburst V6.
  *   `descriptorShort` (*type:* `String.t`, *default:* `nil`) - Short descriptor for image content features, e.g. compressed bytes. This is the compressed version of descriptor_float below. It can be can be decompressed to descriptor_float with a tiny bit of compression error (in most cases it should be totally fine).
  *   `enumVersion` (*type:* `String.t`, *default:* `nil`) - 
  *   `minorVersion` (*type:* `String.t`, *default:* `nil`) - 
  *   `starburstTokens` (*type:* `list(integer())`, *default:* `nil`) - Starburst tokens.
  *   `starburstTokensDistances` (*type:* `list(number())`, *default:* `nil`) - Squared distance of the current embedding to each cluster center. Elements are aligned with starburst_tokens.
  *   `version` (*type:* `integer()`, *default:* `nil`) - The following integers are currently used: Starburst V1: 1 Starburst V2: 2 Starburst V3: 3 Starburst V4: 4 Starburst Visual V4: 1004 This field is deprecated. Please try to use the 'enum_version' in future.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :descriptorFloat => list(number()) | nil,
          :descriptorFloatBeforeProjection => list(number()) | nil,
          :descriptorShort => String.t() | nil,
          :enumVersion => String.t() | nil,
          :minorVersion => String.t() | nil,
          :starburstTokens => list(integer()) | nil,
          :starburstTokensDistances => list(number()) | nil,
          :version => integer() | nil
        }

  field(:descriptorFloat, type: :list)
  field(:descriptorFloatBeforeProjection, type: :list)
  field(:descriptorShort)
  field(:enumVersion)
  field(:minorVersion)
  field(:starburstTokens, type: :list)
  field(:starburstTokensDistances, type: :list)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageContentStarburstVersionGroup do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageContentStarburstVersionGroup.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageContentStarburstVersionGroup do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
