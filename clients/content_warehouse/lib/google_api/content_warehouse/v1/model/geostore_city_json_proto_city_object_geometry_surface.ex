# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySurface do
  @moduledoc """
  A polygonal surface, composed of a closed exterior loop with optional closed interior loops.

  ## Attributes

  *   `loops` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiPoint.t)`, *default:* `nil`) - The first loop is exterior; any additional are interior.
  *   `materialSpecs` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMaterialSpec.t)`, *default:* `nil`) - The materials this surface is made of. Either all or none of the Surface protos must have this field set (even for 'null' references). Otherwise, this field must not be set. IMPORTANT: This field must not contain more than one MaterialSpec unless CityJSON's material "theme" is incorporated into CityJsonProto (see discussion in go/cityjson-for-hand-modeled-landmarks).
  *   `semanticsIndex` (*type:* `integer()`, *default:* `nil`) - The semantics of this surface (e.g. what part of a building it is) represented as an index into the containing Geometry's `semantics` field. Either all or none of the Surface protos must have this field set (even for 'null' references). Otherwise, this field must not be set.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :loops =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiPoint.t()
            )
            | nil,
          :materialSpecs =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMaterialSpec.t()
            )
            | nil,
          :semanticsIndex => integer() | nil
        }

  field(:loops,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiPoint,
    type: :list
  )

  field(:materialSpecs,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMaterialSpec,
    type: :list
  )

  field(:semanticsIndex)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySurface do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySurface.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySurface do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
