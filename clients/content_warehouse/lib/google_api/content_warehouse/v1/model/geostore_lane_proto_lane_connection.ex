# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreLaneProtoLaneConnection do
  @moduledoc """


  ## Attributes

  *   `boundingMarker` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreBoundingMarkerProto.t)`, *default:* `nil`) - References to any gcid:physical_lane_marker features that bound this lane connection.
  *   `connectionToken` (*type:* `String.t`, *default:* `nil`) - A token that can be used to identify the version of the data about this lane connection.
  *   `curve` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreCurveConnectionProto.t`, *default:* `nil`) - Specifies how the flowline should be synthesized in this connection region. If unspecified, heuristics may be used to pick a sweep shape based on retraction values or neighboring curves.
  *   `flow` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFlowLineProto.t`, *default:* `nil`) - The most logical path for the center of an object to travel along within the lane connection. Typically, this is the lane connection's center line, but doesn't have to be.
  *   `laneNumber` (*type:* `integer()`, *default:* `nil`) - This is the lane number on the target segment. This field is not set if the target segment doesn't have lanes, or we don't know the exact connectivity.
  *   `primaryConnection` (*type:* `boolean()`, *default:* `nil`) - True if this connects to the unique, natural continuation of the current lane. At most one LaneConnection per lane can have this field set true. This attribute is of interest to ADAS providers as a hint to which lane a vehicle is likely to follow, in the absence of other information about the vehicle's planned path.
  *   `segment` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t`, *default:* `nil`) - This reference to the other segment is weak, since strong would blow up bounds of all segments.
  *   `yieldToOtherConnections` (*type:* `boolean()`, *default:* `nil`) - The inverse of the primary connection bit that provides a hint that this connection is part of a merge and a vehicle following this connection should yield to vehicles following other incoming connections.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boundingMarker =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreBoundingMarkerProto.t()) | nil,
          :connectionToken => String.t() | nil,
          :curve => GoogleApi.ContentWarehouse.V1.Model.GeostoreCurveConnectionProto.t() | nil,
          :flow => GoogleApi.ContentWarehouse.V1.Model.GeostoreFlowLineProto.t() | nil,
          :laneNumber => integer() | nil,
          :primaryConnection => boolean() | nil,
          :segment => GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t() | nil,
          :yieldToOtherConnections => boolean() | nil
        }

  field(:boundingMarker,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreBoundingMarkerProto,
    type: :list
  )

  field(:connectionToken)
  field(:curve, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCurveConnectionProto)
  field(:flow, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFlowLineProto)
  field(:laneNumber)
  field(:primaryConnection)
  field(:segment, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto)
  field(:yieldToOtherConnections)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreLaneProtoLaneConnection do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreLaneProtoLaneConnection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreLaneProtoLaneConnection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
