# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreOperationsProto do
  @moduledoc """
  Information about a feature's operations, e.g. when the feature is temporarily closed.

  ## Attributes

  *   `temporaryClosure` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTemporaryClosureProto.t)`, *default:* `nil`) - Records temporary status changes of the feature, such as remodel, vacation, etc.: the feature is temporarily (but not permanently) unavailable. See go/geo-schema-reference:operational-lifecycle#temporary-closure for guidance on interpreting this data and constraints on writing it. NOTE: Order of the TemporaryClosureProtos is *not* guaranteed to be chronological.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :temporaryClosure =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreTemporaryClosureProto.t()) | nil
        }

  field(:temporaryClosure,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreTemporaryClosureProto,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreOperationsProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreOperationsProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreOperationsProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
