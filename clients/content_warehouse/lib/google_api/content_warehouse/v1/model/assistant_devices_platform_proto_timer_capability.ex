# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTimerCapability do
  @moduledoc """
  Capability with regard to support of timers by the client.

  ## Attributes

  *   `maxSupportedExtendedTimerDuration` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t`, *default:* `nil`) - Maximum extended timer duration supported by the client. The extended timer duration is the total start-to-finish duration after an AddTimeToTimer operation. E.g. if a user sets a timer for 30 minutes, and later adds 10 minutes, the extended duration is 40 minutes. Zero or unset indicates no maximum limit.
  *   `maxSupportedTimerDuration` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t`, *default:* `nil`) - Maximum timer duration supported by the client. Zero or unset indicates no maximum limit.
  *   `maxSupportedTimers` (*type:* `integer()`, *default:* `nil`) - Maximum number of timers that can be created on the client. Zero or unset indicates no maximum limit.
  *   `supportsMutateAction` (*type:* `boolean()`, *default:* `nil`) - Whether the client supports the MUTATE timer action. If this is false, mutate operations may be handled by sending a pair of REMOVE and CREATE timer actions to replace the existing timer instead of mutating it.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxSupportedExtendedTimerDuration =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t() | nil,
          :maxSupportedTimerDuration =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration.t() | nil,
          :maxSupportedTimers => integer() | nil,
          :supportsMutateAction => boolean() | nil
        }

  field(:maxSupportedExtendedTimerDuration,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration
  )

  field(:maxSupportedTimerDuration, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiDuration)
  field(:maxSupportedTimers)
  field(:supportsMutateAction)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTimerCapability do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTimerCapability.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTimerCapability do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
