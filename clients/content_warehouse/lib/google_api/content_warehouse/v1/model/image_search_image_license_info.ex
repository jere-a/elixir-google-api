# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageLicenseInfo do
  @moduledoc """
  The image license info for licensable images(go/Licensable-Images-PRD) This proto in design doc: go/licensable-images-edd

  ## Attributes

  *   `acquireLicensePage` (*type:* `String.t`, *default:* `nil`) - Records web page url about how to use the licensed image.
  *   `copyrightNotice` (*type:* `String.t`, *default:* `nil`) - Provides copyright info.
  *   `copyrightNoticeSourceType` (*type:* `String.t`, *default:* `nil`) - Source type for copyright_notice field.
  *   `creator` (*type:* `list(String.t)`, *default:* `nil`) - creator, authors.
  *   `creatorSourceType` (*type:* `String.t`, *default:* `nil`) - Source type for creator field.
  *   `creditText` (*type:* `String.t`, *default:* `nil`) - Text for crediting persons or organizations.
  *   `creditTextSourceType` (*type:* `String.t`, *default:* `nil`) - Source type for credit_text field.
  *   `isRetiredCcUrl` (*type:* `boolean()`, *default:* `nil`) - Whether this license url is in retired license list, which is from: https://creativecommons.org/retiredlicenses/
  *   `licenseType` (*type:* `String.t`, *default:* `nil`) - 
  *   `licenseUrl` (*type:* `String.t`, *default:* `nil`) - Records license URL.
  *   `safesearchFlags` (*type:* `integer()`, *default:* `nil`) - A bitwise-OR of SafeSearch filtering flags. If present, the flags will be a bitwise-AND between this value and all the classifier_porn::query::Vertical enums. If the value is -1, it indicates there is some error with SafeSearch classifier. The default value 0 means no filtering flags are set.
  *   `sourceType` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :acquireLicensePage => String.t() | nil,
          :copyrightNotice => String.t() | nil,
          :copyrightNoticeSourceType => String.t() | nil,
          :creator => list(String.t()) | nil,
          :creatorSourceType => String.t() | nil,
          :creditText => String.t() | nil,
          :creditTextSourceType => String.t() | nil,
          :isRetiredCcUrl => boolean() | nil,
          :licenseType => String.t() | nil,
          :licenseUrl => String.t() | nil,
          :safesearchFlags => integer() | nil,
          :sourceType => String.t() | nil
        }

  field(:acquireLicensePage)
  field(:copyrightNotice)
  field(:copyrightNoticeSourceType)
  field(:creator, type: :list)
  field(:creatorSourceType)
  field(:creditText)
  field(:creditTextSourceType)
  field(:isRetiredCcUrl)
  field(:licenseType)
  field(:licenseUrl)
  field(:safesearchFlags)
  field(:sourceType)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageLicenseInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageLicenseInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageSearchImageLicenseInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
