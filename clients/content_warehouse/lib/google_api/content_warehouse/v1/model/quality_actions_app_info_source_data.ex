# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceData do
  @moduledoc """
  This deprecates the above: * confidence=3 * source=4 This allows us to merge AppInfo data per package_name.

  ## Attributes

  *   `allowListSourceData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceDataAllowListSourceData.t`, *default:* `nil`) - 
  *   `confidence` (*type:* `number()`, *default:* `nil`) - Confidence from navboost.
  *   `install` (*type:* `String.t`, *default:* `nil`) - Number of installs from marmot.
  *   `isCategorical` (*type:* `boolean()`, *default:* `nil`) - 
  *   `mediaProviderSourceData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceDataMediaProviderSourceData.t`, *default:* `nil`) - 
  *   `source` (*type:* `String.t`, *default:* `nil`) - 
  *   `teleportSourceData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals.t`, *default:* `nil`) - Signals present when the source is TELEPORT.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowListSourceData =>
            GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceDataAllowListSourceData.t()
            | nil,
          :confidence => number() | nil,
          :install => String.t() | nil,
          :isCategorical => boolean() | nil,
          :mediaProviderSourceData =>
            GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceDataMediaProviderSourceData.t()
            | nil,
          :source => String.t() | nil,
          :teleportSourceData =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals.t() | nil
        }

  field(:allowListSourceData,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceDataAllowListSourceData
  )

  field(:confidence)
  field(:install)
  field(:isCategorical)

  field(:mediaProviderSourceData,
    as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceDataMediaProviderSourceData
  )

  field(:source)

  field(:teleportSourceData,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantTeleportTeleportNicknameSignals
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceData do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsAppInfoSourceData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
