# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOnScreenTextClusterFeature do
  @moduledoc """
  Features for the set of OnScreenText.

  ## Attributes

  *   `averageConfidence` (*type:* `number()`, *default:* `nil`) - Average confidence.
  *   `averageDurationRatio` (*type:* `number()`, *default:* `nil`) - 
  *   `averageHorizontalPosition` (*type:* `number()`, *default:* `nil`) - 
  *   `averageOcrTextLength` (*type:* `number()`, *default:* `nil`) - Deprecated. Please use ocr_text_length_stats.median instead. The average length of anchor labels. average_ocr_text_length is deprecated, because now ocr_text_length_stats has a field for holding the same value.
  *   `averageOfAverageTextHeightRatio` (*type:* `number()`, *default:* `nil`) - Deprecated. Please use text_height_ratio_stats.mean instead. Average value of text height ratio (over image height), which is taken average over the same text. average_of_average_text_height_ratio is deprecated, because now text_height_ratio_stats has a field for keeping the same value.
  *   `averageVerticalPosition` (*type:* `number()`, *default:* `nil`) - Average of label center position.
  *   `clusterRatio` (*type:* `number()`, *default:* `nil`) - The number of anchors in the cluster over the number of anchors in the video.
  *   `clusterSize` (*type:* `integer()`, *default:* `nil`) - The number of anchors in the cluster.
  *   `countingNumberRatio` (*type:* `number()`, *default:* `nil`) - The number of anchors that had a counting number over the number of anchors in total.
  *   `durationMsStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - Median, average and standard deviation of duration_ms among anchors in the same cluster.
  *   `frameSizeRatio` (*type:* `number()`, *default:* `nil`) - Frame size ratio over total frames in video.
  *   `logOcrTextLengthStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - Average and standard deviation of logarithm of the length of labels among anchors in the same cluster.
  *   `logTextHeightRatioStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - Average and standard deviation of log(average_text_height_ratio) among anchors in the same cluster.
  *   `logp1000DurationMsStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - Average and standard deviation of log(1000 + duration_ms) among anchors in the same cluster. Since duration_ms can be zero, 1000 is added before applying logarithm.
  *   `maxVideoDurationRatioBetweenAnchors` (*type:* `number()`, *default:* `nil`) - The maximum ratio of duration between two consecutive anchors to video duration. This is calculated after all anchor filtering has been completed.
  *   `maximumDurationRatio` (*type:* `number()`, *default:* `nil`) - Stats for ratio of frame time intervals, over total video time.
  *   `medianClusteringDistance` (*type:* `number()`, *default:* `nil`) - The median cluster distance for the anchors in the cluster. The way the distance is calculated will vary depending on the clustering method.
  *   `medianDurationRatio` (*type:* `number()`, *default:* `nil`) - 
  *   `medianOfAverageTextHeightRatio` (*type:* `number()`, *default:* `nil`) - Deprecated. Please use text_height_ratio_stats.median instead. Median value of text height ratio (over image height), which is taken average over the same text. median_of_average_text_height_ratio is deprecated, because now text_height_ratio_stats has a field for keeping the same value.
  *   `ocrAsrFeature` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrAsrSetFeature.t`, *default:* `nil`) - Features for the overlap between OCR and ASR.
  *   `ocrTextLengthStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - Median, average and standard deviation of the length of labels among anchors in the same cluster.
  *   `stddevDurationRatio` (*type:* `number()`, *default:* `nil`) - 
  *   `textHeightRatioStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t`, *default:* `nil`) - Median, average and standard deviation of average_text_height_ratio among anchors in the same cluster.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :averageConfidence => number() | nil,
          :averageDurationRatio => number() | nil,
          :averageHorizontalPosition => number() | nil,
          :averageOcrTextLength => number() | nil,
          :averageOfAverageTextHeightRatio => number() | nil,
          :averageVerticalPosition => number() | nil,
          :clusterRatio => number() | nil,
          :clusterSize => integer() | nil,
          :countingNumberRatio => number() | nil,
          :durationMsStats =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil,
          :frameSizeRatio => number() | nil,
          :logOcrTextLengthStats =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil,
          :logTextHeightRatioStats =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil,
          :logp1000DurationMsStats =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil,
          :maxVideoDurationRatioBetweenAnchors => number() | nil,
          :maximumDurationRatio => number() | nil,
          :medianClusteringDistance => number() | nil,
          :medianDurationRatio => number() | nil,
          :medianOfAverageTextHeightRatio => number() | nil,
          :ocrAsrFeature =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrAsrSetFeature.t() | nil,
          :ocrTextLengthStats =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil,
          :stddevDurationRatio => number() | nil,
          :textHeightRatioStats =>
            GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats.t() | nil
        }

  field(:averageConfidence)
  field(:averageDurationRatio)
  field(:averageHorizontalPosition)
  field(:averageOcrTextLength)
  field(:averageOfAverageTextHeightRatio)
  field(:averageVerticalPosition)
  field(:clusterRatio)
  field(:clusterSize)
  field(:countingNumberRatio)
  field(:durationMsStats, as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats)
  field(:frameSizeRatio)

  field(:logOcrTextLengthStats,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats
  )

  field(:logTextHeightRatioStats,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats
  )

  field(:logp1000DurationMsStats,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats
  )

  field(:maxVideoDurationRatioBetweenAnchors)
  field(:maximumDurationRatio)
  field(:medianClusteringDistance)
  field(:medianDurationRatio)
  field(:medianOfAverageTextHeightRatio)

  field(:ocrAsrFeature, as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOcrAsrSetFeature)

  field(:ocrTextLengthStats, as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats)

  field(:stddevDurationRatio)

  field(:textHeightRatioStats,
    as: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchMetricStats
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOnScreenTextClusterFeature do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOnScreenTextClusterFeature.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchOnScreenTextClusterFeature do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
