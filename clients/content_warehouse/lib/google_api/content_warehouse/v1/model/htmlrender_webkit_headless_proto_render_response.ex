# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderResponse do
  @moduledoc """
  See go/wrs-render-quality for how to evaluate the results. Next id: 24

  ## Attributes

  *   `chromiumTrace` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoChromiumTrace.t`, *default:* `nil`) - Contains chromium trace generated during page rendering. This is present if a chromium_trace_config was provided in the request.
  *   `cookie` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie.t)`, *default:* `nil`) - Contents of the browser's cookie jar. (if cookies_enabled was set to true in the RenderRequest).
  *   `document` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument.t`, *default:* `nil`) - Contains the DOM tree, render tree and more. For details consult document.proto.
  *   `exceptionDetail` (*type:* `String.t`, *default:* `nil`) - Provides extra debugging details when certain exception bits are set.
  *   `exceptions` (*type:* `String.t`, *default:* `nil`) - Exceptions (possibly serious conditions) that occurred during this rendering. 0 means none. Bitfield encoding. See the RenderingException enum above for an explanation.
  *   `extensionResult` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderExtensionResult.t`, *default:* `nil`) - Render extension results (if `devtools_script` was provided with the request.)
  *   `finalClientUrl` (*type:* `String.t`, *default:* `nil`) - This field contains the final url as would appear in the web browser's address bar. Note that JavaScript can modify the contents of the location bar so this URL may not appear on the list of referenced resources. If we fail to follow a redirect this field will contain the URL that we failed to redirect to, not the last one we successfully loaded.
  *   `image` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage.t)`, *default:* `nil`) - Contains the viewport images rendered by webkit (if generate_image was set to true in the RenderRequest). Will also contain the print-mode images (if generate_print_mode_images was set to true).
  *   `localStorage` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDOMStorageItem.t)`, *default:* `nil`) - Contents of the browser's local storage.
  *   `partialRender` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPartialRender.t)`, *default:* `nil`) - Partial render snapshots (if requested by a render extension)
  *   `pdf` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPdf.t`, *default:* `nil`) - Contains the PDF document (if generate_pdf was set to true in the RenderRequest)
  *   `referencedResourceContent` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoResource.t)`, *default:* `nil`) - Contents for all the urls fetched by the render server. This field is present only if generate_referenced_resource_content was set to true in the RenderRequest.
  *   `renderStats` (*type:* `GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderStats.t`, *default:* `nil`) - Time to render the url, total size of a document, number of referenced images, etc will be part of RenderStats.
  *   `sessionStorage` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDOMStorageItem.t)`, *default:* `nil`) - Contents of the browser's session storage.
  *   `title` (*type:* `String.t`, *default:* `nil`) - Contains the page title produced by webkit, in the UTF-8 encoding.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :chromiumTrace =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoChromiumTrace.t()
            | nil,
          :cookie =>
            list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie.t())
            | nil,
          :document =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument.t() | nil,
          :exceptionDetail => String.t() | nil,
          :exceptions => String.t() | nil,
          :extensionResult =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderExtensionResult.t()
            | nil,
          :finalClientUrl => String.t() | nil,
          :image =>
            list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage.t()) | nil,
          :localStorage =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDOMStorageItem.t()
            )
            | nil,
          :partialRender =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPartialRender.t()
            )
            | nil,
          :pdf => GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPdf.t() | nil,
          :referencedResourceContent =>
            list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoResource.t())
            | nil,
          :renderStats =>
            GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderStats.t() | nil,
          :sessionStorage =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDOMStorageItem.t()
            )
            | nil,
          :title => String.t() | nil
        }

  field(:chromiumTrace,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoChromiumTrace
  )

  field(:cookie,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoCookie,
    type: :list
  )

  field(:document, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDocument)
  field(:exceptionDetail)
  field(:exceptions)

  field(:extensionResult,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderExtensionResult
  )

  field(:finalClientUrl)

  field(:image,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoImage,
    type: :list
  )

  field(:localStorage,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDOMStorageItem,
    type: :list
  )

  field(:partialRender,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPartialRender,
    type: :list
  )

  field(:pdf, as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoPdf)

  field(:referencedResourceContent,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoResource,
    type: :list
  )

  field(:renderStats,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderStats
  )

  field(:sessionStorage,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoDOMStorageItem,
    type: :list
  )

  field(:title)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderResponse do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoRenderResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
