# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchQnaAnchorFeatures do
  @moduledoc """
  Features for individual Q&A anchors. Next ID: 23

  ## Attributes

  *   `answer` (*type:* `String.t`, *default:* `nil`) - Segment of text from the ASR.
  *   `descartesDotScore` (*type:* `number()`, *default:* `nil`) - 
  *   `descartesRankingScore` (*type:* `number()`, *default:* `nil`) - 
  *   `dolphinModelType` (*type:* `String.t`, *default:* `nil`) - 
  *   `dolphinScore` (*type:* `number()`, *default:* `nil`) - Dolphin score calculated using the question as the query, the ASR passage as the answer. See go/dolphin-models to learn more.
  *   `editDistance` (*type:* `number()`, *default:* `nil`) - Edit distance of the question and the title from 0 to 1 where 1 is most similar.
  *   `endMs` (*type:* `String.t`, *default:* `nil`) - End time in milliseconds relative to the beginning of the video.
  *   `ensembleScore` (*type:* `number()`, *default:* `nil`) - 
  *   `isDuplicateOfTitle` (*type:* `boolean()`, *default:* `nil`) - True if question_title_similarity is less than 0.2.
  *   `neonScore` (*type:* `number()`, *default:* `nil`) - Neon similarity of question and title.
  *   `pointwiseNormalizedGapScore` (*type:* `number()`, *default:* `nil`) - Pointwise GAP normalized score. Score ranges from 0 to 1 and corresponds to GAP precision. See go/wa-cgap-to-pgap-migration to learn more.
  *   `qbstScore` (*type:* `number()`, *default:* `nil`) - QBST similarity of question and title.
  *   `queryCount` (*type:* `number()`, *default:* `nil`) - NavBoostFeature f_query_count for questions that are NavBoost queries.
  *   `queryDocCount` (*type:* `number()`, *default:* `nil`) - NavBoostFeature f_query_doc_count for questions that are NavBoost queries.
  *   `question` (*type:* `String.t`, *default:* `nil`) - Question from Related Questions SSTable or NavBoost.
  *   `questionTitleSimilarity` (*type:* `number()`, *default:* `nil`) - 
  *   `questionType` (*type:* `String.t`, *default:* `nil`) - 
  *   `startMs` (*type:* `String.t`, *default:* `nil`) - Start time in milliseconds relative to the beginning of the video.
  *   `videoDurationMs` (*type:* `String.t`, *default:* `nil`) - Duration of the video.
  *   `videoTitle` (*type:* `String.t`, *default:* `nil`) - Video title.
  *   `webrefMid` (*type:* `String.t`, *default:* `nil`) - Mid corresponding to the WebRef entity from the CDoc that was used to source the question.
  *   `webrefTopicalityScore` (*type:* `number()`, *default:* `nil`) - The WebRef entity topicality score. Learn more about this score at: http://go/topicality-score
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :answer => String.t() | nil,
          :descartesDotScore => number() | nil,
          :descartesRankingScore => number() | nil,
          :dolphinModelType => String.t() | nil,
          :dolphinScore => number() | nil,
          :editDistance => number() | nil,
          :endMs => String.t() | nil,
          :ensembleScore => number() | nil,
          :isDuplicateOfTitle => boolean() | nil,
          :neonScore => number() | nil,
          :pointwiseNormalizedGapScore => number() | nil,
          :qbstScore => number() | nil,
          :queryCount => number() | nil,
          :queryDocCount => number() | nil,
          :question => String.t() | nil,
          :questionTitleSimilarity => number() | nil,
          :questionType => String.t() | nil,
          :startMs => String.t() | nil,
          :videoDurationMs => String.t() | nil,
          :videoTitle => String.t() | nil,
          :webrefMid => String.t() | nil,
          :webrefTopicalityScore => number() | nil
        }

  field(:answer)
  field(:descartesDotScore)
  field(:descartesRankingScore)
  field(:dolphinModelType)
  field(:dolphinScore)
  field(:editDistance)
  field(:endMs)
  field(:ensembleScore)
  field(:isDuplicateOfTitle)
  field(:neonScore)
  field(:pointwiseNormalizedGapScore)
  field(:qbstScore)
  field(:queryCount)
  field(:queryDocCount)
  field(:question)
  field(:questionTitleSimilarity)
  field(:questionType)
  field(:startMs)
  field(:videoDurationMs)
  field(:videoTitle)
  field(:webrefMid)
  field(:webrefTopicalityScore)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchQnaAnchorFeatures do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchQnaAnchorFeatures.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchQnaAnchorFeatures do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
