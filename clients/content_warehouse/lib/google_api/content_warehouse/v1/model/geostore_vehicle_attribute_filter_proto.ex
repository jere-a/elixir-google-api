# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreVehicleAttributeFilterProto do
  @moduledoc """
  A set of vehicle attribute conditionals (ex: weight >= 20T && num_trailers = 2) used to define a slice of all possible vehicles. This can be useful for filtering one or more vehicles by a predicate.

  ## Attributes

  *   `axleCount` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto.t)`, *default:* `nil`) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "count < 4" AND "count >= 2" means "2 <= count < 4").
  *   `hasTrailer` (*type:* `boolean()`, *default:* `nil`) - Whether the applied vehicle types have a trailer attached to them.
  *   `hazardousGoods` (*type:* `list(String.t)`, *default:* `nil`) - List of prohibited hazardous goods for a vehicle to carry. A repeated value here is treated as an OR operation, meaning that they may not carry ANY of the goods listed.
  *   `numTrailers` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto.t)`, *default:* `nil`) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "count <= 4" AND "count > 2" means "2 < count <= 4").
  *   `trailerLength` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t)`, *default:* `nil`) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "length <= 53ft" AND "length > 48ft" means "48ft < length <= 53ft").
  *   `vehicleHeight` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t)`, *default:* `nil`) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "height > 3m" AND "height <= 5m" means "3m < height <= 5m").
  *   `vehicleLength` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t)`, *default:* `nil`) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "length <= 40m" AND "length > 35m" means "35m < length <= 40m").
  *   `vehicleWeight` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreWeightComparisonProto.t)`, *default:* `nil`) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "weight < 8T" AND "weight >= 3T" means "3T <= weight < 8T").
  *   `vehicleWidth` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t)`, *default:* `nil`) - A repeated value here is treated as an AND operation. This allows for ranges to be represented by two values (ex: "width < 4m" AND "width >= 2m" means "2m <= width < 4m").
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :axleCount =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto.t()) | nil,
          :hasTrailer => boolean() | nil,
          :hazardousGoods => list(String.t()) | nil,
          :numTrailers =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto.t()) | nil,
          :trailerLength =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t()) | nil,
          :vehicleHeight =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t()) | nil,
          :vehicleLength =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t()) | nil,
          :vehicleWeight =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreWeightComparisonProto.t()) | nil,
          :vehicleWidth =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto.t()) | nil
        }

  field(:axleCount,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto,
    type: :list
  )

  field(:hasTrailer)
  field(:hazardousGoods, type: :list)

  field(:numTrailers,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCountComparisonProto,
    type: :list
  )

  field(:trailerLength,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto,
    type: :list
  )

  field(:vehicleHeight,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto,
    type: :list
  )

  field(:vehicleLength,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto,
    type: :list
  )

  field(:vehicleWeight,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreWeightComparisonProto,
    type: :list
  )

  field(:vehicleWidth,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreDimensionComparisonProto,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreVehicleAttributeFilterProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreVehicleAttributeFilterProto.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreVehicleAttributeFilterProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
