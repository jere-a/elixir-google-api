# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreTransitLineVariantProto do
  @moduledoc """
  A line variant is a specific instantiation of a line concept, denoted by the ordered set of stops and collection of segments that it traverses. Line variants are modeled as TYPE_ROUTE features with gcid:transit_line_variant. This proto stores line-variant-specific information that is not generally applicable to all routes. Schema Design Doc: go/transit-line-concepts-and-variants

  ## Attributes

  *   `lineConcept` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t`, *default:* `nil`) - Reference to the line variantâ€™s line concept.
  *   `stops` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreServicedStopProto.t)`, *default:* `nil`) - Ordered list of stations or platforms serviced by this line variant. The order is captured by the ServicedStopProto.index field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :lineConcept => GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t() | nil,
          :stops => list(GoogleApi.ContentWarehouse.V1.Model.GeostoreServicedStopProto.t()) | nil
        }

  field(:lineConcept, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto)
  field(:stops, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreServicedStopProto, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreTransitLineVariantProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreTransitLineVariantProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreTransitLineVariantProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
