# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInlinedActionCapability do
  @moduledoc """


  ## Attributes

  *   `alarm` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoAlarmCapability.t`, *default:* `nil`) - Specifies capabilities for handling on-device alarms. The presence of this field, even if empty, implies that the device supports alarms.
  *   `responseLimits` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoResponseLimits.t`, *default:* `nil`) - Specifies the size limits on responses. If message is not defined then no limits exist.
  *   `supportSdkExecute` (*type:* `boolean()`, *default:* `nil`) - Whether this device model package support sdk.EXECUTE client_op (a.k.a action.devices.EXECUTE intent), which will be filled into google.assistant.embedded.v1.DeviceAction.device_request_json. It is default to true (and not public), since all 3P will depends on the device_request_json. Only internal projects like Edoras will set this to false.
  *   `supportedDeviceOps` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoSupportedDeviceOps.t`, *default:* `nil`) - Specifies capabilities for handling assistant.embedded.v1.DeviceOp.
  *   `supportsMultiResponse` (*type:* `boolean()`, *default:* `nil`) - Specifies whether server can send a series of responses for a single query. Example: Routines where multiple actions to be executed one after another.
  *   `timer` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTimerCapability.t`, *default:* `nil`) - Specifies capabilities for handling on-device timers. The presence of this field, even if empty, implies that the device supports timers.
  *   `ttsOutput` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTtsOutputCapability.t`, *default:* `nil`) - Specifies whether client supports receiving `DeviceAction.tts_output`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alarm =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoAlarmCapability.t()
            | nil,
          :responseLimits =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoResponseLimits.t()
            | nil,
          :supportSdkExecute => boolean() | nil,
          :supportedDeviceOps =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoSupportedDeviceOps.t()
            | nil,
          :supportsMultiResponse => boolean() | nil,
          :timer =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTimerCapability.t()
            | nil,
          :ttsOutput =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTtsOutputCapability.t()
            | nil
        }

  field(:alarm,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoAlarmCapability
  )

  field(:responseLimits,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoResponseLimits
  )

  field(:supportSdkExecute)

  field(:supportedDeviceOps,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoSupportedDeviceOps
  )

  field(:supportsMultiResponse)

  field(:timer,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTimerCapability
  )

  field(:ttsOutput,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoTtsOutputCapability
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInlinedActionCapability do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInlinedActionCapability.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInlinedActionCapability do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
