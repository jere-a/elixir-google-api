# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoYearlyRecurrence do
  @moduledoc """
  Pattern for a YEARLY recurrence. A YEARLY recurrence is specified using a monthly pattern and a set of months the pattern applies to. Some examples: "Every January 16" : monthly_pattern { monthly_day_recurrence { month_day: 16 } } months: JANUARY "Fourth Thursday of November and December" : monthly_pattern { monthly_weekday_recurrence { week_day: THURSDAY week_day_number: 4 } } months: NOVEMBER months: DECEMBER Used in PeopleAPI layers + FBS/ContactsService (not in ProfileService)

  ## Attributes

  *   `monthlyPattern` (*type:* `GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoMonthlyRecurrence.t`, *default:* `nil`) - The monthly pattern to recur.
  *   `months` (*type:* `list(String.t)`, *default:* `nil`) - The months of the year to apply the pattern.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :monthlyPattern =>
            GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoMonthlyRecurrence.t() | nil,
          :months => list(String.t()) | nil
        }

  field(:monthlyPattern,
    as: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoMonthlyRecurrence
  )

  field(:months, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoYearlyRecurrence do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoYearlyRecurrence.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.SocialGraphApiProtoYearlyRecurrence do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
