# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingMobileInterstitialsProtoDesktopInterstitials do
  @moduledoc """
  Desktop interstitials signal. The message contains both fields for site-level signal lookup in Index Signals (go/index-signals) and fields for final attachment in DocJoin.

  ## Attributes

  *   `details` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.IndexingMobileInterstitialsProtoDesktopInterstitialsDetails.t)`, *default:* `nil`) - 
  *   `pipelineEpoch` (*type:* `String.t`, *default:* `nil`) - Epoch of the interstitial offline pipeline generating this signal.
  *   `pipelinePattern` (*type:* `String.t`, *default:* `nil`) - If present, pipeline_pattern identifies the cluster of URLs for which the signal value was smeared.
  *   `urlTree` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTree.t`, *default:* `nil`) - URL tree of interstitial patterns belong to the host, to be used as site-level signal in Index Signals. A pattern may contain a payload InterstitialPatternPayload, which will indicate the violated interstitial types of this pattern.
  *   `violatesDesktopInterstitialPolicy` (*type:* `boolean()`, *default:* `nil`) - Overall policy violation status. If this is true, at least one of the InterstitialSignal below indicates a violation.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :details =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.IndexingMobileInterstitialsProtoDesktopInterstitialsDetails.t()
            )
            | nil,
          :pipelineEpoch => String.t() | nil,
          :pipelinePattern => String.t() | nil,
          :urlTree =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTree.t() | nil,
          :violatesDesktopInterstitialPolicy => boolean() | nil
        }

  field(:details,
    as:
      GoogleApi.ContentWarehouse.V1.Model.IndexingMobileInterstitialsProtoDesktopInterstitialsDetails,
    type: :list
  )

  field(:pipelineEpoch)
  field(:pipelinePattern)
  field(:urlTree, as: GoogleApi.ContentWarehouse.V1.Model.IndexingUrlPatternUrlTreeUrlTree)
  field(:violatesDesktopInterstitialPolicy)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingMobileInterstitialsProtoDesktopInterstitials do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingMobileInterstitialsProtoDesktopInterstitials.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingMobileInterstitialsProtoDesktopInterstitials do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
