# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosAnnotation do
  @moduledoc """
  The annotation of a document by a given entity, for a given type of relationship.

  ## Attributes

  *   `entity` (*type:* `GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosEntity.t`, *default:* `nil`) - The entity annotating the document.
  *   `format` (*type:* `GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosFormatRelationship.t`, *default:* `nil`) - The annotation is a format annotation, i.e. it tells the format of the video.
  *   `present` (*type:* `GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosPresentRelationship.t`, *default:* `nil`) - The annotation is present in the video. Semantic Legos and Presence Legos naturally overlap and can contain the same entities. However, we do not enforce a strict subset relation.
  *   `semantic` (*type:* `GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosSemanticRelationship.t`, *default:* `nil`) - The annotation is a semantic annotation, i.e. it tells what the document is about and what the reasons to watch the video are. The annotation should be valid for the complete annotated document, not simply a part of the document such as a video segment.
  *   `taxonomic` (*type:* `GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosTaxonomicRelationship.t`, *default:* `nil`) - The annotation is a taxonomic annotation, i.e. it tells to which class of the Legos taxonomy the document belongs to.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :entity =>
            GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosEntity.t() | nil,
          :format =>
            GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosFormatRelationship.t()
            | nil,
          :present =>
            GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosPresentRelationship.t()
            | nil,
          :semantic =>
            GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosSemanticRelationship.t()
            | nil,
          :taxonomic =>
            GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosTaxonomicRelationship.t()
            | nil
        }

  field(:entity, as: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosEntity)

  field(:format,
    as: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosFormatRelationship
  )

  field(:present,
    as: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosPresentRelationship
  )

  field(:semantic,
    as: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosSemanticRelationship
  )

  field(:taxonomic,
    as: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosTaxonomicRelationship
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosAnnotation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosAnnotation.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.YoutubeDiscoveryLegosLegosAnnotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
