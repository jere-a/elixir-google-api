# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase do
  @moduledoc """
  A document phrase marks a range of tokens in a document as a phrase. The indices are token positions in the document.

  ## Attributes

  *   `end` (*type:* `integer()`, *default:* `nil`) - 
  *   `facet` (*type:* `String.t`, *default:* `nil`) - 
  *   `head` (*type:* `integer()`, *default:* `nil`) - The head token in the phrase is the id of the top-most token within the phrase. It either has an arc from outside the phrase going to it, or it is a root token of the sentence. A value of -1 indicates that the head has not yet been computed for the phrase (not the same semantics as the head of a token!). Note that even when it is uniquely defined, there is no guarantee that the head is set for entities and measurements within a document: you may need to explicitly compute it.
  *   `start` (*type:* `integer()`, *default:* `nil`) - First and last token in the phrase. The phrase goes from start to end (inclusive).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :end => integer() | nil,
          :facet => String.t() | nil,
          :head => integer() | nil,
          :start => integer() | nil
        }

  field(:end)
  field(:facet)
  field(:head)
  field(:start)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftPhrase do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
