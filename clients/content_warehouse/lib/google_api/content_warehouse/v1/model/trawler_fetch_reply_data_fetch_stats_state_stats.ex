# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataFetchStatsStateStats do
  @moduledoc """
  The following are only populated if Params.WantStateStats is true.

  ## Attributes

  *   `EndTrackingTimeUsec` (*type:* `String.t`, *default:* `nil`) - 
  *   `StartTrackingTimeUsec` (*type:* `String.t`, *default:* `nil`) - Start and end timestamp tracking the delays for this request.
  *   `WaitCompressTimeUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitContentCacheUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitCredentialTimeUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitDNSTimeUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitFetchClientUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitForCachedContentStreamingUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitForFetchUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitHostIdTimeUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitNextFlowUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitRobotsCacheTimeUsec` (*type:* `integer()`, *default:* `nil`) - obsolete. Not set.
  *   `WaitRobotsFetchTimeUsec` (*type:* `integer()`, *default:* `nil`) - obsolete. Not set.
  *   `WaitRobotsTimeUsec` (*type:* `integer()`, *default:* `nil`) - 
  *   `WaitScheduleTimeUsec` (*type:* `integer()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :EndTrackingTimeUsec => String.t() | nil,
          :StartTrackingTimeUsec => String.t() | nil,
          :WaitCompressTimeUsec => integer() | nil,
          :WaitContentCacheUsec => integer() | nil,
          :WaitCredentialTimeUsec => integer() | nil,
          :WaitDNSTimeUsec => integer() | nil,
          :WaitFetchClientUsec => integer() | nil,
          :WaitForCachedContentStreamingUsec => integer() | nil,
          :WaitForFetchUsec => integer() | nil,
          :WaitHostIdTimeUsec => integer() | nil,
          :WaitNextFlowUsec => integer() | nil,
          :WaitRobotsCacheTimeUsec => integer() | nil,
          :WaitRobotsFetchTimeUsec => integer() | nil,
          :WaitRobotsTimeUsec => integer() | nil,
          :WaitScheduleTimeUsec => integer() | nil
        }

  field(:EndTrackingTimeUsec)
  field(:StartTrackingTimeUsec)
  field(:WaitCompressTimeUsec)
  field(:WaitContentCacheUsec)
  field(:WaitCredentialTimeUsec)
  field(:WaitDNSTimeUsec)
  field(:WaitFetchClientUsec)
  field(:WaitForCachedContentStreamingUsec)
  field(:WaitForFetchUsec)
  field(:WaitHostIdTimeUsec)
  field(:WaitNextFlowUsec)
  field(:WaitRobotsCacheTimeUsec)
  field(:WaitRobotsFetchTimeUsec)
  field(:WaitRobotsTimeUsec)
  field(:WaitScheduleTimeUsec)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataFetchStatsStateStats do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataFetchStatsStateStats.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.TrawlerFetchReplyDataFetchStatsStateStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
