# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.LegalCitation do
  @moduledoc """


  ## Attributes

  *   `CountryCode` (*type:* `String.t`, *default:* `nil`) - For Courts, the country the court is in. For Statues,? 3 leter country code ISO 3166 alpha2
  *   `ParseType` (*type:* `integer()`, *default:* `nil`) - 
  *   `State` (*type:* `String.t`, *default:* `nil`) - State or province of the court or statue (if applicable) What standard?
  *   `Type` (*type:* `integer()`, *default:* `nil`) - DocType
  *   `courtdocument` (*type:* `GoogleApi.ContentWarehouse.V1.Model.LegalCitationCourtDocument.t`, *default:* `nil`) - 
  *   `law` (*type:* `GoogleApi.ContentWarehouse.V1.Model.LegalCitationLaw.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :CountryCode => String.t() | nil,
          :ParseType => integer() | nil,
          :State => String.t() | nil,
          :Type => integer() | nil,
          :courtdocument =>
            GoogleApi.ContentWarehouse.V1.Model.LegalCitationCourtDocument.t() | nil,
          :law => GoogleApi.ContentWarehouse.V1.Model.LegalCitationLaw.t() | nil
        }

  field(:CountryCode)
  field(:ParseType)
  field(:State)
  field(:Type)
  field(:courtdocument, as: GoogleApi.ContentWarehouse.V1.Model.LegalCitationCourtDocument)
  field(:law, as: GoogleApi.ContentWarehouse.V1.Model.LegalCitationLaw)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.LegalCitation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.LegalCitation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.LegalCitation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
