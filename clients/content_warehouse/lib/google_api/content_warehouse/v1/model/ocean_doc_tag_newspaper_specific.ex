# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.OceanDocTagNewspaperSpecific do
  @moduledoc """
  Newspaper-specific fields.

  ## Attributes

  *   `articleRollCoords` (*type:* `String.t`, *default:* `nil`) - Newspaper Article Roll Coordinates used to figure out the location of the article wrt the page. It is of the form x,y.
  *   `newspaperDate` (*type:* `float()`, *default:* `nil`) - Atlantis specific. Deprecated.
  *   `newspaperName` (*type:* `String.t`, *default:* `nil`) - 
  *   `newspaperUrl` (*type:* `String.t`, *default:* `nil`) - Atlantis specific. Deprecated.
  *   `publicationDate` (*type:* `String.t`, *default:* `nil`) - These fields are only populated for Santorini (newspapers on goovols) formatted newspapers, not for Atlantis: YYYY.MM.DD format.
  *   `publisher` (*type:* `String.t`, *default:* `nil`) - Atlantis specific. Deprecated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :articleRollCoords => String.t() | nil,
          :newspaperDate => float() | nil,
          :newspaperName => String.t() | nil,
          :newspaperUrl => String.t() | nil,
          :publicationDate => String.t() | nil,
          :publisher => String.t() | nil
        }

  field(:articleRollCoords)
  field(:newspaperDate)
  field(:newspaperName)
  field(:newspaperUrl)
  field(:publicationDate)
  field(:publisher)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.OceanDocTagNewspaperSpecific do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.OceanDocTagNewspaperSpecific.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.OceanDocTagNewspaperSpecific do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
