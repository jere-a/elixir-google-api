# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgument do
  @moduledoc """
  A message representing the function argument. Next ID: 9 Important: If you add new fields that do not reflect signals data, but actual semantics of the FunctionCall, please also update CreateFuncallCopyWithoutSignals and CreateFuncallCopyWithArgumentSignals in function_call_utils. LINT.IfChange

  ## Attributes

  *   `evalData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t`, *default:* `nil`) - This field is used inside Aqua and outside Aqua for identifying the token indices and/or byte offsets of this argument
  *   `heuristicEvalData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t`, *default:* `nil`) - Eval_data was not derived at parsing time (i.e. is not expected to be produced by the IG), but heuristically determined by matching the ArgumentValue to an annotation/query fragment.
  *   `key` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey.t`, *default:* `nil`) - Slot schema key for this Argument. Note: This is still under development and not available for general use. Contact meaning-platform-eng@ for questions. Note: Currently MeaningSchemaSlotKey proto has both mid and unique_id. In future, only mid will be present in it. We are in the process of moving "unique_id" out of it. See (b/168907943). Note: The logged version of intent_query will only have "mid" populated in it to save space and avoid data duplication.
  *   `modifiers` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentModifiers.t`, *default:* `nil`) - A flattened representation of all intent modifiers that apply to this argument.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of this argument. If this Argument is part of a FunctionCall, it must have a name or it is not well-formed. If this Argument is from an Annotator, the name field should be empty.
  *   `signals` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals.t`, *default:* `nil`) - Signals associated with this argument.
  *   `value` (*type:* `GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentValue.t`, *default:* `nil`) - The value of this argument.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :evalData =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t() | nil,
          :heuristicEvalData =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t() | nil,
          :key =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey.t() | nil,
          :modifiers =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentModifiers.t() | nil,
          :name => String.t() | nil,
          :signals =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals.t()
            | nil,
          :value =>
            GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentValue.t() | nil
        }

  field(:evalData, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData)

  field(:heuristicEvalData,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData
  )

  field(:key, as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey)
  field(:modifiers, as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentModifiers)
  field(:name)

  field(:signals,
    as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentSignals
  )

  field(:value, as: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgumentValue)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgument do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgument.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersIntentQueryArgument do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
