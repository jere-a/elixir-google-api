# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CompositeDocAlternateName do
  @moduledoc """
  Alternate names are some urls that we would like to associate with documents in addition to canonicals. Sometimes we may want to serve these alternatenames instead of canonicals. Alternames in CompositeDoc should come from WebMirror pipeline.

  ## Attributes

  *   `Url` (*type:* `String.t`, *default:* `nil`) - 
  *   `UrlEncoding` (*type:* `integer()`, *default:* `nil`) - See webutil/urlencoding
  *   `ecnFp` (*type:* `String.t`, *default:* `nil`) - Fp96 of webmirror equivalence class as of last time this was exported.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :Url => String.t() | nil,
          :UrlEncoding => integer() | nil,
          :ecnFp => String.t() | nil
        }

  field(:Url)
  field(:UrlEncoding)
  field(:ecnFp)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CompositeDocAlternateName do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CompositeDocAlternateName.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CompositeDocAlternateName do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
