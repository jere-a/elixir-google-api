# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDuoCallDeviceSettings do
  @moduledoc """
  Duo related call settings on the device. Next ID: 5

  ## Attributes

  *   `allowKnockKnock` (*type:* `boolean()`, *default:* `nil`) - True if Duo Knock Kncok feature is enabled on the device.
  *   `shouldBeLinked` (*type:* `boolean()`, *default:* `nil`) - Boolean indicating if user has explicitly marked this device to be linked or not. This bit is used in case where unexpected errors occur and we have to check for account/device status and mark the device linked after verification.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The call state of the device (i.e. whether a Duo call account has been setup on the device).
  *   `talkbackEnabled` (*type:* `boolean()`, *default:* `nil`) - Client device settings: settings which are populated by client to give to duocore. TalkBack is an accessibility service that helps blind and vision-impaired users interact with their devices. Indicates whether talkback is enabled for the device. Note: this is per device settings currently filled by client for all users.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowKnockKnock => boolean() | nil,
          :shouldBeLinked => boolean() | nil,
          :state => String.t() | nil,
          :talkbackEnabled => boolean() | nil
        }

  field(:allowKnockKnock)
  field(:shouldBeLinked)
  field(:state)
  field(:talkbackEnabled)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDuoCallDeviceSettings do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDuoCallDeviceSettings.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDuoCallDeviceSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
