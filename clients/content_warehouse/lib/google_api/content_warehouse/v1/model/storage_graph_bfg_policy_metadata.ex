# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgPolicyMetadata do
  @moduledoc """
  Metadata about data governance policies. For more context, see go/ke-triple-dg-policy-and-metadata. If any attribute is not set, then there's no specific restrictions associated with the missing attribute. For example, if `availability_start_timestamp` is not set, the data won't be embargoed automatically; if `availability_end_timestamp` is not set, they won't expire automatically. LINT.IfChange

  ## Attributes

  *   `availabilityEndTimestamp` (*type:* `DateTime.t`, *default:* `nil`) - Timestamp after which data with this policy cannot be used. This value must be strictly larger/later than availability_start_time, if both are set.
  *   `availabilityStartTimestamp` (*type:* `DateTime.t`, *default:* `nil`) - Timestamp before which data with this policy cannot be used. This value must be strictly smaller/earlier than availability_end_time, if both are set.
  *   `legalAllowedRegions` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t)`, *default:* `nil`) - List of regions in which the data with this policy is allowed to be used, while the data need to be removed in all regions outside this list according to legal request. This field should be used when the data is only allowed in a few regions and it is inconvenient to enumerate all of the regions in `legal_removal_regions` field. `legal_allowed_regions` and `legal_removal_region` together should include all possible regions, setting one field implies the other. Please set only one of them so the other field's values are implied. See details: http://go/ke-allowed-countries-policy-1p WARNING: This field is for legal purposes only. Please do not populate it without consulting ke-data-governance@.
  *   `legalRemovalRegions` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t)`, *default:* `nil`) - List of regions in which the data with this policy need to be removed according to legal request. WARNING: This field is for legal purposes only. Please do not populate it without consulting ke-data-governance@.
  *   `llmPolicyMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLlmPolicyMetadata.t`, *default:* `nil`) - Policy metadata fields for LLM related data usage restrictions. Only expected to be used by SCP internally -- please consult ke-data-governance@ before populating this field.
  *   `lmsPolicyMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata.t`, *default:* `nil`) - Policy metadata fields for LMS data. Only expected to be used by LMS providers -- please consult ke-data-governance@ before populating this field.
  *   `policyDataScopeKeys` (*type:* `list(integer())`, *default:* `nil`) - This triple is protected by the policies with PolicyDataScope identified by these global unique ids.
  *   `policySourceType` (*type:* `String.t`, *default:* `nil`) - Policy metadata are VERTICAL by default. Vertical policy makers / providers does not need to set this field explicitly.
  *   `rwjPolicyMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgRwjPolicyMetadata.t`, *default:* `nil`) - Policy metadata fields for Real World Journey (RWJ) data. Only expected to be used by RWJ providers -- please consult ke-data-governance@ before populating this field.
  *   `umpPolicyMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata.t`, *default:* `nil`) - Policy metadata fields for UMP data. Only expected to be used by UMP providers -- please consult ke-data-governance@ before populating this field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :availabilityEndTimestamp => DateTime.t() | nil,
          :availabilityStartTimestamp => DateTime.t() | nil,
          :legalAllowedRegions =>
            list(GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t()) | nil,
          :legalRemovalRegions =>
            list(GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions.t()) | nil,
          :llmPolicyMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLlmPolicyMetadata.t() | nil,
          :lmsPolicyMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata.t() | nil,
          :policyDataScopeKeys => list(integer()) | nil,
          :policySourceType => String.t() | nil,
          :rwjPolicyMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgRwjPolicyMetadata.t() | nil,
          :umpPolicyMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata.t() | nil
        }

  field(:availabilityEndTimestamp, as: DateTime)
  field(:availabilityStartTimestamp, as: DateTime)

  field(:legalAllowedRegions,
    as: GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions,
    type: :list
  )

  field(:legalRemovalRegions,
    as: GoogleApi.ContentWarehouse.V1.Model.KeGovernanceTypedRegions,
    type: :list
  )

  field(:llmPolicyMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLlmPolicyMetadata
  )

  field(:lmsPolicyMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgLmsPolicyMetadata
  )

  field(:policyDataScopeKeys, type: :list)
  field(:policySourceType)

  field(:rwjPolicyMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgRwjPolicyMetadata
  )

  field(:umpPolicyMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgUmpPolicyMetadata
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgPolicyMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgPolicyMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.StorageGraphBfgPolicyMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
