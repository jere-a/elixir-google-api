# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiItagSpecificMetadata do
  @moduledoc """
  The metadata returned with each transcode. Next available field: 9

  ## Attributes

  *   `expirationTimestampSec` (*type:* `String.t`, *default:* `nil`) - Timestamp (measured in seconds since epoch) after which Amarna will delete the serving transcode.
  *   `genus` (*type:* `String.t`, *default:* `nil`) - The Venom Genus that this transcode was produced for.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Indicates the state in Venom for this transcode type.
  *   `transcodeItag` (*type:* `integer()`, *default:* `nil`) - transcode type which are available for the video.
  *   `videoId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomVideoId.t`, *default:* `nil`) - The Venom ID that this transcode was produced for.
  *   `xtagsList` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiXtagList.t`, *default:* `nil`) - Indicates xtags if present. Xtag makes the different transcode. For transcode "MP4_AVCBASE640_AAC/af=sq" (itag 18 with xtag), "af=sq" is the xtag part. This is a different transcode than "MP4_AVCBASE640_AAC" (itag 18).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :expirationTimestampSec => String.t() | nil,
          :genus => String.t() | nil,
          :state => String.t() | nil,
          :transcodeItag => integer() | nil,
          :videoId => GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomVideoId.t() | nil,
          :xtagsList => GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiXtagList.t() | nil
        }

  field(:expirationTimestampSec)
  field(:genus)
  field(:state)
  field(:transcodeItag)
  field(:videoId, as: GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomVideoId)
  field(:xtagsList, as: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiXtagList)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiItagSpecificMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiItagSpecificMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryApiItagSpecificMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
