# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelation do
  @moduledoc """
  Relations between entities in the document. A relation is between two different entities in the document. A relation can have a number of mentions in the document. Next available id: 11

  ## Attributes

  *   `identifier` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSaftIdentifier.t`, *default:* `nil`) - External identifier for relation.
  *   `info` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Application-specific information about this relation.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - 
  *   `mention` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelationMention.t)`, *default:* `nil`) - Mentions of the relation in the document.
  *   `score` (*type:* `number()`, *default:* `nil`) - Relation score.
  *   `source` (*type:* `integer()`, *default:* `nil`) - Source and target entity indices. These are indices into the entity array in the document. If this is an attribute relation the target is the index of a measure in the document.
  *   `target` (*type:* `integer()`, *default:* `nil`) - 
  *   `type` (*type:* `String.t`, *default:* `nil`) - Relation type.
  *   `typeId` (*type:* `integer()`, *default:* `nil`) - Relation type id.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :identifier => GoogleApi.ContentWarehouse.V1.Model.NlpSaftIdentifier.t() | nil,
          :info => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :kind => String.t() | nil,
          :mention => list(GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelationMention.t()) | nil,
          :score => number() | nil,
          :source => integer() | nil,
          :target => integer() | nil,
          :type => String.t() | nil,
          :typeId => integer() | nil
        }

  field(:identifier, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftIdentifier)
  field(:info, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:kind)
  field(:mention, as: GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelationMention, type: :list)
  field(:score)
  field(:source)
  field(:target)
  field(:type)
  field(:typeId)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftRelation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
