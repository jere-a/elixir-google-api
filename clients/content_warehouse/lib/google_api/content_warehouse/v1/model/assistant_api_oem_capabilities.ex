# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiOemCapabilities do
  @moduledoc """
  Encapsulates the action capabilities of the OEM device. This data is merged from Device Model lookup, per-device registration, and per-request context. This data is sent to NLU layer for query understanding.

  ## Attributes

  *   `cloudCapability` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudCapability.t`, *default:* `nil`) - The OEM Cloud execution capability of this device, containing routing details for cloud fulfillment.
  *   `cloudDeviceCapabilities` (*type:* `map()`, *default:* `nil`) - If fulfillment is done via 3P cloud and 3P supports device capabilities, this field will be set.
  *   `deviceModelId` (*type:* `String.t`, *default:* `nil`) - Device Model Id from DeviceModelPackage.
  *   `deviceModelRevisionId` (*type:* `String.t`, *default:* `nil`) - Device Model Revision Id from DeviceModelPackage.
  *   `deviceSpecificData` (*type:* `String.t`, *default:* `nil`) - Opaque supported action data related to a specific domain of devices, for example for car. go/car-talk-registration-model
  *   `internalCapability` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInternalCapability.t`, *default:* `nil`) - Internal-only config containing metadata about the Device Model, for example to control the ranking behavior.
  *   `thirdPartyActionConfig` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiThirdPartyActionConfig.t`, *default:* `nil`) - 3P Action Metadata, populated from the Device Model lookup and the client request parameters. For example, an Assistant SDK request would have the billed project id of the Assistant request added here in order to enable any Device Actions developed using the same Google Cloud project. This data is sent to Service Engine to mask triggering for Device Actions.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cloudCapability =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudCapability.t()
            | nil,
          :cloudDeviceCapabilities => map() | nil,
          :deviceModelId => String.t() | nil,
          :deviceModelRevisionId => String.t() | nil,
          :deviceSpecificData => String.t() | nil,
          :internalCapability =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInternalCapability.t()
            | nil,
          :thirdPartyActionConfig =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiThirdPartyActionConfig.t() | nil
        }

  field(:cloudCapability,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoCloudCapability
  )

  field(:cloudDeviceCapabilities, type: :map)
  field(:deviceModelId)
  field(:deviceModelRevisionId)
  field(:deviceSpecificData)

  field(:internalCapability,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantDevicesPlatformProtoInternalCapability
  )

  field(:thirdPartyActionConfig,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiThirdPartyActionConfig
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiOemCapabilities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiOemCapabilities.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiOemCapabilities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
