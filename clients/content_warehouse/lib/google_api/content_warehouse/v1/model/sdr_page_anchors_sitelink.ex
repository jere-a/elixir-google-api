# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.SdrPageAnchorsSitelink do
  @moduledoc """


  ## Attributes

  *   `embedding` (*type:* `GoogleApi.ContentWarehouse.V1.Model.SdrEmbedding.t`, *default:* `nil`) - Needed for relevance scoring.
  *   `geometryScore` (*type:* `number()`, *default:* `nil`) - aggregate score from Section Geometry.
  *   `headingAbbrvScore` (*type:* `number()`, *default:* `nil`) - Heading Abbreviation score.
  *   `hpScore` (*type:* `number()`, *default:* `nil`) - Needed for heading/passage filtering.
  *   `level` (*type:* `integer()`, *default:* `nil`) - 
  *   `scrollTo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.SdrScrollTo.t`, *default:* `nil`) - 
  *   `sectionHeight` (*type:* `integer()`, *default:* `nil`) - Needed for Geometry Scoring and backoffs. from Section Geometry.
  *   `text` (*type:* `String.t`, *default:* `nil`) - Heading/Reformulated text is needed to display.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :embedding => GoogleApi.ContentWarehouse.V1.Model.SdrEmbedding.t() | nil,
          :geometryScore => number() | nil,
          :headingAbbrvScore => number() | nil,
          :hpScore => number() | nil,
          :level => integer() | nil,
          :scrollTo => GoogleApi.ContentWarehouse.V1.Model.SdrScrollTo.t() | nil,
          :sectionHeight => integer() | nil,
          :text => String.t() | nil
        }

  field(:embedding, as: GoogleApi.ContentWarehouse.V1.Model.SdrEmbedding)
  field(:geometryScore)
  field(:headingAbbrvScore)
  field(:hpScore)
  field(:level)
  field(:scrollTo, as: GoogleApi.ContentWarehouse.V1.Model.SdrScrollTo)
  field(:sectionHeight)
  field(:text)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.SdrPageAnchorsSitelink do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.SdrPageAnchorsSitelink.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.SdrPageAnchorsSitelink do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
