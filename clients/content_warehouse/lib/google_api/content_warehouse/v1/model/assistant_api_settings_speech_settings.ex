# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsSpeechSettings do
  @moduledoc """
  Settings related to speech detection. See go/hotword-settings-on-cloud for more info. Next ID: 16

  ## Attributes

  *   `continuedConversationEnabled` (*type:* `boolean()`, *default:* `nil`) - Indicates whether Continued Conversation is enabled for this device.
  *   `deviceModelType` (*type:* `String.t`, *default:* `nil`) - Stores the device model type e.g Pixel.
  *   `dspAvailable` (*type:* `boolean()`, *default:* `nil`) - Whether the device has DSP chip to enable always on hotword detection.
  *   `hotwordInNavigationEnabled` (*type:* `String.t`, *default:* `nil`) - Whether hotword has been enabled by the user during navigation.
  *   `hotwordSetting` (*type:* `String.t`, *default:* `nil`) - Stores hotword setting status for the locales which don't support voice match.
  *   `lockscreenEnabled` (*type:* `boolean()`, *default:* `nil`) - Whether pin/pattern lockscreen has been enabled by the user.
  *   `opaEligibilityState` (*type:* `String.t`, *default:* `nil`) - Stores if Assistant is available for the user's device/locale, where Enabled means it is available and disabled means it is not.
  *   `opaEligible` (*type:* `boolean()`, *default:* `nil`) - Stores if Assistant is available for the user's device/locale. Deprecated as bools do not give accurate true/false ratios due to old clients reporting the default value.
  *   `sdkVersion` (*type:* `integer()`, *default:* `nil`) - Stores the Android SDK version. This comes from android.os.Build.VERSION.SDK_INT.
  *   `speakerIdModelPresent` (*type:* `boolean()`, *default:* `nil`) - Whether speaker ID model is present for the user.
  *   `speakerIdRecognitionEnabled` (*type:* `boolean()`, *default:* `nil`) - Indicates whether the user has enabled speaker-id (fromAnyScreen/alwaysOn) for this device. Deprecated - use voice_match_setting instead
  *   `trustedVoiceEnabled` (*type:* `boolean()`, *default:* `nil`) - Indicates whether the user has enabled trusted voice for this device.
  *   `unlockWithHotwordAvailable` (*type:* `boolean()`, *default:* `nil`) - A bool indicating whether device supports unlocking device with hotword.
  *   `userMigratedToDeclined` (*type:* `boolean()`, *default:* `nil`) - Stores if user was migrated from undecided to declined as apart of Mariko project. Used for potential growth targeting.
  *   `voiceMatchSetting` (*type:* `String.t`, *default:* `nil`) - Stores the hotword/voice match setting status for the locales which support voice match.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :continuedConversationEnabled => boolean() | nil,
          :deviceModelType => String.t() | nil,
          :dspAvailable => boolean() | nil,
          :hotwordInNavigationEnabled => String.t() | nil,
          :hotwordSetting => String.t() | nil,
          :lockscreenEnabled => boolean() | nil,
          :opaEligibilityState => String.t() | nil,
          :opaEligible => boolean() | nil,
          :sdkVersion => integer() | nil,
          :speakerIdModelPresent => boolean() | nil,
          :speakerIdRecognitionEnabled => boolean() | nil,
          :trustedVoiceEnabled => boolean() | nil,
          :unlockWithHotwordAvailable => boolean() | nil,
          :userMigratedToDeclined => boolean() | nil,
          :voiceMatchSetting => String.t() | nil
        }

  field(:continuedConversationEnabled)
  field(:deviceModelType)
  field(:dspAvailable)
  field(:hotwordInNavigationEnabled)
  field(:hotwordSetting)
  field(:lockscreenEnabled)
  field(:opaEligibilityState)
  field(:opaEligible)
  field(:sdkVersion)
  field(:speakerIdModelPresent)
  field(:speakerIdRecognitionEnabled)
  field(:trustedVoiceEnabled)
  field(:unlockWithHotwordAvailable)
  field(:userMigratedToDeclined)
  field(:voiceMatchSetting)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsSpeechSettings do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsSpeechSettings.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsSpeechSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
