# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceIdentity do
  @moduledoc """
  The set of information that helps the server identify the surface. This replaces the User-Agent string within the Assistant Server. Note: The SurfaceIdentity proto should only be used to derive the capabilities of a surface. It should not be accessed outside of the CapabilityBuilder or CapabilityChecker. NEXT ID: 6

  ## Attributes

  *   `deviceId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t`, *default:* `nil`) - The identifier of the device.
  *   `legacySurfaceType` (*type:* `String.t`, *default:* `nil`) - DEPRECATED: The legacy device's surface type enum. NOTE: Prefer using the ontological `surface_type` field above. If you need to access the legacy surface type, please file a bug and add it in your code to migrate to ontological surface type.
  *   `surfaceType` (*type:* `String.t`, *default:* `nil`) - The device's surface type. The types are defined at google3/assistant/api/core_types/surfaces.gcl. For more details, refer to go/ontologicalize-surface-type.
  *   `surfaceTypeString` (*type:* `String.t`, *default:* `nil`) - DEPRECATED. The legacy device's surface type string. NOTE: Prefer using the ontological `surface_type` field. The device's surface type. This is the string version of the assistant.api.core_types.SurfaceType enum. The server should not use this field, rather it should use the SurfaceType value derived from this string.
  *   `surfaceVersion` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceVersion.t`, *default:* `nil`) - The version of the surface/client. This is different from the Conversation protocol version.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceId =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId.t() | nil,
          :legacySurfaceType => String.t() | nil,
          :surfaceType => String.t() | nil,
          :surfaceTypeString => String.t() | nil,
          :surfaceVersion =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceVersion.t() | nil
        }

  field(:deviceId, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesDeviceId)
  field(:legacySurfaceType)
  field(:surfaceType)
  field(:surfaceTypeString)

  field(:surfaceVersion,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceVersion
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceIdentity do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceIdentity.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesSurfaceIdentity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
