# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto do
  @moduledoc """


  ## Attributes

  *   `latE7` (*type:* `integer()`, *default:* `nil`) - 
  *   `lngE7` (*type:* `integer()`, *default:* `nil`) - 
  *   `metadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto.t`, *default:* `nil`) - NOTE: If removing metadata, remove 'option objc_class_prefix = "GS";' together. See cl/189921100. Field-level metadata for this point. NOTE: there are multiple PointProto fields in the Geo Schema. Metadata here is only expected to be present on FeatureProto.point[] and FeatureProto.center.
  *   `temporaryData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - A place for clients to attach arbitrary data to a point. Never set in MapFacts.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :latE7 => integer() | nil,
          :lngE7 => integer() | nil,
          :metadata => GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto.t() | nil,
          :temporaryData => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil
        }

  field(:latE7)
  field(:lngE7)
  field(:metadata, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto)
  field(:temporaryData, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostorePointProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
