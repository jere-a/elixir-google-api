# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoodocCharLabel do
  @moduledoc """
  Font label

  ## Attributes

  *   `BaseLine` (*type:* `integer()`, *default:* `nil`) - The shift of a character from the base line of the string in pixels
  *   `CharacterHeight` (*type:* `integer()`, *default:* `nil`) - Height of small characters in pixels on the source image
  *   `Color` (*type:* `integer()`, *default:* `nil`) - The foreground color of the symbol; the default color is 0 (black)
  *   `Confidence` (*type:* `integer()`, *default:* `nil`) - Symbol recognition confidence from OCR. Range depends upon OCR Engine.
  *   `FontId` (*type:* `integer()`, *default:* `nil`) - The font ID refers to the fonts table in the document header
  *   `FontSize` (*type:* `integer()`, *default:* `nil`) - Size in points (JFYI: point is 1/72"). This is rounded to the nearest whole number.
  *   `FontSizeFloat` (*type:* `number()`, *default:* `nil`) - Size in points represented as float.
  *   `FontType` (*type:* `integer()`, *default:* `nil`) - 
  *   `HasUncertainHeight` (*type:* `boolean()`, *default:* `nil`) - If CharacterHeight is defined uncertainly
  *   `HorizontalScale` (*type:* `integer()`, *default:* `nil`) - The horizontal scaling for a character, in percents. The default value for this property is 100, which corresponds to no scaling.
  *   `IsBold` (*type:* `boolean()`, *default:* `nil`) - 
  *   `IsItalic` (*type:* `boolean()`, *default:* `nil`) - 
  *   `IsSmallCaps` (*type:* `boolean()`, *default:* `nil`) - 
  *   `IsStrikeout` (*type:* `boolean()`, *default:* `nil`) - 
  *   `IsSubscript` (*type:* `boolean()`, *default:* `nil`) - 
  *   `IsSuperscript` (*type:* `boolean()`, *default:* `nil`) - 
  *   `IsSuspicious` (*type:* `boolean()`, *default:* `nil`) - If OCR Engine marked the character as "suspicious" (this character is likely to be recognized incorrectly).
  *   `IsUnderlined` (*type:* `boolean()`, *default:* `nil`) - 
  *   `NotOcrablePerQA` (*type:* `boolean()`, *default:* `nil`) - True if a QA operator has marked this as not OCRable. This is used for complex equations, scripts that the operator can't type, or handwriting.
  *   `Penalty` (*type:* `integer()`, *default:* `nil`) - Symbol-level penalty from the garbage text detector. Lower is better; range = [0,100].
  *   `SerifProbability` (*type:* `integer()`, *default:* `nil`) - The probability that a character is written with a Serif font
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :BaseLine => integer() | nil,
          :CharacterHeight => integer() | nil,
          :Color => integer() | nil,
          :Confidence => integer() | nil,
          :FontId => integer() | nil,
          :FontSize => integer() | nil,
          :FontSizeFloat => number() | nil,
          :FontType => integer() | nil,
          :HasUncertainHeight => boolean() | nil,
          :HorizontalScale => integer() | nil,
          :IsBold => boolean() | nil,
          :IsItalic => boolean() | nil,
          :IsSmallCaps => boolean() | nil,
          :IsStrikeout => boolean() | nil,
          :IsSubscript => boolean() | nil,
          :IsSuperscript => boolean() | nil,
          :IsSuspicious => boolean() | nil,
          :IsUnderlined => boolean() | nil,
          :NotOcrablePerQA => boolean() | nil,
          :Penalty => integer() | nil,
          :SerifProbability => integer() | nil
        }

  field(:BaseLine)
  field(:CharacterHeight)
  field(:Color)
  field(:Confidence)
  field(:FontId)
  field(:FontSize)
  field(:FontSizeFloat)
  field(:FontType)
  field(:HasUncertainHeight)
  field(:HorizontalScale)
  field(:IsBold)
  field(:IsItalic)
  field(:IsSmallCaps)
  field(:IsStrikeout)
  field(:IsSubscript)
  field(:IsSuperscript)
  field(:IsSuspicious)
  field(:IsUnderlined)
  field(:NotOcrablePerQA)
  field(:Penalty)
  field(:SerifProbability)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocCharLabel do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoodocCharLabel.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GoodocCharLabel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
