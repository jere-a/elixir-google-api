# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserAvailability do
  @moduledoc """
  A single availability range. The displayed status should be the same during the entire time range.

  ## Attributes

  *   `contexts` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserContext.t`, *default:* `nil`) - The contexts contain additional information about the current user's availability or its upcoming changes. The client doesn't need to extract certain bits to visualize the status or apply custom logic based on the content of this field: the status field should contain everything needed for the correct visualization.
  *   `status` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserStatus.t`, *default:* `nil`) - The user status during the time range.
  *   `timeRange` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaTimeRange.t`, *default:* `nil`) - The time range when this availability should be displayed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contexts =>
            GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserContext.t()
            | nil,
          :status =>
            GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserStatus.t() | nil,
          :timeRange =>
            GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaTimeRange.t() | nil
        }

  field(:contexts,
    as: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserContext
  )

  field(:status, as: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserStatus)

  field(:timeRange,
    as: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaTimeRange
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserAvailability do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserAvailability.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GoogleInternalAppsWaldoV1alphaUserAvailability do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
