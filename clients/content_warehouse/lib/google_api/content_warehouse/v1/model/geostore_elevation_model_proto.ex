# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreElevationModelProto do
  @moduledoc """
  Represents raster digital elevation model data.

  ## Attributes

  *   `blendOrder` (*type:* `integer()`, *default:* `nil`) - Defines the relative order in which terrain data should be rendered. Features with higher blend_order should be blended on top of features with lower blend_order. NOTE: this is backwards from the way BlendRank works in Magrathean.
  *   `dataLevel` (*type:* `integer()`, *default:* `nil`) - The zoom level at which this data is defined. Level 0 is world level data, and each increase in zoom level corresponds to a factor of 2 increase in scale.
  *   `dataMaxlevel` (*type:* `integer()`, *default:* `nil`) - The maximum (finest) level at which this terrain data has sufficient resolution to be displayed.
  *   `elevationData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - A place to store an elevation data protocol buffer. Currently, this must be a keyhole::AssetTileCompressed (see google3/keyhole/common/proto/magrathean.protodevel).
  *   `fullChildDataAvailable` (*type:* `boolean()`, *default:* `nil`) - If true, all of the data contained in this feature is available at the next highest (more detailed) level. If this is true, partial_child_data_available should also be true.
  *   `partialChildDataAvailable` (*type:* `boolean()`, *default:* `nil`) - If true, at least part of the data contained in this feature is available at the next highest (more detailed) level.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blendOrder => integer() | nil,
          :dataLevel => integer() | nil,
          :dataMaxlevel => integer() | nil,
          :elevationData => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :fullChildDataAvailable => boolean() | nil,
          :partialChildDataAvailable => boolean() | nil
        }

  field(:blendOrder)
  field(:dataLevel)
  field(:dataMaxlevel)
  field(:elevationData, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:fullChildDataAvailable)
  field(:partialChildDataAvailable)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreElevationModelProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreElevationModelProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreElevationModelProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
