# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaAnnotation do
  @moduledoc """
  Annotation for media entities. Next ID: 17

  ## Attributes

  *   `artistName` (*type:* `String.t`, *default:* `nil`) - Name of the artist (if applicable). Used for songs and albums.
  *   `audiobookInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaAudiobookInfo.t`, *default:* `nil`) - Additional info specific to an audiobook (if applicable).
  *   `contentType` (*type:* `String.t`, *default:* `nil`) - Type of the media content. This field is not always populated, but only when this annotation is used to represent an individual media item, e.g., when it is the value of an intent argument storing a media object to play.
  *   `image` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesImage.t)`, *default:* `nil`) - Images of the media.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the media. Required.
  *   `newsInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaNewsInfo.t`, *default:* `nil`) - Additional info specific to a news audio/video stream (if applicable).
  *   `personalDataIngestionEngine` (*type:* `String.t`, *default:* `nil`) - The personal ingestion engine.
  *   `playlistVisibility` (*type:* `String.t`, *default:* `nil`) - Visibility setting of the retrieved playlist.
  *   `podcastInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaPodcastInfo.t`, *default:* `nil`) - Additional info specific to podcast stream (if applicable).
  *   `primaryEntityMid` (*type:* `String.t`, *default:* `nil`) - 
  *   `providerInfo` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaProviderInfo.t)`, *default:* `nil`) - List of providers and their deeplinks.
  *   `purchaseInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaPurchaseInfo.t`, *default:* `nil`) - Purchase info for purchased or preordered movies, episodes, seasons, tv shows.
  *   `radioInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaRadioInfo.t`, *default:* `nil`) - Only one of these fields should be set depending on the type of the content. oneof content_specific_info { Additional info specific to a radio station (if applicable).
  *   `rentalInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaRentalInfo.t`, *default:* `nil`) - Rental info for rented movies.
  *   `source` (*type:* `String.t`, *default:* `nil`) - 
  *   `youtubePlaylistInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaYouTubePlaylistInfo.t`, *default:* `nil`) - Additional info specific to YouTube playlist (if applicable).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :artistName => String.t() | nil,
          :audiobookInfo =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaAudiobookInfo.t()
            | nil,
          :contentType => String.t() | nil,
          :image =>
            list(GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesImage.t()) | nil,
          :name => String.t() | nil,
          :newsInfo =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaNewsInfo.t() | nil,
          :personalDataIngestionEngine => String.t() | nil,
          :playlistVisibility => String.t() | nil,
          :podcastInfo =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaPodcastInfo.t() | nil,
          :primaryEntityMid => String.t() | nil,
          :providerInfo =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaProviderInfo.t()
            )
            | nil,
          :purchaseInfo =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaPurchaseInfo.t()
            | nil,
          :radioInfo =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaRadioInfo.t() | nil,
          :rentalInfo =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaRentalInfo.t() | nil,
          :source => String.t() | nil,
          :youtubePlaylistInfo =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaYouTubePlaylistInfo.t()
            | nil
        }

  field(:artistName)

  field(:audiobookInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaAudiobookInfo
  )

  field(:contentType)
  field(:image, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesImage, type: :list)
  field(:name)
  field(:newsInfo, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaNewsInfo)
  field(:personalDataIngestionEngine)
  field(:playlistVisibility)

  field(:podcastInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaPodcastInfo
  )

  field(:primaryEntityMid)

  field(:providerInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaProviderInfo,
    type: :list
  )

  field(:purchaseInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaPurchaseInfo
  )

  field(:radioInfo, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaRadioInfo)

  field(:rentalInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaRentalInfo
  )

  field(:source)

  field(:youtubePlaylistInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaYouTubePlaylistInfo
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaAnnotation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaAnnotation.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingModelsMediaMediaAnnotation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
