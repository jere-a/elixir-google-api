# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey do
  @moduledoc """
  The primary key for a MeaningSchema slot. Next ID: 3 For //depot/google3/logs/proto/knowledge/interpretation/intent_query.proto in the "ThenChange", please update Argument.SlotKey. LINT.IfChange

  ## Attributes

  *   `mid` (*type:* `String.t`, *default:* `nil`) - The minted MID for the slot. This ID uniquely identifies the slot globally.
  *   `uniqueId` (*type:* `String.t`, *default:* `nil`) - A stable unique ID for this intent minted from go/uniqueid. NOTE: This is considered a private field used only for internal Intent Catalog purposes (i.e. as a source ID for generating this intent's associated MID). Additionally, this field is only populated on the schema. TODO (b/168907943): Move "unique_id" out of MeaningSchemaSlotKey proto message. Note: Please do not use this field. It is going to be moved out of this proto message.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :mid => String.t() | nil,
          :uniqueId => String.t() | nil
        }

  field(:mid)
  field(:uniqueId)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.KnowledgeAnswersMeaningSchemaSlotKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
