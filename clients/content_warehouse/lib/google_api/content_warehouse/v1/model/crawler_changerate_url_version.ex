# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.CrawlerChangerateUrlVersion do
  @moduledoc """
  NEXT_TAG: 15

  ## Attributes

  *   `additionalChangesMerged` (*type:* `integer()`, *default:* `nil`) - Same as the field in UrlChange. This allows us to merge identical UrlVersions into a single UrlVersion.
  *   `contentType` (*type:* `integer()`, *default:* `nil`) - The content type of the page.
  *   `isImsNotModified` (*type:* `boolean()`, *default:* `nil`) - Whether this is an IMS response (a 304, not modified).
  *   `lastModified` (*type:* `integer()`, *default:* `nil`) - The date from the LastModified header, if present.
  *   `shingleSimhash` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingConverterShingleFingerprint.t`, *default:* `nil`) - The simhash value obtained from shingles.
  *   `simhash` (*type:* `String.t`, *default:* `nil`) - The simhash-v1 value. The simhash-v1 is now deprecated and new UrlVersions should only populate simhash-v2. During migration phase from using simhash-v1 to simhash-v2, it is possible that previous UrlChange only contain simhash-v1 and the next UrlChange / UrlVersion could only contain simhash-v2. In this case, we skip that interval in our changerate computation. [go/changerate-simhash-v2-migration]
  *   `simhashIsTrusted` (*type:* `boolean()`, *default:* `nil`) - Whether the simhash-v1 should be trusted.
  *   `simhashV2` (*type:* `String.t`, *default:* `nil`) - The simhash-v2 value.
  *   `simhashV2IsTrusted` (*type:* `boolean()`, *default:* `nil`) - Whether the simhash-v2 value should be trusted.
  *   `timestamp` (*type:* `integer()`, *default:* `nil`) - The timestamp we crawled the page.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :additionalChangesMerged => integer() | nil,
          :contentType => integer() | nil,
          :isImsNotModified => boolean() | nil,
          :lastModified => integer() | nil,
          :shingleSimhash =>
            GoogleApi.ContentWarehouse.V1.Model.IndexingConverterShingleFingerprint.t() | nil,
          :simhash => String.t() | nil,
          :simhashIsTrusted => boolean() | nil,
          :simhashV2 => String.t() | nil,
          :simhashV2IsTrusted => boolean() | nil,
          :timestamp => integer() | nil
        }

  field(:additionalChangesMerged)
  field(:contentType)
  field(:isImsNotModified)
  field(:lastModified)

  field(:shingleSimhash,
    as: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterShingleFingerprint
  )

  field(:simhash)
  field(:simhashIsTrusted)
  field(:simhashV2)
  field(:simhashV2IsTrusted)
  field(:timestamp)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.CrawlerChangerateUrlVersion do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.CrawlerChangerateUrlVersion.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.CrawlerChangerateUrlVersion do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
