# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.PhotosGDepthMetadata do
  @moduledoc """
  Metadata in the GDepth XMP block. Note that GDepth::Data is not copied into this message.

  ## Attributes

  *   `far` (*type:* `number()`, *default:* `nil`) - Depth map far plane distance.
  *   `format` (*type:* `String.t`, *default:* `nil`) - Depth map format.
  *   `imageHeight` (*type:* `integer()`, *default:* `nil`) - Depth map source image height.
  *   `imageWidth` (*type:* `integer()`, *default:* `nil`) - Depth map source image width.
  *   `mime` (*type:* `String.t`, *default:* `nil`) - Depth map mime type.
  *   `near` (*type:* `number()`, *default:* `nil`) - Depth map near plane distance.
  *   `units` (*type:* `String.t`, *default:* `nil`) - Depth map units of distance.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :far => number() | nil,
          :format => String.t() | nil,
          :imageHeight => integer() | nil,
          :imageWidth => integer() | nil,
          :mime => String.t() | nil,
          :near => number() | nil,
          :units => String.t() | nil
        }

  field(:far)
  field(:format)
  field(:imageHeight)
  field(:imageWidth)
  field(:mime)
  field(:near)
  field(:units)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.PhotosGDepthMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.PhotosGDepthMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.PhotosGDepthMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
