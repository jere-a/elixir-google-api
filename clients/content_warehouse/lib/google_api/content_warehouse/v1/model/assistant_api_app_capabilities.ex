# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppCapabilities do
  @moduledoc """
  Used to describe app capabilities of the device installed apps reported to the server.

  ## Attributes

  *   `allowlistedForMediaFulfillment` (*type:* `boolean()`, *default:* `nil`) - Indicates whether the provider is compatible for media fulfillment on this surface. For example, Amazon Music isn't compatible with the driving mode.
  *   `appIntegrationsSettings` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppIntegrationsSettings.t`, *default:* `nil`) - Currently unused. Will be used in the future when integrating with incremental app capabilities.
  *   `disabledSystemApp` (*type:* `boolean()`, *default:* `nil`) - This system app is disabled in settings.
  *   `provider` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t`, *default:* `nil`) - The installed app of the provider.
  *   `routableToProviderCloud` (*type:* `boolean()`, *default:* `nil`) - This provider has integrated its cloud backend with Google, and Google can route the user queries to the provider's cloud.
  *   `searchableOnDevice` (*type:* `boolean()`, *default:* `nil`) - This provider has an app that supports on-device search through the provider's own inventory.
  *   `searchableOnServer` (*type:* `boolean()`, *default:* `nil`) - This provider has integrated its content with Google, and Google has enabled to serve its content as a server-side solution.
  *   `supports3pPodcastPlayback` (*type:* `boolean()`, *default:* `nil`) - Indicates whether the provider supports playback of 3P(externally hosted) podcasts.
  *   `supportsScreenlessInitiation` (*type:* `boolean()`, *default:* `nil`) - This provider has an app that supports starting new media playback when there is no screen (e.g. by integrating with the Bisto SDK).
  *   `whitelistedForAnnotation` (*type:* `boolean()`, *default:* `nil`) - This provider is an app which should be used for query annotations. This is useful for apps which may not be already indexed by Google or are client specific.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowlistedForMediaFulfillment => boolean() | nil,
          :appIntegrationsSettings =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppIntegrationsSettings.t() | nil,
          :disabledSystemApp => boolean() | nil,
          :provider =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t() | nil,
          :routableToProviderCloud => boolean() | nil,
          :searchableOnDevice => boolean() | nil,
          :searchableOnServer => boolean() | nil,
          :supports3pPodcastPlayback => boolean() | nil,
          :supportsScreenlessInitiation => boolean() | nil,
          :whitelistedForAnnotation => boolean() | nil
        }

  field(:allowlistedForMediaFulfillment)

  field(:appIntegrationsSettings,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppIntegrationsSettings
  )

  field(:disabledSystemApp)
  field(:provider, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider)
  field(:routableToProviderCloud)
  field(:searchableOnDevice)
  field(:searchableOnServer)
  field(:supports3pPodcastPlayback)
  field(:supportsScreenlessInitiation)
  field(:whitelistedForAnnotation)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppCapabilities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppCapabilities.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiAppCapabilities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
