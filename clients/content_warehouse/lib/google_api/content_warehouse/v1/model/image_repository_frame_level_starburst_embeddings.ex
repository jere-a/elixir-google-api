# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryFrameLevelStarburstEmbeddings do
  @moduledoc """
  Each supported Starburst embedding version will have a pair of AmarnaSignalsBlobInfo and SUPFrameLevelEmbeddings. Blob info has the blob id of the corresponding embeddings and a blob write timestamp. SUPFrameLevelEmbeddings are the actual frame-level embeddings at 1 FPS. MMS callers have 3 options to fetch frame-level Starburst embeddings: 1. OPTION_NONE (default): Don't fetch frame-level Starburst embeddings. 2. OPTION_BLOB_DATA: Fetch the actual Starburst embeddings in SUPFrameLevelEmbeddings. 3. OPTION_CLONED_BLOB_ID: Clone the starburst embeddings into the target Blobstore directory. Then, fetch the cloned blob id of Starburst embeddings in AmarnaSignalsBlobInfo.

  ## Attributes

  *   `starburstV5Embeddings` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ImageRepositorySUPFrameLevelEmbeddings.t`, *default:* `nil`) - Frame-level Starburst V5 embeddings computed by SUP. See https://data.corp.google.com/su_catalog/signal/starburst:v5.
  *   `starburstV5EmbeddingsBlobInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryAmarnaSignalsBlobInfo.t`, *default:* `nil`) - Frame-level Starburst V5 embeddings blob id.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :starburstV5Embeddings =>
            GoogleApi.ContentWarehouse.V1.Model.ImageRepositorySUPFrameLevelEmbeddings.t() | nil,
          :starburstV5EmbeddingsBlobInfo =>
            GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryAmarnaSignalsBlobInfo.t() | nil
        }

  field(:starburstV5Embeddings,
    as: GoogleApi.ContentWarehouse.V1.Model.ImageRepositorySUPFrameLevelEmbeddings
  )

  field(:starburstV5EmbeddingsBlobInfo,
    as: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryAmarnaSignalsBlobInfo
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryFrameLevelStarburstEmbeddings do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryFrameLevelStarburstEmbeddings.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryFrameLevelStarburstEmbeddings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
