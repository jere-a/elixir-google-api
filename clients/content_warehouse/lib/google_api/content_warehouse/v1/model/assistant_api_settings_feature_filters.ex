# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsFeatureFilters do
  @moduledoc """
  Specification of which assistant features are allowed for a particular device or user account.

  ## Attributes

  *   `communicationsFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsCommunicationsFilter.t`, *default:* `nil`) - 
  *   `musicFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsMusicFilter.t`, *default:* `nil`) - 
  *   `newsFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsNewsFilter.t`, *default:* `nil`) - 
  *   `podcastFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsPodcastFilter.t`, *default:* `nil`) - 
  *   `searchFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsSearchFilter.t`, *default:* `nil`) - 
  *   `thirdPartyAppsFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsThirdPartyAppsFilter.t`, *default:* `nil`) - 
  *   `videoFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsVideoFilter.t`, *default:* `nil`) - 
  *   `webviewFilter` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsWebviewFilter.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :communicationsFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsCommunicationsFilter.t() | nil,
          :musicFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsMusicFilter.t() | nil,
          :newsFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsNewsFilter.t() | nil,
          :podcastFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsPodcastFilter.t() | nil,
          :searchFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsSearchFilter.t() | nil,
          :thirdPartyAppsFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsThirdPartyAppsFilter.t() | nil,
          :videoFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsVideoFilter.t() | nil,
          :webviewFilter =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsWebviewFilter.t() | nil
        }

  field(:communicationsFilter,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsCommunicationsFilter
  )

  field(:musicFilter, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsMusicFilter)
  field(:newsFilter, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsNewsFilter)
  field(:podcastFilter, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsPodcastFilter)
  field(:searchFilter, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsSearchFilter)

  field(:thirdPartyAppsFilter,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsThirdPartyAppsFilter
  )

  field(:videoFilter, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsVideoFilter)
  field(:webviewFilter, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsWebviewFilter)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsFeatureFilters do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsFeatureFilters.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsFeatureFilters do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
