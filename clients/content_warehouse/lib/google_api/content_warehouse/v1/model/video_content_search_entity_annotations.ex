# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchEntityAnnotations do
  @moduledoc """
  Entity annotations for one of the mids representing an anchor label or a query text.

  ## Attributes

  *   `category` (*type:* `String.t`, *default:* `nil`) - The Webref category that this entity belongs to e.g. "/moka/software".
  *   `confidence` (*type:* `number()`, *default:* `nil`) - The overall confidence that this entity is annotated somewhere in the label.
  *   `isRestricted` (*type:* `boolean()`, *default:* `nil`) - Whether or not this entity belongs to a set of blocklisted categories.
  *   `mid` (*type:* `String.t`, *default:* `nil`) - The Webref entity mid.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :category => String.t() | nil,
          :confidence => number() | nil,
          :isRestricted => boolean() | nil,
          :mid => String.t() | nil
        }

  field(:category)
  field(:confidence)
  field(:isRestricted)
  field(:mid)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchEntityAnnotations do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchEntityAnnotations.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.VideoContentSearchEntityAnnotations do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
