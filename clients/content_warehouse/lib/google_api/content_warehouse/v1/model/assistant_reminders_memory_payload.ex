# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersMemoryPayload do
  @moduledoc """
  Since this is stored in BE, any update on this proto needs LGTM by ARIS storage owner

  ## Attributes

  *   `hasReferencedEntityAtCreation` (*type:* `boolean()`, *default:* `nil`) - Whether the reminder created has a referenced_entity attached to it or not(go/hub-memory-payload). Since we plan to set this in Assistant reminder creation path flow, in case later the referenced_entity is removed from the reminder, then this bit might still remain true. Also in case referenced_entity is later added to reminder(for example when referenced_entity is attached by Server), then also this bit might remain false. This bit will be used to *guess* if the user has a memory-enabled AGSA, thus we'll surface the "open memory" button on hubpage. This check is not perfect, as the user might have other phones with older AGSA, so this is just a *best guess*. This field won't be stored in Memory backend, and will not be populated back when retrieving reminders.
  *   `recordId` (*type:* `String.t`, *default:* `nil`) - Id of record that is associated with Reminder. This will be set for all Assistant reminders created after the first launch of the Reminder Memory integration, see go/reminders-memory for more details. Also, this might apply to all other types of reminders.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hasReferencedEntityAtCreation => boolean() | nil,
          :recordId => String.t() | nil
        }

  field(:hasReferencedEntityAtCreation)
  field(:recordId)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersMemoryPayload do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersMemoryPayload.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantRemindersMemoryPayload do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
