# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo do
  @moduledoc """
  Robots Info encapsulates all robots.txt or related information that we know about the Document collected from multiple sources such as HTTP headers, meta robots tags etc.

  ## Attributes

  *   `contentExpiry` (*type:* `integer()`, *default:* `nil`) - time in unix time format after which this content should not be shown in the results. This in inferred from the X-Robots-Tag HTTP header with unavailable_after: Do not use this field directly. There is a column called content_expiration in Alexandria that includes this and other signals.
  *   `convertToRobotedReason` (*type:* `String.t`, *default:* `nil`) - 
  *   `disallowedReason` (*type:* `integer()`, *default:* `nil`) - 
  *   `indexifembeddedReason` (*type:* `integer()`, *default:* `nil`) - IMPORTANT: if you add a new field here, update the MergeRobotsInfo() function to merge the new field.
  *   `maxImagePreview` (*type:* `String.t`, *default:* `nil`) - Max image preview restriction applied to this data. A value of THUMBNAIL_UNSPECIFIED can be treated as though there is no restriction.
  *   `maxSnippetLength` (*type:* `String.t`, *default:* `nil`) - Max snippet preview restriction applied to this data. If this field is zero, it indicates that no snippet data can be displayed, therefore this field should be checked using has_max_snippet_length to determine if it was set.
  *   `noarchiveReason` (*type:* `integer()`, *default:* `nil`) - 
  *   `nofollowReason` (*type:* `integer()`, *default:* `nil`) - 
  *   `noimageframeoverlayReason` (*type:* `integer()`, *default:* `nil`) - 
  *   `noimageindexReason` (*type:* `integer()`, *default:* `nil`) - 
  *   `noindexReason` (*type:* `integer()`, *default:* `nil`) - Bit map of RobotedReasons values. When set to a non-zero value, the document should not be indexed or archived etc. based on the name of the tag.
  *   `nopreviewReason` (*type:* `integer()`, *default:* `nil`) - 
  *   `nosnippetReason` (*type:* `integer()`, *default:* `nil`) - 
  *   `notranslateReason` (*type:* `integer()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contentExpiry => integer() | nil,
          :convertToRobotedReason => String.t() | nil,
          :disallowedReason => integer() | nil,
          :indexifembeddedReason => integer() | nil,
          :maxImagePreview => String.t() | nil,
          :maxSnippetLength => String.t() | nil,
          :noarchiveReason => integer() | nil,
          :nofollowReason => integer() | nil,
          :noimageframeoverlayReason => integer() | nil,
          :noimageindexReason => integer() | nil,
          :noindexReason => integer() | nil,
          :nopreviewReason => integer() | nil,
          :nosnippetReason => integer() | nil,
          :notranslateReason => integer() | nil
        }

  field(:contentExpiry)
  field(:convertToRobotedReason)
  field(:disallowedReason)
  field(:indexifembeddedReason)
  field(:maxImagePreview)
  field(:maxSnippetLength)
  field(:noarchiveReason)
  field(:nofollowReason)
  field(:noimageframeoverlayReason)
  field(:noimageindexReason)
  field(:noindexReason)
  field(:nopreviewReason)
  field(:nosnippetReason)
  field(:notranslateReason)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
