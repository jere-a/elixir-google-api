# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentFetchUrlResponseMetadata do
  @moduledoc """
  Capsulate all metadata annotated from fetch server. This message will typically go through: - EmbeddedContentFetcher, or - EmbeddedLinkGetter-> DenormalizedContent -> ContentStore. And finally deposit in referenced_resources and link_info.

  ## Attributes

  *   `adsResourceType` (*type:* `String.t`, *default:* `nil`) - 
  *   `crawlStatus` (*type:* `integer()`, *default:* `nil`) - The field always exists, and has four options: UNKNOWN, CONTENT, ROBOTED and ERROR, which are defined in indexing.converter.CrawlStatus.
  *   `criticalResourceType` (*type:* `String.t`, *default:* `nil`) - 
  *   `fetchWithSmartphoneUa` (*type:* `boolean()`, *default:* `nil`) - True if the response is fetched with SMARTPHONE user agent.
  *   `isAdsResource` (*type:* `boolean()`, *default:* `nil`) - 
  *   `isCriticalResource` (*type:* `boolean()`, *default:* `nil`) - 
  *   `isTrivialResource` (*type:* `boolean()`, *default:* `nil`) - 
  *   `numTrawlerFetches` (*type:* `integer()`, *default:* `nil`) - Number of trawler fetches while fetching this URL. In most cases, this number will be 0 or 1.
  *   `rewriteMethod` (*type:* `String.t`, *default:* `nil`) - Used for logging purposes only here.
  *   `robotsInfo` (*type:* `GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo.t`, *default:* `nil`) - Note that this robots_info should only be used for noindex_reason and will only be present for TARGET_MAIN_FRAME / TARGET_SUBFRAME fetches.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adsResourceType => String.t() | nil,
          :crawlStatus => integer() | nil,
          :criticalResourceType => String.t() | nil,
          :fetchWithSmartphoneUa => boolean() | nil,
          :isAdsResource => boolean() | nil,
          :isCriticalResource => boolean() | nil,
          :isTrivialResource => boolean() | nil,
          :numTrawlerFetches => integer() | nil,
          :rewriteMethod => String.t() | nil,
          :robotsInfo => GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo.t() | nil
        }

  field(:adsResourceType)
  field(:crawlStatus)
  field(:criticalResourceType)
  field(:fetchWithSmartphoneUa)
  field(:isAdsResource)
  field(:isCriticalResource)
  field(:isTrivialResource)
  field(:numTrawlerFetches)
  field(:rewriteMethod)
  field(:robotsInfo, as: GoogleApi.ContentWarehouse.V1.Model.IndexingConverterRobotsInfo)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentFetchUrlResponseMetadata do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentFetchUrlResponseMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.IndexingEmbeddedContentFetchUrlResponseMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
