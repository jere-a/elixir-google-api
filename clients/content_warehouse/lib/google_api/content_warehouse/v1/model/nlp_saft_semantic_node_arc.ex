# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSaftSemanticNodeArc do
  @moduledoc """
  An arc contained by a source node pointing to a destination node in a directed acyclic graph.

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - Human-readable description of this arc's type (for display purposes).
  *   `implicit` (*type:* `boolean()`, *default:* `nil`) - Indicates the arc is for an implicit semantic relation between nodes, for example one that does not correspond to a grammatical relation in the text.
  *   `info` (*type:* `GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t`, *default:* `nil`) - Application-specific information about this arc.
  *   `semanticNode` (*type:* `integer()`, *default:* `nil`) - Index of the semantic node pointed to by this arc.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Arc type (akin to an edge label, or semantic operator).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :implicit => boolean() | nil,
          :info => GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet.t() | nil,
          :semanticNode => integer() | nil,
          :type => String.t() | nil
        }

  field(:description)
  field(:implicit)
  field(:info, as: GoogleApi.ContentWarehouse.V1.Model.Proto2BridgeMessageSet)
  field(:semanticNode)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftSemanticNodeArc do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSaftSemanticNodeArc.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlpSaftSemanticNodeArc do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
