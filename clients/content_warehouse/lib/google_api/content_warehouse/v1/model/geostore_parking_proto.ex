# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingProto do
  @moduledoc """
  Used to describe the parking facilities provided by or available to a feature. Features of TYPE_ROAD or TYPE_COMPOUND can have a ParkingProto (with parking_provider_feature unset) that describes the parking facilities provided by that feature. Features of TYPE_COMPOUND or TYPE_ESTABLISHMENT_POI can have a ParkingProto (with parking_provider_feature set) to indicate that the feature has dedicated parking and provide details about it, and defer some details of the parking facilities to the referent feature(s). ParkingProto is maintained by the Harbor Pilot team (go/harbor-pilot). Detailed modeling information is described at go/parking-schema.

  ## Attributes

  *   `allowance` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingAllowanceProto.t)`, *default:* `nil`) - Describes the parking allowances for the feature, which are the situations and requirements under which one is permitted to park at the feature’s parking facilities, or discounts that a user may be eligible for.
  *   `openingHours` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreOpeningHoursProto.t`, *default:* `nil`) - Hours in which the parking facility is open; that is, permits both arrivals and departures of the facility. Should only be set on compounds (i.e. parking lots or garages); roads are considered to always be “open,” though parking at certain times may be prohibited via restrictions. If unset on a compound, this suggests we don’t know the opening hours, or they are the same as the hours of the entity for which this feature offers parking facilities.
  *   `parkingAvailable` (*type:* `boolean()`, *default:* `nil`) - Indicates whether long-term parking is available at the feature; if true, long-term parking is available at the feature and parking allowances may be present on this feature, or parking_provider_feature may indicate deferred parking feature(s). If false, this is an explicit statement that there is no long-term parking associated with this feature. If unset, we don't know whether there is long-term parking associated with this feature. If false or unset, only additional restrictions or short-term allowances will be populated.
  *   `parkingProviderFeature` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t)`, *default:* `nil`) - If empty, indicates that the feature containing this ParkingProto provides parking facilities, which are described by this proto. If nonempty, indicates that the feature with this ParkingProto does not contain parking facilities itself, but visitors of this feature may use the parking available to the referent feature(s). The referent feature(s) may themselves contain parking facilities or defer to other features. A ParkingProto may defer parking details to another feature, but still include its own data. This suggests that a visitor of the referrer feature is eligible for different rates or discounts. The data in these fields applies transitively, and any fields in a referrer may be applied to the referent (for a visitor of the referrer).
  *   `restriction` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingRestrictionProto.t)`, *default:* `nil`) - Describes any parking restrictions that apply to this feature. Should only be set on road segments for which parking is explicitly prohibited for some or all times; for roads which do not prohibit parking and for all other facilities, the ability to park should be expressed using allowances. In the instance that both a restriction and an allowance applies at a given time, restrictions always have precedence over the same parking allowances. However, explicit short-term allowances (PICKUP_GOODS, PICKUP_PASSENGERS) take precedence over general NO_PARKING, NO_STANDING, or NO_STOPPING restrictions.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowance =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingAllowanceProto.t()) | nil,
          :openingHours =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreOpeningHoursProto.t() | nil,
          :parkingAvailable => boolean() | nil,
          :parkingProviderFeature =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t()) | nil,
          :restriction =>
            list(GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingRestrictionProto.t()) | nil
        }

  field(:allowance,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingAllowanceProto,
    type: :list
  )

  field(:openingHours, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreOpeningHoursProto)
  field(:parkingAvailable)

  field(:parkingProviderFeature,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto,
    type: :list
  )

  field(:restriction,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingRestrictionProto,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostoreParkingProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
