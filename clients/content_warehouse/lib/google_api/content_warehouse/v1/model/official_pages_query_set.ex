# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.OfficialPagesQuerySet do
  @moduledoc """


  ## Attributes

  *   `queries` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.OfficialPagesOfficialKey.t)`, *default:* `nil`) - 
  *   `queryCountryLanguageFingerprints` (*type:* `list(String.t)`, *default:* `nil`) - This is the fingerprint of the OfficialKey queries in the queries field. The index of a fingerprint in this field corresponds to the index of the fingerprinted query in the queries field. The fingerprint is produced with the QueryCountryLanguageFingerprint function in external-utils.h
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :queries =>
            list(GoogleApi.ContentWarehouse.V1.Model.OfficialPagesOfficialKey.t()) | nil,
          :queryCountryLanguageFingerprints => list(String.t()) | nil
        }

  field(:queries, as: GoogleApi.ContentWarehouse.V1.Model.OfficialPagesOfficialKey, type: :list)
  field(:queryCountryLanguageFingerprints, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.OfficialPagesQuerySet do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.OfficialPagesQuerySet.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.OfficialPagesQuerySet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
