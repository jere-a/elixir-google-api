# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometry do
  @moduledoc """
  Representation of geometry including geometric primitives which are used as building blocks to construct geometries of varying complexity. Geometries vary both in type and in level-of-detail, enabling representation of any shape at any level of granularity. All geometries are ultimately composed of `MultiPoint`s, which reference the actual vertices. Only linear and planar shapes are allowed, no curves or parametric surfaces.

  ## Attributes

  *   `lod` (*type:* `String.t`, *default:* `nil`) - Level-of-detail (LoD) indicates how intricate the geometric representation is. May be a single digit per CityGML standards or X.Y per TU Delft (visual depiction at https://3d.bk.tudelft.nl/lod/). `CityObject`s may have multiple geometries with the same LoD.
  *   `multipoint` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiPoint.t`, *default:* `nil`) - For geometries consisting of a single point, line, or loop.
  *   `multisurface` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiSurface.t`, *default:* `nil`) - For geometries consisting of a collection of surfaces.
  *   `semantics` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySemantic.t)`, *default:* `nil`) - Predefined semantics that may be referenced from geometric primitives.
  *   `solid` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySolid.t`, *default:* `nil`) - For geometries consisting of a watertight 3D shape.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :lod => String.t() | nil,
          :multipoint =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiPoint.t()
            | nil,
          :multisurface =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiSurface.t()
            | nil,
          :semantics =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySemantic.t()
            )
            | nil,
          :solid =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySolid.t()
            | nil
        }

  field(:lod)

  field(:multipoint,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiPoint
  )

  field(:multisurface,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometryMultiSurface
  )

  field(:semantics,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySemantic,
    type: :list
  )

  field(:solid,
    as: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometrySolid
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometry do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometry.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.GeostoreCityJsonProtoCityObjectGeometry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
