# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity do
  @moduledoc """


  ## Attributes

  *   `modifier` (*type:* `String.t`, *default:* `nil`) - For internal use - DateTime subgrammar users should look at Duration.modifier. = MORE in [3 more days].
  *   `number` (*type:* `float()`, *default:* `nil`) - = 3 in "3 milliseconds".
  *   `numberSpan` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t`, *default:* `nil`) - This field keeps the span info of the number element in a quantity expression, which is useful for downstream components to obtain the number annotations inside a quantity when necessary.
  *   `symbolicQuantity` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity.t)`, *default:* `nil`) - Quantities are typically converted into milliseconds, regardless of the units the user used. Sometimes this loses crucial information, e.g., "5 days" vs "5 nights". When quantities are converted to milliseconds, 'symbolic_quantity' will contain the sequence of units that the user actually supplied. This can be more than one element in cases like "one minute and 30 seconds". In cases where 'symbolic_quantity' has more than one element, THERE IS NO GUARANTEED ORDER between elements.
  *   `unit` (*type:* `String.t`, *default:* `nil`) - = MILLISECOND in "3 milliseconds".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :modifier => String.t() | nil,
          :number => float() | nil,
          :numberSpan =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData.t() | nil,
          :symbolicQuantity =>
            list(GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity.t()) | nil,
          :unit => String.t() | nil
        }

  field(:modifier)
  field(:number)
  field(:numberSpan, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingAnnotationEvalData)

  field(:symbolicQuantity,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity,
    type: :list
  )

  field(:unit)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeQuantity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
