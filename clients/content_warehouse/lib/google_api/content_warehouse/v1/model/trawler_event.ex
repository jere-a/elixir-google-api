# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.TrawlerEvent do
  @moduledoc """
  Event is for logging interesting events that happen during a url fetch. Interesting events include "fetch start", "url rejected", etc. The events are written to binary logs together with the request and reply messages. If the same event occurs multiple times consecutively, We record the time of the first three instances in EarliestTimeStamp but omit the rest. We keep track the total number of occurrences in NumOccurrences and the timestamp of the last occurrence is kept in TimeStamp field.

  ## Attributes

  *   `ID` (*type:* `String.t`, *default:* `nil`) - 
  *   `Msg` (*type:* `String.t`, *default:* `nil`) - 
  *   `NumOccurrences` (*type:* `integer()`, *default:* `nil`) - 
  *   `OldestTimeStampInUS` (*type:* `list(String.t)`, *default:* `nil`) - Limited to 3.
  *   `TimeStampInUS` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ID => String.t() | nil,
          :Msg => String.t() | nil,
          :NumOccurrences => integer() | nil,
          :OldestTimeStampInUS => list(String.t()) | nil,
          :TimeStampInUS => String.t() | nil
        }

  field(:ID)
  field(:Msg)
  field(:NumOccurrences)
  field(:OldestTimeStampInUS, type: :list)
  field(:TimeStampInUS)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerEvent do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.TrawlerEvent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.TrawlerEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
