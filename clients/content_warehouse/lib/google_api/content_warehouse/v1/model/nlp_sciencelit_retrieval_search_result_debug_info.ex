# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitRetrievalSearchResultDebugInfo do
  @moduledoc """
  Returned by Delver API in SearchResult.debug_info.

  ## Attributes

  *   `articleData` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitArticleData.t`, *default:* `nil`) - Only set if RequestOptions.debug_return_article_data is true.
  *   `goldDocid` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `goldSnippets` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `isGold` (*type:* `boolean()`, *default:* `nil`) - Not set by server; only used by evals.
  *   `rerankingScore` (*type:* `number()`, *default:* `nil`) - See SearchResultInternal.reranking_score.
  *   `reverseRerankingOrder` (*type:* `integer()`, *default:* `nil`) - See SearchResultInternal.reverse_reranking_order.
  *   `sectionIrScore` (*type:* `map()`, *default:* `nil`) - See SearchResultInternal.section_ir_score.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :articleData => GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitArticleData.t() | nil,
          :goldDocid => list(String.t()) | nil,
          :goldSnippets => list(String.t()) | nil,
          :isGold => boolean() | nil,
          :rerankingScore => number() | nil,
          :reverseRerankingOrder => integer() | nil,
          :sectionIrScore => map() | nil
        }

  field(:articleData, as: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitArticleData)
  field(:goldDocid, type: :list)
  field(:goldSnippets, type: :list)
  field(:isGold)
  field(:rerankingScore)
  field(:reverseRerankingOrder)
  field(:sectionIrScore, type: :map)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitRetrievalSearchResultDebugInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitRetrievalSearchResultDebugInfo.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSciencelitRetrievalSearchResultDebugInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
