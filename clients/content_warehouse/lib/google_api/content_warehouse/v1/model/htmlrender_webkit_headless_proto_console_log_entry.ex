# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoConsoleLogEntry do
  @moduledoc """
  ConsoleLogEntry message stores messages logged by the renderer to the console. Typically error messages related to JS execution, parsing, any CSS errors, etc are logged by the renderer to the console. Next id: 7.

  ## Attributes

  *   `lineNumber` (*type:* `integer()`, *default:* `nil`) - Line number of the document which caused an error.
  *   `message` (*type:* `String.t`, *default:* `nil`) - Message which indicates the nature of the error. e.g. parse error, reference error (happens when javascript functions or variables are not resolvable) etc.
  *   `messageLevel` (*type:* `String.t`, *default:* `nil`) - message level
  *   `sourceUrl` (*type:* `String.t`, *default:* `nil`) - The url of the document which has the error.
  *   `stackTrace` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoScriptStackFrame.t)`, *default:* `nil`) - Stack trace which functions were called when generating the console log. The first frame is the innermost one.
  *   `timestamp` (*type:* `float()`, *default:* `nil`) - Wall time (s) when the log entry was recorded
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :lineNumber => integer() | nil,
          :message => String.t() | nil,
          :messageLevel => String.t() | nil,
          :sourceUrl => String.t() | nil,
          :stackTrace =>
            list(
              GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoScriptStackFrame.t()
            )
            | nil,
          :timestamp => float() | nil
        }

  field(:lineNumber)
  field(:message)
  field(:messageLevel)
  field(:sourceUrl)

  field(:stackTrace,
    as: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoScriptStackFrame,
    type: :list
  )

  field(:timestamp)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoConsoleLogEntry do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoConsoleLogEntry.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.HtmlrenderWebkitHeadlessProtoConsoleLogEntry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
