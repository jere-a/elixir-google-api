# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityActionsTimer do
  @moduledoc """
  Conceptually, timers are clocks that count down from an initial duration and notify when they reach 0. In practice, as a timer is running, it holds a stable expiration time and computes the remaining duration using the current time. When a timer is paused, it holds a stable remaining duration.

  ## Attributes

  *   `creationTime` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t`, *default:* `nil`) - The time when this timer was created
  *   `device` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDeviceSettings.t`, *default:* `nil`) - Identifies the device this timer belongs to.
  *   `expireTime` (*type:* `String.t`, *default:* `nil`) - When not paused: the time the timer is (or was) scheduled to expire, in milliseconds since the Unix epoch. This should be deprecated and replaced by the expire_timer_time with DateTime type once DateTime proto includes unix timestamp (b/63636831).
  *   `expireTimerTime` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t`, *default:* `nil`) - This is currently being only used only for the response generation when the user describe the expired datatime as a search constraint. We will used it for everything else once that for filtering once DateTime proto includes unix timestamp (b/63636831) and expire_time is deprecated.
  *   `id` (*type:* `String.t`, *default:* `nil`) - A string key used as an identifier to this timer, unique for a given Provider.
  *   `label` (*type:* `String.t`, *default:* `nil`) - The label, provided by a user, associated with this timer.
  *   `lastUpdated` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t`, *default:* `nil`) - The time when this timer was last updated (creation, paused, resumed, etc.)
  *   `originalDuration` (*type:* `String.t`, *default:* `nil`) - The duration of the timer when it was started, in milliseconds.
  *   `originalTimerDuration` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration.t`, *default:* `nil`) - The duration set for the timer. The DateTimeModifier field is ignored. This field is currently only experimental until we switch the Dialog code and gramnar to the new format.
  *   `provider` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t`, *default:* `nil`) - The provider that owns this alarm. For Android, this includes the app that owns this alarm, where an intent should be sent to modify it.
  *   `remainingDuration` (*type:* `String.t`, *default:* `nil`) - When PAUSED: the remaining duration in milliseconds.
  *   `remainingTimerDuration` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration.t`, *default:* `nil`) - The duration remained for the timer. This is needed because there is no expiration date for paused timer. The DateTimeModifier field is ignored. This field is currently only experimental until we switch the Dialog code and gramnar to the new format.
  *   `ringtone` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityActionsRingtone.t`, *default:* `nil`) - The ringtone will be played when the timer fires, it will replace the beep sound if it is not empty.
  *   `ringtoneTaskMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesRingtoneTaskMetadata.t`, *default:* `nil`) - Ringtone Task Metadata information used to generate sound for firing the timer.
  *   `room` (*type:* `GoogleApi.ContentWarehouse.V1.Model.QualityActionsRoom.t`, *default:* `nil`) - Contains info about the room the timer is in
  *   `status` (*type:* `String.t`, *default:* `nil`) - The current status of the timer.
  *   `vibrate` (*type:* `boolean()`, *default:* `nil`) - Whether or not the device will vibrate when the timer fires.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :creationTime => GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t() | nil,
          :device =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDeviceSettings.t() | nil,
          :expireTime => String.t() | nil,
          :expireTimerTime =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime.t() | nil,
          :id => String.t() | nil,
          :label => String.t() | nil,
          :lastUpdated => GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp.t() | nil,
          :originalDuration => String.t() | nil,
          :originalTimerDuration =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration.t() | nil,
          :provider =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider.t() | nil,
          :remainingDuration => String.t() | nil,
          :remainingTimerDuration =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration.t() | nil,
          :ringtone => GoogleApi.ContentWarehouse.V1.Model.QualityActionsRingtone.t() | nil,
          :ringtoneTaskMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesRingtoneTaskMetadata.t()
            | nil,
          :room => GoogleApi.ContentWarehouse.V1.Model.QualityActionsRoom.t() | nil,
          :status => String.t() | nil,
          :vibrate => boolean() | nil
        }

  field(:creationTime, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp)
  field(:device, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiSettingsDeviceSettings)
  field(:expireTime)

  field(:expireTimerTime,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDateTime
  )

  field(:id)
  field(:label)
  field(:lastUpdated, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiTimestamp)
  field(:originalDuration)

  field(:originalTimerDuration,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration
  )

  field(:provider, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesProvider)
  field(:remainingDuration)

  field(:remainingTimerDuration,
    as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingDatetimeDuration
  )

  field(:ringtone, as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsRingtone)

  field(:ringtoneTaskMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiCoreTypesRingtoneTaskMetadata
  )

  field(:room, as: GoogleApi.ContentWarehouse.V1.Model.QualityActionsRoom)
  field(:status)
  field(:vibrate)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsTimer do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityActionsTimer.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityActionsTimer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
