# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabelProvider do
  @moduledoc """
  If Provider group is not present the provider is the legacy classifiers (with id 0) and the label_value provided by Google is the global_label_value.

  ## Attributes

  *   `feed` (*type:* `boolean()`, *default:* `nil`) - This field is intended to be deprecated. If id == 0 and feed is true it means this label is from a feed. If id == 0 and feed is false, this label is from "Google" If id != 0, feed is meaningless.
  *   `id` (*type:* `String.t`, *default:* `nil`) - We are currently using this field to indicate an id of the set of classifiers that produced this label. This deviates from the original intention. Also see ClassifierDescription and refer to http://go/genre-labels-provider-id for further info.
  *   `labelBucket` (*type:* `integer()`, *default:* `nil`) - A byte-size value representing 64 * (1 + global_label_value). Use it instead of global_label_value to save on label storage.
  *   `labelValue` (*type:* `number()`, *default:* `nil`) - 
  *   `name` (*type:* `String.t`, *default:* `nil`) - This name will only sometimes be filled in! Frontends can in general expect this to be filled in, but it will not usually be stored in backends.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :feed => boolean() | nil,
          :id => String.t() | nil,
          :labelBucket => integer() | nil,
          :labelValue => number() | nil,
          :name => String.t() | nil
        }

  field(:feed)
  field(:id)
  field(:labelBucket)
  field(:labelValue)
  field(:name)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabelProvider do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabelProvider.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.QualityLabelsGoogleLabelDataLabelProvider do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
