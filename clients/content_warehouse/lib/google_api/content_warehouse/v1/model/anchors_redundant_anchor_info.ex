# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AnchorsRedundantAnchorInfo do
  @moduledoc """
  NOTE: in docjoins, the following anchor sampling information is only ## available in the first record of a document (under the same docid). The total number of redundant anchors dropped per (domain, text) in linkextractor. If we receive a large number of anchors from a particular domain, then we'll throw out all but a sampling of them from that domain. The data is sorted by the (domain,text) pairs. This field is not populated by Alexandria, which uses cdoc.anchor_stats instead.

  ## Attributes

  *   `anchorsDropped` (*type:* `String.t`, *default:* `nil`) - 
  *   `domain` (*type:* `String.t`, *default:* `nil`) - 
  *   `text` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :anchorsDropped => String.t() | nil,
          :domain => String.t() | nil,
          :text => String.t() | nil
        }

  field(:anchorsDropped)
  field(:domain)
  field(:text)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AnchorsRedundantAnchorInfo do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AnchorsRedundantAnchorInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AnchorsRedundantAnchorInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
