# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AppsPeopleActivityStreamqualityDistillerEngagements do
  @moduledoc """
  Stores the number of different kind of user engagement actions. Abuse Report is also consider an engagement. Currently we only have abuse report engagements but in future we might add other types of engagements as well.

  ## Attributes

  *   `reportCompromised` (*type:* `String.t`, *default:* `nil`) - Corresponds on "This account might be compromised or hacked" reporting action.
  *   `reportHarassment` (*type:* `String.t`, *default:* `nil`) - Corresponds on "Harassment or bullying" reporting action.
  *   `reportHate` (*type:* `String.t`, *default:* `nil`) - Corresponds on "Hate speach or graphic violence" reporting action.
  *   `reportPorn` (*type:* `String.t`, *default:* `nil`) - Corresponds on "Pornography or sexually explicit material" reporting action.
  *   `reportSpam` (*type:* `String.t`, *default:* `nil`) - Corresponds on "Unwanted commercial content or spam" reporting action.
  *   `serveCount` (*type:* `String.t`, *default:* `nil`) - Number of times this activity was served out of asbe/stanza.
  *   `timeSec` (*type:* `String.t`, *default:* `nil`) - Timestamp in seconds for which time this record is valid.
  *   `ytThumbsDown` (*type:* `String.t`, *default:* `nil`) - Corresponds on Distiller comment thumbs down action.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :reportCompromised => String.t() | nil,
          :reportHarassment => String.t() | nil,
          :reportHate => String.t() | nil,
          :reportPorn => String.t() | nil,
          :reportSpam => String.t() | nil,
          :serveCount => String.t() | nil,
          :timeSec => String.t() | nil,
          :ytThumbsDown => String.t() | nil
        }

  field(:reportCompromised)
  field(:reportHarassment)
  field(:reportHate)
  field(:reportPorn)
  field(:reportSpam)
  field(:serveCount)
  field(:timeSec)
  field(:ytThumbsDown)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleActivityStreamqualityDistillerEngagements do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AppsPeopleActivityStreamqualityDistillerEngagements.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.AppsPeopleActivityStreamqualityDistillerEngagements do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
