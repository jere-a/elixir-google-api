# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilities do
  @moduledoc """
  These capabilities represent the tactile features associated with the device. This includes, for example, whether the device has a screen, how big the screen is, and privacy of the screen. Next ID: 11

  ## Attributes

  *   `fontScaleFactor` (*type:* `number()`, *default:* `nil`) - The scale factor used to convert Scalable Pixel (SP) units to Density-independent Pixel (DP) units (DP = SP * scale factor). Fonts are measured in units of SP, and on some platforms such as Android the SP to DP scale factor can be affected by the font size a user selects in accessibility settings.
  *   `inputType` (*type:* `list(String.t)`, *default:* `nil`) - The types of input that this screen supports. Note that this can be empty in which case the screen's input type is unknown.
  *   `mask` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesMask.t`, *default:* `nil`) - Mask defined for this device, if any.
  *   `protoLayoutTargetedSchema` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesProtoLayoutVersion.t`, *default:* `nil`) - The targeted schema version for ProtoLayout requests.
  *   `resolution` (*type:* `GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesResolution.t`, *default:* `nil`) - If this field is absent, the resolution of the screen is unknown.
  *   `screenOff` (*type:* `boolean()`, *default:* `nil`) - If screen is turned off.
  *   `screenStateDetection` (*type:* `String.t`, *default:* `nil`) - The ability of the client to correctly report screen state.
  *   `supportedRenderingFormat` (*type:* `String.t`, *default:* `nil`) - The primary supported rendering format for display on the device's screen. This may be used to determine what format of card to be returned when rendering cards.
  *   `supportedScreenStates` (*type:* `list(String.t)`, *default:* `nil`) - The screen states that the client supports. The current screen state is specified in DeviceProperties.screen.
  *   `visionHelpEnabled` (*type:* `boolean()`, *default:* `nil`) - Whether the device enabled vision help features in accessibility settings. The settings is config in Assistant App and on-device settings, and stored in footprints. When enabled, font, color and TTS will be adjusted.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fontScaleFactor => number() | nil,
          :inputType => list(String.t()) | nil,
          :mask =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesMask.t() | nil,
          :protoLayoutTargetedSchema =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesProtoLayoutVersion.t()
            | nil,
          :resolution =>
            GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesResolution.t() | nil,
          :screenOff => boolean() | nil,
          :screenStateDetection => String.t() | nil,
          :supportedRenderingFormat => String.t() | nil,
          :supportedScreenStates => list(String.t()) | nil,
          :visionHelpEnabled => boolean() | nil
        }

  field(:fontScaleFactor)
  field(:inputType, type: :list)
  field(:mask, as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesMask)

  field(:protoLayoutTargetedSchema,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesProtoLayoutVersion
  )

  field(:resolution,
    as: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilitiesResolution
  )

  field(:screenOff)
  field(:screenStateDetection)
  field(:supportedRenderingFormat)
  field(:supportedScreenStates, type: :list)
  field(:visionHelpEnabled)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilities.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.AssistantApiScreenCapabilities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
