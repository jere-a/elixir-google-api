# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaDocument do
  @moduledoc """
  A single document.

  ## Attributes

  *   `author` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t)`, *default:* `nil`) - The author(s) of this document.
  *   `bytes` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The bytes in this document.
  *   `characters` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The characters in this document.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The identifier of this document.
  *   `languageCode` (*type:* `list(String.t)`, *default:* `nil`) - A set of BCP-47 codes indicating the language(s) of this document.
  *   `languageSpans` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The language spans in this document.
  *   `mentions` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The mentions in this document.
  *   `paragraphs` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The paragraphs in this document.
  *   `sentences` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The sentences in this document.
  *   `text` (*type:* `String.t`, *default:* `nil`) - The text of this document. Must contain valid UTF-8.
  *   `tokens` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The tokens in this document.
  *   `url` (*type:* `String.t`, *default:* `nil`) - The url of this document.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :author => list(GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t()) | nil,
          :bytes => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :characters => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :id => String.t() | nil,
          :languageCode => list(String.t()) | nil,
          :languageSpans => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :mentions => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :paragraphs => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :sentences => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :text => String.t() | nil,
          :tokens => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :url => String.t() | nil
        }

  field(:author, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex, type: :list)
  field(:bytes, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:characters, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:id)
  field(:languageCode, type: :list)
  field(:languageSpans, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:mentions, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:paragraphs, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:sentences, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:text)
  field(:tokens, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:url)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaDocument do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaDocument.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaDocument do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
