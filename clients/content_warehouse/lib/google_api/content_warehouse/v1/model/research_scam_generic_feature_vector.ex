# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVector do
  @moduledoc """
  ===================================================================== # GenericFeatureVector Last tag used: 23

  ## Attributes

  *   `classLabel` (*type:* `String.t`, *default:* `nil`) - The class label of this datapoint. This should be populated if ScaM is being used for nearest-neighbor-based classification.
  *   `crowding` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorCrowding.t`, *default:* `nil`) - 
  *   `dataIdStr` (*type:* `String.t`, *default:* `nil`) - Optional point id that can contain an arbitrary (unrestricted in content) value except when the data is provided via SSTable (sharded or not). In the case of SSTable the data_id_str must be set for _all_ points in all shards or the SSTable keys will be used as the values for the data_id_str of the respective points. In either SSTable case--data_id_str provided explicitly or via the key--the values must be unique across all shards.
  *   `expirationTimestamp` (*type:* `DateTime.t`, *default:* `nil`) - A timestamp after which this datapoint is considered no longer valid and is eligible for deletion. The exact meaning varies with application/configuration.
  *   `featureDim` (*type:* `String.t`, *default:* `nil`) -  - Optionally explicitly specifies the dimensionality of this vector. For dense vectors, this is ignored and, dimensionality is inferred from the number of values specified, and must be identical to this, or unspecified. For sparse vectors, the default value is correct for most users, and allows use of 64-bit hash values for feature indices. If you're using sparse vectors with a limited range of dimension indices and want to do K-Means clustering with them, you may want to specify this explicitly.
  *   `featureIndex` (*type:* `list(String.t)`, *default:* `nil`) -  - for SPARSE vectors, specifies indices of the nonzero dimensions whose values are specified by the , , or field. This field is not used when specifying dense vectors.
  *   `featureType` (*type:* `String.t`, *default:* `nil`) - Describes the type of feature values.
  *   `featureValueDouble` (*type:* `list(float())`, *default:* `nil`) - 
  *   `featureValueFloat` (*type:* `list(number())`, *default:* `nil`) - Actual feature vector. Only one of the following should be populated. This list has to be kept in sync with FeatureType enum. NOTES: Binary features are stored as ones or zeroes in feature_value_int64. Floating point values (feature_value_float, feature_value_double) may not be NaN.
  *   `featureValueInt64` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `featureValueString` (*type:* `String.t`, *default:* `nil`) - 
  *   `fixedPointMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorFixedPointMetadata.t`, *default:* `nil`) - 
  *   `internalOnlyIsSecondaryPartition` (*type:* `boolean()`, *default:* `nil`) - copybara:strip_begin INTERNAL USE ONLY! The ScaM Team reserves the right to remove this field and reuse its proto tag without notice. DO NOT USE outside of build_shards_pipeline! This field is used inside build_shards_pipeline to indicate whether this GFV is residing in its secondary (vs. primary) partition. copybara:strip_end
  *   `normType` (*type:* `String.t`, *default:* `nil`) - Describes if data has been normalized and the type.
  *   `queryMetadata` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ResearchScamQueryMetadata.t`, *default:* `nil`) - copybara:strip_begin A field that contains metadata information when the datapoint is acting as a query. copybara:strip_end
  *   `restrictTokens` (*type:* `GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorRestrictTokens.t`, *default:* `nil`) - copybara:strip_end_and_replace reserved 15;
  *   `tokens` (*type:* `list(integer())`, *default:* `nil`) - 
  *   `userinfo` (*type:* `String.t`, *default:* `nil`) - This field allows application-specific metadata to be stored in a GFV. This information may be used by custom binaries or in pre- or postprocessing outside of ScaM. Use cases include but are not limited to: * Dataset IDs, if multiple datasets are multiplexed into one physical file or network location. * An alternative, possibly more human-readable representation of the data represented by this GFV, for e.g. debugging purposes. * Outputting the contents of this field verbatim to the metadata field of the NearestNeighbors.Neighbor proto.
  *   `weight` (*type:* `number()`, *default:* `nil`) - DEPRECATED fields. Ignored by ScaM binaries. Do not use.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :classLabel => String.t() | nil,
          :crowding =>
            GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorCrowding.t() | nil,
          :dataIdStr => String.t() | nil,
          :expirationTimestamp => DateTime.t() | nil,
          :featureDim => String.t() | nil,
          :featureIndex => list(String.t()) | nil,
          :featureType => String.t() | nil,
          :featureValueDouble => list(float()) | nil,
          :featureValueFloat => list(number()) | nil,
          :featureValueInt64 => list(String.t()) | nil,
          :featureValueString => String.t() | nil,
          :fixedPointMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorFixedPointMetadata.t()
            | nil,
          :internalOnlyIsSecondaryPartition => boolean() | nil,
          :normType => String.t() | nil,
          :queryMetadata =>
            GoogleApi.ContentWarehouse.V1.Model.ResearchScamQueryMetadata.t() | nil,
          :restrictTokens =>
            GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorRestrictTokens.t()
            | nil,
          :tokens => list(integer()) | nil,
          :userinfo => String.t() | nil,
          :weight => number() | nil
        }

  field(:classLabel)

  field(:crowding,
    as: GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorCrowding
  )

  field(:dataIdStr)
  field(:expirationTimestamp, as: DateTime)
  field(:featureDim)
  field(:featureIndex, type: :list)
  field(:featureType)
  field(:featureValueDouble, type: :list)
  field(:featureValueFloat, type: :list)
  field(:featureValueInt64, type: :list)
  field(:featureValueString)

  field(:fixedPointMetadata,
    as: GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorFixedPointMetadata
  )

  field(:internalOnlyIsSecondaryPartition)
  field(:normType)
  field(:queryMetadata, as: GoogleApi.ContentWarehouse.V1.Model.ResearchScamQueryMetadata)

  field(:restrictTokens,
    as: GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVectorRestrictTokens
  )

  field(:tokens, type: :list)
  field(:userinfo)
  field(:weight)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVector do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVector.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ResearchScamGenericFeatureVector do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
