# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageQualitySensitiveMediaOrPeopleEntities do
  @moduledoc """
  Goldmine annotation in the CDoc to store the hrid of the 5 entities with higher topicality in the document. Used by the Skin Tone Twiddler to determine if the result set shows mostly one specific KG entity. go/result-set-signal

  ## Attributes

  *   `mediaEntitiesId` (*type:* `list(String.t)`, *default:* `nil`) - Similar to above, but for media entities (movie name, fictional character, musical band)
  *   `peopleEntitiesId` (*type:* `list(String.t)`, *default:* `nil`) - hrid of the 5 people entities with higher topicality in the document
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :mediaEntitiesId => list(String.t()) | nil,
          :peopleEntitiesId => list(String.t()) | nil
        }

  field(:mediaEntitiesId, type: :list)
  field(:peopleEntitiesId, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageQualitySensitiveMediaOrPeopleEntities do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageQualitySensitiveMediaOrPeopleEntities.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.ImageQualitySensitiveMediaOrPeopleEntities do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
