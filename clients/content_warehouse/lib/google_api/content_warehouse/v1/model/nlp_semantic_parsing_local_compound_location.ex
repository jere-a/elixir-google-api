# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalCompoundLocation do
  @moduledoc """


  ## Attributes

  *   `joiner` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalJoiner.t`, *default:* `nil`) - 
  *   `location1` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocation.t`, *default:* `nil`) - 
  *   `location2` (*type:* `GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocation.t`, *default:* `nil`) - If location_2 is absent, it should likely be interpreted as an implicit "here". For example, "nearest Starbucks" will be represented as a compound location with "Starbucks" as location_1, "nearest" as the joiner, and empty location_2.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :joiner => GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalJoiner.t() | nil,
          :location1 =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocation.t() | nil,
          :location2 =>
            GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocation.t() | nil
        }

  field(:joiner, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalJoiner)
  field(:location1, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocation)
  field(:location2, as: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalLocation)
end

defimpl Poison.Decoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalCompoundLocation do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalCompoundLocation.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ContentWarehouse.V1.Model.NlpSemanticParsingLocalCompoundLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
