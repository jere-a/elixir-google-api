# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.GeostorePropertyValueStatusProto do
  @moduledoc """
  PropertyValueStatusProto specifies what we know about a field corresponding to FeaturePropertyId's value in the absence of any specific value. For now, it just indicates when we know that there is no value. Eventually it might also indicate that we know it has value, just not what it is, etc.

  ## Attributes

  *   `propertyId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto.t`, *default:* `nil`) - The property ID whose value status is defined by this proto.
  *   `valueStatus` (*type:* `String.t`, *default:* `nil`) - `value_status` specifies whether the feature has a value for the property. This should always be set to something other than the default value (`PROPERTY_VALUE_STATUS_UNSPECIFIED`).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :propertyId =>
            GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto.t() | nil,
          :valueStatus => String.t() | nil
        }

  field(:propertyId, as: GoogleApi.ContentWarehouse.V1.Model.GeostoreFeaturePropertyIdProto)
  field(:valueStatus)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostorePropertyValueStatusProto do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.GeostorePropertyValueStatusProto.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.GeostorePropertyValueStatusProto do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
