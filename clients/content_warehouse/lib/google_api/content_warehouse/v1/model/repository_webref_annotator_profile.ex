# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotatorProfile do
  @moduledoc """
  A message to collect annotator performance data.

  ## Attributes

  *   `numCandidateMentions` (*type:* `integer()`, *default:* `nil`) - 
  *   `numEntities` (*type:* `integer()`, *default:* `nil`) - 
  *   `numMentions` (*type:* `integer()`, *default:* `nil`) - 
  *   `numTokens` (*type:* `integer()`, *default:* `nil`) - 
  *   `processorTimingsRoot` (*type:* `GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProcessorTiming.t`, *default:* `nil`) - Root/total of the timings from all the processors that worked on the given document or query.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :numCandidateMentions => integer() | nil,
          :numEntities => integer() | nil,
          :numMentions => integer() | nil,
          :numTokens => integer() | nil,
          :processorTimingsRoot =>
            GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProcessorTiming.t() | nil
        }

  field(:numCandidateMentions)
  field(:numEntities)
  field(:numMentions)
  field(:numTokens)

  field(:processorTimingsRoot,
    as: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefProcessorTiming
  )
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotatorProfile do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotatorProfile.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.RepositoryWebrefAnnotatorProfile do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
