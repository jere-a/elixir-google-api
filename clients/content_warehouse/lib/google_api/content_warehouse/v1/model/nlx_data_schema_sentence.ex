# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaSentence do
  @moduledoc """
  A single sentence or utterance.

  ## Attributes

  *   `bytes` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The bytes in this sentence.
  *   `characters` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The characters in this sentence.
  *   `document` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t`, *default:* `nil`) - The document that contains this sentence.
  *   `paragraph` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t`, *default:* `nil`) - The paragraph that contains this sentence.
  *   `text` (*type:* `String.t`, *default:* `nil`) - The text of this sentence. Must contain valid UTF-8.
  *   `tokens` (*type:* `GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t`, *default:* `nil`) - The tokens in this sentence.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bytes => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :characters => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil,
          :document => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t() | nil,
          :paragraph => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex.t() | nil,
          :text => String.t() | nil,
          :tokens => GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan.t() | nil
        }

  field(:bytes, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:characters, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
  field(:document, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex)
  field(:paragraph, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerIndex)
  field(:text)
  field(:tokens, as: GoogleApi.ContentWarehouse.V1.Model.MultiscalePointerSpan)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaSentence do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaSentence.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.NlxDataSchemaSentence do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
