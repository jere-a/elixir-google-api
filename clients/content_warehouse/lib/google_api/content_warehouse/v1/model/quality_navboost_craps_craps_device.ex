# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsCrapsDevice do
  @moduledoc """
  CrapsDevice has the gws interface, gws tier and operating system for events from QSessions.

  ## Attributes

  *   `os` (*type:* `String.t`, *default:* `nil`) - 
  *   `uxInterface` (*type:* `integer()`, *default:* `nil`) - An enum taken from GWSLogEntryProto that indicates what type of device a request came from. This includes an entry for DESKTOP(1), MOBILE(2), and TABLET(3) devices. Reference: - gwslog(608): GWSLogEntryProto.ux_interface
  *   `uxTier` (*type:* `integer()`, *default:* `nil`) - Indicates the device browser tier for the given request. 1 means modern browsers, 3 means very old browsers, and 2 is everything in the middle. See Reference: - gwslog(609): GWSLogEntryProto.ux_tier
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :os => String.t() | nil,
          :uxInterface => integer() | nil,
          :uxTier => integer() | nil
        }

  field(:os)
  field(:uxInterface)
  field(:uxTier)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsCrapsDevice do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsCrapsDevice.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.QualityNavboostCrapsCrapsDevice do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
