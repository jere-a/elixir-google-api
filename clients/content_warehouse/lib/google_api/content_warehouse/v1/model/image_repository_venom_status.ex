# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVenomStatus do
  @moduledoc """


  ## Attributes

  *   `acl` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomACL.t`, *default:* `nil`) - Venom ACL of the video. Used to check if other systems, such as Ares, are able to process the video.
  *   `deletionTimestampUsec` (*type:* `String.t`, *default:* `nil`) - 
  *   `genus` (*type:* `String.t`, *default:* `nil`) - The Genus (Venom's client ID) that this media belongs to.
  *   `insertionResponseTimestampUsec` (*type:* `String.t`, *default:* `nil`) - Time that VideoNotification result was received from Venom.
  *   `insertionTimestampUsec` (*type:* `String.t`, *default:* `nil`) - 
  *   `lastInsertionAttemptsNum` (*type:* `integer()`, *default:* `nil`) - Record the attempts num of previous insertion. It's only updated when either the insertion succeeds or fails with reason INSERTION_ATTEMPTS_EXCEEDED, but it's always set so that we can easily construct venom_id with this attempts num for future insertions.
  *   `reason` (*type:* `String.t`, *default:* `nil`) - 
  *   `settings` (*type:* `list(GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomSettings.t)`, *default:* `nil`) - The Settings that were used to customize the Venom request for this media.
  *   `state` (*type:* `String.t`, *default:* `nil`) - 
  *   `transition` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomTransition.t`, *default:* `nil`) - Transition contains the Objective and Outcome of the latest Venom run.
  *   `venomId` (*type:* `GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomVideoId.t`, *default:* `nil`) - The media's unique identifier within Venom.
  *   `venomMutationGeneration` (*type:* `String.t`, *default:* `nil`) - The generation number returned by Venom.
  *   `videoVenomSetting` (*type:* `String.t`, *default:* `nil`) - This field is not persisted anywhere. It is only used in deletion service for converying the VideoVenomSetting when deleting Venom data.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :acl => GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomACL.t() | nil,
          :deletionTimestampUsec => String.t() | nil,
          :genus => String.t() | nil,
          :insertionResponseTimestampUsec => String.t() | nil,
          :insertionTimestampUsec => String.t() | nil,
          :lastInsertionAttemptsNum => integer() | nil,
          :reason => String.t() | nil,
          :settings =>
            list(GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomSettings.t()) | nil,
          :state => String.t() | nil,
          :transition => GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomTransition.t() | nil,
          :venomId => GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomVideoId.t() | nil,
          :venomMutationGeneration => String.t() | nil,
          :videoVenomSetting => String.t() | nil
        }

  field(:acl, as: GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomACL)
  field(:deletionTimestampUsec)
  field(:genus)
  field(:insertionResponseTimestampUsec)
  field(:insertionTimestampUsec)
  field(:lastInsertionAttemptsNum)
  field(:reason)
  field(:settings, as: GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomSettings, type: :list)
  field(:state)
  field(:transition, as: GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomTransition)
  field(:venomId, as: GoogleApi.ContentWarehouse.V1.Model.VideoAssetsVenomVideoId)
  field(:venomMutationGeneration)
  field(:videoVenomSetting)
end

defimpl Poison.Decoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVenomStatus do
  def decode(value, options) do
    GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVenomStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContentWarehouse.V1.Model.ImageRepositoryVenomStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
